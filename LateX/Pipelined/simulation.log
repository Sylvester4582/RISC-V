WARNING: src/instruction_memory.v:22: $readmemb(testcase.txt): Not enough words in the file for the requested range [0:127].

Instruction memory contents:

Instruction Memory[0] = 00000000001000011000001100110011 (hex: 00218333)
  rs1= 3, rs2= 2, opcode=0110011
Instruction Memory[1] = 00000000000100110000001110110011 (hex: 001303b3)
  rs1= 6, rs2= 1, opcode=0110011
Instruction Memory[2] = 00000000011100110000010000110011 (hex: 00730433)
  rs1= 6, rs2= 7, opcode=0110011
Instruction Memory[3] = 00000000000000100011011000000011 (hex: 00023603)
  rs1= 4, rs2= 0, opcode=0000011
Instruction Memory[4] = 01000000001101100000010010110011 (hex: 403604b3)
  rs1=12, rs2= 3, opcode=0110011
Instruction Memory[5] = 00000000001100001110010100110011 (hex: 0030e533)
  rs1= 1, rs2= 3, opcode=0110011
Instruction Memory[6] = 00000000001100001111010110110011 (hex: 0030f5b3)
  rs1= 1, rs2= 3, opcode=0110011
Instruction Memory[7] = 00000000011100100011100000100011 (hex: 00723823)
  rs1= 4, rs2= 7, opcode=0100011
Instruction Memory[8] = 00000000000000000000000000010011 (hex: 00000013)
  rs1= 0, rs2= 0, opcode=0010011
Instruction Memory[9] = 00000000000000000000000000010011 (hex: 00000013)
  rs1= 0, rs2= 0, opcode=0010011
Memory initialized: mem[0]=                  11, mem[1]=                  20, mem[2]=                  30
VCD info: dumpfile results/main_tb.vcd opened for output.
PC initialized to 0x0000000000000000
ALU Calculation: RS1=xxxxxxxxxxxxxxxx, RS2=xxxxxxxxxxxxxxxx, Result=xxxxxxxxxxxxxxxx
Immediate Generator: type=xxx value=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=xxxxxxxxxxxxxxxx, Result=xxxxxxxxxxxxxxxx
Immediate Generator: type=000 value=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=xxxxxxxxxxxxxxxx
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=xxxxxxxxxxxxxxxx
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=xxxxxxxxxxxxxxxX
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=xxxxxxxxxxxxxxxX
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000000, RS2=0000000000000000, Result=0000000000000000

~~~~~~~~~ Initial Register State ~~~~~~~~~
x0 = 0 (0x0000000000000000)
x1 = 5 (0x0000000000000005)
x2 = 6 (0x0000000000000006)
x3 = 9 (0x0000000000000009)
x4 = 16 (0x0000000000000010)
x5 = 0 (0x0000000000000000)
x6 = 0 (0x0000000000000000)
x7 = 0 (0x0000000000000000)
x8 = 0 (0x0000000000000000)
x9 = 0 (0x0000000000000000)
x10 = 0 (0x0000000000000000)
x11 = 0 (0x0000000000000000)
x12 = 0 (0x0000000000000000)
x13 = 0 (0x0000000000000000)
x14 = 0 (0x0000000000000000)
x15 = 0 (0x0000000000000000)
x16 = 0 (0x0000000000000000)
x17 = 0 (0x0000000000000000)
x18 = 0 (0x0000000000000000)
x19 = 0 (0x0000000000000000)
x20 = 0 (0x0000000000000000)
x21 = 0 (0x0000000000000000)
x22 = 0 (0x0000000000000000)
x23 = 0 (0x0000000000000000)
x24 = 0 (0x0000000000000000)
x25 = 0 (0x0000000000000000)
x26 = 0 (0x0000000000000000)
x27 = 0 (0x0000000000000000)
x28 = 0 (0x0000000000000000)
x29 = 0 (0x0000000000000000)
x30 = 0 (0x0000000000000000)
x31 = 0 (0x0000000000000000)

~~~~~~~~~ Initial Memory State [0-9] ~~~~~~~~~
Memory[0] = 11 (0x000000000000000b)
Memory[1] = 20 (0x0000000000000014)
Memory[2] = 30 (0x000000000000001e)
Memory[3] = 0 (0x0000000000000000)
Memory[4] = 0 (0x0000000000000000)
Memory[5] = 0 (0x0000000000000000)
Memory[6] = 0 (0x0000000000000000)
Memory[7] = 0 (0x0000000000000000)
Memory[8] = 0 (0x0000000000000000)
Memory[9] = 0 (0x0000000000000000)
Memory[10] = 0 (0x0000000000000000)

------------------------------------------------------


~~~~~ Cycle 1 ~~~~~
IF Stage:
PC: 0x0000000000000000
Instruction: 0x00218333 (     ADD)

ID Stage:
Instruction: 0x00000000 (UNKNOWN?)

EX Stage:
ALU Operation: UNKNOWN?
RS1 Data: 0 (0x0000000000000000)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:

WB Stage:

Hazard/Forward Info:
Forward A: 00
Forward B: 00

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 0, RS1_DATA=0000000000000000
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR= 0, RS1_DATA=0000000000000000
  ID/EX RS2_ADDR= 0, RS2_DATA=0000000000000000
Register File Read:
  ID Stage RS1 (x 0): Value=0000000000000000
  ID Stage RS2 (x 0): Value=0000000000000000
Instruction Decode: 0x00000000
  - rs1: x 0 (bits [19:15]=00000)
  - rs2: x 0 (bits [24:20]=00000)
  - opcode: 0000000
  - funct3: 000
EX/MEM: Copying store data - RS2=0000000000000000
Immediate Generator: type=000 value=0000000000000002

~~~~~ Cycle 2 ~~~~~
IF Stage:
PC: 0x0000000000000004
Instruction: 0x001303b3 (     ADD)

ID Stage:
Instruction: 0x00218333 (     ADD)

EX Stage:
ALU Operation:      ADD
RS1 Data: 0 (0x0000000000000000)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:

WB Stage:

Hazard/Forward Info:
Forward A: 00
Forward B: 00

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Instruction Decode: 0x00218333
  - rs1: x 3 (bits [19:15]=00011)
  - rs2: x 2 (bits [24:20]=00010)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x 3): Value=0000000000000009
  ID Stage RS2 (x 2): Value=0000000000000006
Pipeline Register Inputs:
  ID/EX RS1_ADDR= 3, RS1_DATA=0000000000000009
  ID/EX RS2_ADDR= 2, RS2_DATA=0000000000000006
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 0, RS1_DATA=0000000000000000
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Immediate Generator: type=000 value=0000000000000001
ALU Calculation: RS1=0000000000000009, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000009, RS2=0000000000000006, Result=0000000000000000
ALU Calculation: RS1=0000000000000009, RS2=0000000000000006, Result=0000000000000000
ALU Calculation: RS1=0000000000000009, RS2=0000000000000006, Result=0000000000000009
ALU Calculation: RS1=0000000000000009, RS2=0000000000000006, Result=000000000000000f
ALU Calculation: RS1=0000000000000009, RS2=0000000000000006, Result=000000000000000f
ALU Calculation: RS1=0000000000000009, RS2=0000000000000006, Result=000000000000000f

~~~~~ Cycle 3 ~~~~~
IF Stage:
PC: 0x0000000000000008
Instruction: 0x00730433 (     ADD)

ID Stage:
Instruction: 0x001303b3 (     ADD)

EX Stage:
ALU Operation:      ADD
RS1 Data: 9 (0x0000000000000009)
RS2 Data: 6 (0x0000000000000006)

MEM Stage:

WB Stage:

Hazard/Forward Info:
Forward A: 00
Forward B: 00

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 3, RS1_DATA=0000000000000009
  EX Stage RS2_ADDR= 2, RS2_DATA=0000000000000006
Pipeline Register Inputs:
  ID/EX RS1_ADDR= 6, RS1_DATA=0000000000000000
  ID/EX RS2_ADDR= 1, RS2_DATA=0000000000000005
Register File Read:
  ID Stage RS1 (x 6): Value=0000000000000000
  ID Stage RS2 (x 1): Value=0000000000000005
Instruction Decode: 0x001303b3
  - rs1: x 6 (bits [19:15]=00110)
  - rs2: x 1 (bits [24:20]=00001)
  - opcode: 0110011
  - funct3: 000
EX/MEM: Copying store data - RS2=0000000000000006
Forwarding MEM->EX RS1: rd= 6
Forwarding: EX_RS1= 6, EX_RS2= 1, MEM_RD= 6, WB_RD= 0, FWD_A=10, FWD_B=00
Immediate Generator: type=000 value=0000000000000007
ALU Calculation: RS1=000000000000000f, RS2=0000000000000006, Result=000000000000000f
ALU Calculation: RS1=000000000000000f, RS2=0000000000000005, Result=000000000000000f
ALU Calculation: RS1=000000000000000f, RS2=0000000000000005, Result=000000000000000f
ALU Calculation: RS1=000000000000000f, RS2=0000000000000005, Result=0000000000000009
ALU Calculation: RS1=000000000000000f, RS2=0000000000000005, Result=0000000000000006
ALU Calculation: RS1=000000000000000f, RS2=0000000000000005, Result=0000000000000000
ALU Calculation: RS1=000000000000000f, RS2=0000000000000005, Result=0000000000000010
ALU Calculation: RS1=000000000000000f, RS2=0000000000000005, Result=0000000000000014

~~~~~ Cycle 4 ~~~~~
IF Stage:
PC: 0x000000000000000c
Instruction: 0x00023603 (      LD)

ID Stage:
Instruction: 0x00730433 (     ADD)

EX Stage:
ALU Operation:      ADD
RS1 Data: 15 (0x000000000000000f)
RS2 Data: 5 (0x0000000000000005)

MEM Stage:

WB Stage:

Hazard/Forward Info:
Forward A: 10
Forward B: 00

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000005
Forwarding MUX: RS1=000000000000000f RS2=0000000000000005 MEM_ALU=000000000000000f WB_DATA=0000000000000000
Instruction Decode: 0x00730433
  - rs1: x 6 (bits [19:15]=00110)
  - rs2: x 7 (bits [24:20]=00111)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x 6): Value=0000000000000000
  ID Stage RS2 (x 7): Value=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR= 6, RS1_DATA=0000000000000000
  ID/EX RS2_ADDR= 7, RS2_DATA=0000000000000000
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 6, RS1_DATA=0000000000000000
  EX Stage RS2_ADDR= 1, RS2_DATA=0000000000000005
Immediate Generator: type=000 value=0000000000000000
Forwarding MEM->EX RS2: rd= 7
Forwarding WB->EX RS1: rd= 6
Forwarding: EX_RS1= 6, EX_RS2= 7, MEM_RD= 7, WB_RD= 6, FWD_A=01, FWD_B=10
ALU Calculation: RS1=0000000000000000, RS2=0000000000000005, Result=0000000000000014
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000014
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000014
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=000000000000001b
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=000000000000000f
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000013
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000033
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000003
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000003
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023
ALU Calculation: RS1=000000000000000f, RS2=0000000000000014, Result=0000000000000023

~~~~~ Cycle 5 ~~~~~
IF Stage:
PC: 0x0000000000000010
Instruction: 0x403604b3 (     SUB)

ID Stage:
Instruction: 0x00023603 (      LD)

EX Stage:
ALU Operation:       LD
RS1 Data: 15 (0x000000000000000f)
RS2 Data: 20 (0x0000000000000014)

MEM Stage:

WB Stage:
Register Write: x6 = 15 (0x000000000000000f)

Hazard/Forward Info:
Forward A: 01
Forward B: 10

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 6, RS1_DATA=0000000000000000
  EX Stage RS2_ADDR= 7, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR= 4, RS1_DATA=0000000000000010
  ID/EX RS2_ADDR= 0, RS2_DATA=0000000000000000
Register File Read:
  ID Stage RS1 (x 4): Value=0000000000000010
  ID Stage RS2 (x 0): Value=0000000000000000
Instruction Decode: 0x00023603
  - rs1: x 4 (bits [19:15]=00100)
  - rs2: x 0 (bits [24:20]=00000)
  - opcode: 0000011
  - funct3: 011
Forwarding MUX: RS1=000000000000000f RS2=0000000000000014 MEM_ALU=0000000000000014 WB_DATA=000000000000000f
Register Write: x6 = 000000000000000f
EX/MEM: Copying store data - RS2=0000000000000014
Immediate Generator: type=000 value=0000000000000403
ALU Calculation: RS1=000000000000000f, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000
ALU Calculation: RS1=0000000000000010, RS2=0000000000000000, Result=0000000000000000

~~~~~ Cycle 6 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:

WB Stage:
Register Write: x7 = 20 (0x0000000000000014)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Register Write: x7 = 0000000000000014
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x12): Value=0000000000000000
  ID Stage RS2 (x 3): Value=0000000000000009
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=0000000000000000
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Memory Read: Address=0000000000000000 (Index=  0) Data=000000000000000b

~~~~~ Cycle 7 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x8 = 35 (0x0000000000000023)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=0000000000000000
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Register File Read:
  ID Stage RS1 (x12): Value=0000000000000000
  ID Stage RS2 (x 3): Value=0000000000000009
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register Write: x8 = 0000000000000023
EX/MEM: Copying store data - RS2=0000000000000000

~~~~~ Cycle 8 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Register Write: x12 = 000000000000000b
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x12): Value=0000000000000000
  ID Stage RS2 (x 3): Value=0000000000000009
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=0000000000000000
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000

~~~~~ Cycle 9 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register Write: x12 = 000000000000000b
EX/MEM: Copying store data - RS2=0000000000000000

~~~~~ Cycle 10 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Register Write: x12 = 000000000000000b
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000

~~~~~ Cycle 11 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register Write: x12 = 000000000000000b
EX/MEM: Copying store data - RS2=0000000000000000

~~~~~ Cycle 12 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Register Write: x12 = 000000000000000b
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000

~~~~~ Cycle 13 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register Write: x12 = 000000000000000b
EX/MEM: Copying store data - RS2=0000000000000000

~~~~~ Cycle 14 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Register Write: x12 = 000000000000000b
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000

~~~~~ Cycle 15 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register Write: x12 = 000000000000000b
EX/MEM: Copying store data - RS2=0000000000000000

~~~~~ Cycle 16 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Register Write: x12 = 000000000000000b
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000

~~~~~ Cycle 17 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register Write: x12 = 000000000000000b
EX/MEM: Copying store data - RS2=0000000000000000

~~~~~ Cycle 18 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Register Write: x12 = 000000000000000b
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000

~~~~~ Cycle 19 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register Write: x12 = 000000000000000b
EX/MEM: Copying store data - RS2=0000000000000000

~~~~~ Cycle 20 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
EX/MEM: Copying store data - RS2=0000000000000000
Register Write: x12 = 000000000000000b
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000

~~~~~ Cycle 21 ~~~~~
IF Stage:
PC: 0x0000000000000014
Instruction: 0x0030e533 (      OR)

ID Stage:
Instruction: 0x403604b3 (     SUB)
ID Stage Stalled

EX Stage:
ALU Operation:      SUB
RS1 Data: 16 (0x0000000000000010)
RS2 Data: 0 (0x0000000000000000)

MEM Stage:
Memory Read: Address=0x0000000000000000 Data=11

WB Stage:
Register Write: x12 = 11 (0x000000000000000b)

Hazard/Forward Info:
Forward A: 00
Forward B: 00
Pipeline Hazard Detected

------------------------------------------------------
Pipeline Register Outputs:
  EX Stage RS1_ADDR= 4, RS1_DATA=0000000000000010
  EX Stage RS2_ADDR= 0, RS2_DATA=0000000000000000
Pipeline Register Inputs:
  ID/EX RS1_ADDR=12, RS1_DATA=000000000000000b
  ID/EX RS2_ADDR= 3, RS2_DATA=0000000000000009
Register File Read:
  ID Stage RS1 (x12): Value=000000000000000b
  ID Stage RS2 (x 3): Value=0000000000000009
Instruction Decode: 0x403604b3
  - rs1: x12 (bits [19:15]=01100)
  - rs2: x 3 (bits [24:20]=00011)
  - opcode: 0110011
  - funct3: 000
Register Write: x12 = 000000000000000b
EX/MEM: Copying store data - RS2=0000000000000000

~~~~~~~~~ Final Register State ~~~~~~~~~
x0 = 0 (0x0000000000000000)
x1 = 5 (0x0000000000000005)
x2 = 6 (0x0000000000000006)
x3 = 9 (0x0000000000000009)
x4 = 16 (0x0000000000000010)
x5 = 0 (0x0000000000000000)
x6 = 15 (0x000000000000000f)
x7 = 20 (0x0000000000000014)
x8 = 35 (0x0000000000000023)
x9 = 0 (0x0000000000000000)
x10 = 0 (0x0000000000000000)
x11 = 0 (0x0000000000000000)
x12 = 11 (0x000000000000000b)
x13 = 0 (0x0000000000000000)
x14 = 0 (0x0000000000000000)
x15 = 0 (0x0000000000000000)
x16 = 0 (0x0000000000000000)
x17 = 0 (0x0000000000000000)
x18 = 0 (0x0000000000000000)
x19 = 0 (0x0000000000000000)
x20 = 0 (0x0000000000000000)
x21 = 0 (0x0000000000000000)
x22 = 0 (0x0000000000000000)
x23 = 0 (0x0000000000000000)
x24 = 0 (0x0000000000000000)
x25 = 0 (0x0000000000000000)
x26 = 0 (0x0000000000000000)
x27 = 0 (0x0000000000000000)
x28 = 0 (0x0000000000000000)
x29 = 0 (0x0000000000000000)
x30 = 0 (0x0000000000000000)
x31 = 0 (0x0000000000000000)

~~~~~~~~~ Final Memory State [0-9] ~~~~~~~~~
Memory[0] = 11 (0x000000000000000b)
Memory[1] = 20 (0x0000000000000014)
Memory[2] = 30 (0x000000000000001e)
Memory[3] = 0 (0x0000000000000000)
Memory[4] = 0 (0x0000000000000000)
Memory[5] = 0 (0x0000000000000000)
Memory[6] = 0 (0x0000000000000000)
Memory[7] = 0 (0x0000000000000000)
Memory[8] = 0 (0x0000000000000000)
Memory[9] = 0 (0x0000000000000000)
main_tb.v:65: $finish called at 225 (1s)
