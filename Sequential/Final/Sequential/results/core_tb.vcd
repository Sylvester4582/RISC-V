$date
	Tue Mar 04 00:15:11 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module core_tb $end
$var reg 1 ! clk $end
$var reg 1 " prev_reg_write $end
$var reg 64 # prev_write_data [63:0] $end
$var reg 5 $ prev_write_reg [4:0] $end
$var reg 1 % rst $end
$var integer 32 & cycle_count [31:0] $end
$scope function instruction $end
$var reg 32 ' inst [31:0] $end
$upscope $end
$scope module dut $end
$var wire 1 ! clk $end
$var wire 64 ( pc [63:0] $end
$var wire 1 % rst $end
$var wire 64 ) wb_data [63:0] $end
$var wire 64 * rs2_data [63:0] $end
$var wire 64 + rs1_data [63:0] $end
$var wire 1 , reg_write $end
$var wire 1 - mem_write $end
$var wire 64 . mem_read_data [63:0] $end
$var wire 1 / mem_read $end
$var wire 32 0 instruction [31:0] $end
$var wire 64 1 immediate [63:0] $end
$var wire 3 2 imm_type [2:0] $end
$var wire 64 3 branch_target [63:0] $end
$var wire 1 4 branch_taken $end
$var wire 1 5 branch $end
$var wire 1 6 alu_src_b_sel $end
$var wire 64 7 alu_result [63:0] $end
$var wire 7 8 alu_funct7 [6:0] $end
$var wire 3 9 alu_funct3 [2:0] $end
$var reg 64 : pc_reg [63:0] $end
$scope module alu_unit $end
$var wire 1 ; is_add $end
$var wire 1 < is_and $end
$var wire 1 = is_or $end
$var wire 1 > is_sll $end
$var wire 1 ? is_slt $end
$var wire 1 @ is_sltu $end
$var wire 1 A is_sra $end
$var wire 1 B is_srl $end
$var wire 1 C is_sub $end
$var wire 1 D is_xor $end
$var wire 64 E rs2 [63:0] $end
$var wire 64 F xor_final [63:0] $end
$var wire 64 G sub_final [63:0] $end
$var wire 64 H srl_final [63:0] $end
$var wire 64 I sra_final [63:0] $end
$var wire 64 J sltu_final [63:0] $end
$var wire 64 K slt_final [63:0] $end
$var wire 64 L sll_final [63:0] $end
$var wire 64 M rs1 [63:0] $end
$var wire 64 N or_final [63:0] $end
$var wire 7 O funct7 [6:0] $end
$var wire 3 P funct3 [2:0] $end
$var wire 64 Q and_final [63:0] $end
$var wire 64 R add_final [63:0] $end
$var reg 64 S rd [63:0] $end
$scope module add $end
$var wire 64 T b [63:0] $end
$var wire 1 U cin $end
$var wire 64 V sum [63:0] $end
$var wire 1 W cout $end
$var wire 65 X carry [64:0] $end
$var wire 64 Y a [63:0] $end
$scope begin adders[0] $end
$scope module fa $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ cin $end
$var wire 1 ] cout $end
$var wire 1 ^ sum $end
$var wire 1 _ temp1 $end
$var wire 1 ` temp2 $end
$var wire 1 a temp3 $end
$upscope $end
$upscope $end
$scope begin adders[1] $end
$scope module fa $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d cin $end
$var wire 1 e cout $end
$var wire 1 f sum $end
$var wire 1 g temp1 $end
$var wire 1 h temp2 $end
$var wire 1 i temp3 $end
$upscope $end
$upscope $end
$scope begin adders[2] $end
$scope module fa $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l cin $end
$var wire 1 m cout $end
$var wire 1 n sum $end
$var wire 1 o temp1 $end
$var wire 1 p temp2 $end
$var wire 1 q temp3 $end
$upscope $end
$upscope $end
$scope begin adders[3] $end
$scope module fa $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t cin $end
$var wire 1 u cout $end
$var wire 1 v sum $end
$var wire 1 w temp1 $end
$var wire 1 x temp2 $end
$var wire 1 y temp3 $end
$upscope $end
$upscope $end
$scope begin adders[4] $end
$scope module fa $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } cout $end
$var wire 1 ~ sum $end
$var wire 1 !" temp1 $end
$var wire 1 "" temp2 $end
$var wire 1 #" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[5] $end
$scope module fa $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 &" cin $end
$var wire 1 '" cout $end
$var wire 1 (" sum $end
$var wire 1 )" temp1 $end
$var wire 1 *" temp2 $end
$var wire 1 +" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[6] $end
$scope module fa $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." cin $end
$var wire 1 /" cout $end
$var wire 1 0" sum $end
$var wire 1 1" temp1 $end
$var wire 1 2" temp2 $end
$var wire 1 3" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[7] $end
$scope module fa $end
$var wire 1 4" a $end
$var wire 1 5" b $end
$var wire 1 6" cin $end
$var wire 1 7" cout $end
$var wire 1 8" sum $end
$var wire 1 9" temp1 $end
$var wire 1 :" temp2 $end
$var wire 1 ;" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[8] $end
$scope module fa $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 >" cin $end
$var wire 1 ?" cout $end
$var wire 1 @" sum $end
$var wire 1 A" temp1 $end
$var wire 1 B" temp2 $end
$var wire 1 C" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[9] $end
$scope module fa $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" cin $end
$var wire 1 G" cout $end
$var wire 1 H" sum $end
$var wire 1 I" temp1 $end
$var wire 1 J" temp2 $end
$var wire 1 K" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[10] $end
$scope module fa $end
$var wire 1 L" a $end
$var wire 1 M" b $end
$var wire 1 N" cin $end
$var wire 1 O" cout $end
$var wire 1 P" sum $end
$var wire 1 Q" temp1 $end
$var wire 1 R" temp2 $end
$var wire 1 S" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[11] $end
$scope module fa $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" cin $end
$var wire 1 W" cout $end
$var wire 1 X" sum $end
$var wire 1 Y" temp1 $end
$var wire 1 Z" temp2 $end
$var wire 1 [" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[12] $end
$scope module fa $end
$var wire 1 \" a $end
$var wire 1 ]" b $end
$var wire 1 ^" cin $end
$var wire 1 _" cout $end
$var wire 1 `" sum $end
$var wire 1 a" temp1 $end
$var wire 1 b" temp2 $end
$var wire 1 c" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[13] $end
$scope module fa $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 f" cin $end
$var wire 1 g" cout $end
$var wire 1 h" sum $end
$var wire 1 i" temp1 $end
$var wire 1 j" temp2 $end
$var wire 1 k" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[14] $end
$scope module fa $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 n" cin $end
$var wire 1 o" cout $end
$var wire 1 p" sum $end
$var wire 1 q" temp1 $end
$var wire 1 r" temp2 $end
$var wire 1 s" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[15] $end
$scope module fa $end
$var wire 1 t" a $end
$var wire 1 u" b $end
$var wire 1 v" cin $end
$var wire 1 w" cout $end
$var wire 1 x" sum $end
$var wire 1 y" temp1 $end
$var wire 1 z" temp2 $end
$var wire 1 {" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[16] $end
$scope module fa $end
$var wire 1 |" a $end
$var wire 1 }" b $end
$var wire 1 ~" cin $end
$var wire 1 !# cout $end
$var wire 1 "# sum $end
$var wire 1 ## temp1 $end
$var wire 1 $# temp2 $end
$var wire 1 %# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[17] $end
$scope module fa $end
$var wire 1 &# a $end
$var wire 1 '# b $end
$var wire 1 (# cin $end
$var wire 1 )# cout $end
$var wire 1 *# sum $end
$var wire 1 +# temp1 $end
$var wire 1 ,# temp2 $end
$var wire 1 -# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[18] $end
$scope module fa $end
$var wire 1 .# a $end
$var wire 1 /# b $end
$var wire 1 0# cin $end
$var wire 1 1# cout $end
$var wire 1 2# sum $end
$var wire 1 3# temp1 $end
$var wire 1 4# temp2 $end
$var wire 1 5# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[19] $end
$scope module fa $end
$var wire 1 6# a $end
$var wire 1 7# b $end
$var wire 1 8# cin $end
$var wire 1 9# cout $end
$var wire 1 :# sum $end
$var wire 1 ;# temp1 $end
$var wire 1 <# temp2 $end
$var wire 1 =# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[20] $end
$scope module fa $end
$var wire 1 ># a $end
$var wire 1 ?# b $end
$var wire 1 @# cin $end
$var wire 1 A# cout $end
$var wire 1 B# sum $end
$var wire 1 C# temp1 $end
$var wire 1 D# temp2 $end
$var wire 1 E# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[21] $end
$scope module fa $end
$var wire 1 F# a $end
$var wire 1 G# b $end
$var wire 1 H# cin $end
$var wire 1 I# cout $end
$var wire 1 J# sum $end
$var wire 1 K# temp1 $end
$var wire 1 L# temp2 $end
$var wire 1 M# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[22] $end
$scope module fa $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 P# cin $end
$var wire 1 Q# cout $end
$var wire 1 R# sum $end
$var wire 1 S# temp1 $end
$var wire 1 T# temp2 $end
$var wire 1 U# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[23] $end
$scope module fa $end
$var wire 1 V# a $end
$var wire 1 W# b $end
$var wire 1 X# cin $end
$var wire 1 Y# cout $end
$var wire 1 Z# sum $end
$var wire 1 [# temp1 $end
$var wire 1 \# temp2 $end
$var wire 1 ]# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[24] $end
$scope module fa $end
$var wire 1 ^# a $end
$var wire 1 _# b $end
$var wire 1 `# cin $end
$var wire 1 a# cout $end
$var wire 1 b# sum $end
$var wire 1 c# temp1 $end
$var wire 1 d# temp2 $end
$var wire 1 e# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[25] $end
$scope module fa $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 h# cin $end
$var wire 1 i# cout $end
$var wire 1 j# sum $end
$var wire 1 k# temp1 $end
$var wire 1 l# temp2 $end
$var wire 1 m# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[26] $end
$scope module fa $end
$var wire 1 n# a $end
$var wire 1 o# b $end
$var wire 1 p# cin $end
$var wire 1 q# cout $end
$var wire 1 r# sum $end
$var wire 1 s# temp1 $end
$var wire 1 t# temp2 $end
$var wire 1 u# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[27] $end
$scope module fa $end
$var wire 1 v# a $end
$var wire 1 w# b $end
$var wire 1 x# cin $end
$var wire 1 y# cout $end
$var wire 1 z# sum $end
$var wire 1 {# temp1 $end
$var wire 1 |# temp2 $end
$var wire 1 }# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[28] $end
$scope module fa $end
$var wire 1 ~# a $end
$var wire 1 !$ b $end
$var wire 1 "$ cin $end
$var wire 1 #$ cout $end
$var wire 1 $$ sum $end
$var wire 1 %$ temp1 $end
$var wire 1 &$ temp2 $end
$var wire 1 '$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[29] $end
$scope module fa $end
$var wire 1 ($ a $end
$var wire 1 )$ b $end
$var wire 1 *$ cin $end
$var wire 1 +$ cout $end
$var wire 1 ,$ sum $end
$var wire 1 -$ temp1 $end
$var wire 1 .$ temp2 $end
$var wire 1 /$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[30] $end
$scope module fa $end
$var wire 1 0$ a $end
$var wire 1 1$ b $end
$var wire 1 2$ cin $end
$var wire 1 3$ cout $end
$var wire 1 4$ sum $end
$var wire 1 5$ temp1 $end
$var wire 1 6$ temp2 $end
$var wire 1 7$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[31] $end
$scope module fa $end
$var wire 1 8$ a $end
$var wire 1 9$ b $end
$var wire 1 :$ cin $end
$var wire 1 ;$ cout $end
$var wire 1 <$ sum $end
$var wire 1 =$ temp1 $end
$var wire 1 >$ temp2 $end
$var wire 1 ?$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[32] $end
$scope module fa $end
$var wire 1 @$ a $end
$var wire 1 A$ b $end
$var wire 1 B$ cin $end
$var wire 1 C$ cout $end
$var wire 1 D$ sum $end
$var wire 1 E$ temp1 $end
$var wire 1 F$ temp2 $end
$var wire 1 G$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[33] $end
$scope module fa $end
$var wire 1 H$ a $end
$var wire 1 I$ b $end
$var wire 1 J$ cin $end
$var wire 1 K$ cout $end
$var wire 1 L$ sum $end
$var wire 1 M$ temp1 $end
$var wire 1 N$ temp2 $end
$var wire 1 O$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[34] $end
$scope module fa $end
$var wire 1 P$ a $end
$var wire 1 Q$ b $end
$var wire 1 R$ cin $end
$var wire 1 S$ cout $end
$var wire 1 T$ sum $end
$var wire 1 U$ temp1 $end
$var wire 1 V$ temp2 $end
$var wire 1 W$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[35] $end
$scope module fa $end
$var wire 1 X$ a $end
$var wire 1 Y$ b $end
$var wire 1 Z$ cin $end
$var wire 1 [$ cout $end
$var wire 1 \$ sum $end
$var wire 1 ]$ temp1 $end
$var wire 1 ^$ temp2 $end
$var wire 1 _$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[36] $end
$scope module fa $end
$var wire 1 `$ a $end
$var wire 1 a$ b $end
$var wire 1 b$ cin $end
$var wire 1 c$ cout $end
$var wire 1 d$ sum $end
$var wire 1 e$ temp1 $end
$var wire 1 f$ temp2 $end
$var wire 1 g$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[37] $end
$scope module fa $end
$var wire 1 h$ a $end
$var wire 1 i$ b $end
$var wire 1 j$ cin $end
$var wire 1 k$ cout $end
$var wire 1 l$ sum $end
$var wire 1 m$ temp1 $end
$var wire 1 n$ temp2 $end
$var wire 1 o$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[38] $end
$scope module fa $end
$var wire 1 p$ a $end
$var wire 1 q$ b $end
$var wire 1 r$ cin $end
$var wire 1 s$ cout $end
$var wire 1 t$ sum $end
$var wire 1 u$ temp1 $end
$var wire 1 v$ temp2 $end
$var wire 1 w$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[39] $end
$scope module fa $end
$var wire 1 x$ a $end
$var wire 1 y$ b $end
$var wire 1 z$ cin $end
$var wire 1 {$ cout $end
$var wire 1 |$ sum $end
$var wire 1 }$ temp1 $end
$var wire 1 ~$ temp2 $end
$var wire 1 !% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[40] $end
$scope module fa $end
$var wire 1 "% a $end
$var wire 1 #% b $end
$var wire 1 $% cin $end
$var wire 1 %% cout $end
$var wire 1 &% sum $end
$var wire 1 '% temp1 $end
$var wire 1 (% temp2 $end
$var wire 1 )% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[41] $end
$scope module fa $end
$var wire 1 *% a $end
$var wire 1 +% b $end
$var wire 1 ,% cin $end
$var wire 1 -% cout $end
$var wire 1 .% sum $end
$var wire 1 /% temp1 $end
$var wire 1 0% temp2 $end
$var wire 1 1% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[42] $end
$scope module fa $end
$var wire 1 2% a $end
$var wire 1 3% b $end
$var wire 1 4% cin $end
$var wire 1 5% cout $end
$var wire 1 6% sum $end
$var wire 1 7% temp1 $end
$var wire 1 8% temp2 $end
$var wire 1 9% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[43] $end
$scope module fa $end
$var wire 1 :% a $end
$var wire 1 ;% b $end
$var wire 1 <% cin $end
$var wire 1 =% cout $end
$var wire 1 >% sum $end
$var wire 1 ?% temp1 $end
$var wire 1 @% temp2 $end
$var wire 1 A% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[44] $end
$scope module fa $end
$var wire 1 B% a $end
$var wire 1 C% b $end
$var wire 1 D% cin $end
$var wire 1 E% cout $end
$var wire 1 F% sum $end
$var wire 1 G% temp1 $end
$var wire 1 H% temp2 $end
$var wire 1 I% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[45] $end
$scope module fa $end
$var wire 1 J% a $end
$var wire 1 K% b $end
$var wire 1 L% cin $end
$var wire 1 M% cout $end
$var wire 1 N% sum $end
$var wire 1 O% temp1 $end
$var wire 1 P% temp2 $end
$var wire 1 Q% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[46] $end
$scope module fa $end
$var wire 1 R% a $end
$var wire 1 S% b $end
$var wire 1 T% cin $end
$var wire 1 U% cout $end
$var wire 1 V% sum $end
$var wire 1 W% temp1 $end
$var wire 1 X% temp2 $end
$var wire 1 Y% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[47] $end
$scope module fa $end
$var wire 1 Z% a $end
$var wire 1 [% b $end
$var wire 1 \% cin $end
$var wire 1 ]% cout $end
$var wire 1 ^% sum $end
$var wire 1 _% temp1 $end
$var wire 1 `% temp2 $end
$var wire 1 a% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[48] $end
$scope module fa $end
$var wire 1 b% a $end
$var wire 1 c% b $end
$var wire 1 d% cin $end
$var wire 1 e% cout $end
$var wire 1 f% sum $end
$var wire 1 g% temp1 $end
$var wire 1 h% temp2 $end
$var wire 1 i% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[49] $end
$scope module fa $end
$var wire 1 j% a $end
$var wire 1 k% b $end
$var wire 1 l% cin $end
$var wire 1 m% cout $end
$var wire 1 n% sum $end
$var wire 1 o% temp1 $end
$var wire 1 p% temp2 $end
$var wire 1 q% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[50] $end
$scope module fa $end
$var wire 1 r% a $end
$var wire 1 s% b $end
$var wire 1 t% cin $end
$var wire 1 u% cout $end
$var wire 1 v% sum $end
$var wire 1 w% temp1 $end
$var wire 1 x% temp2 $end
$var wire 1 y% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[51] $end
$scope module fa $end
$var wire 1 z% a $end
$var wire 1 {% b $end
$var wire 1 |% cin $end
$var wire 1 }% cout $end
$var wire 1 ~% sum $end
$var wire 1 !& temp1 $end
$var wire 1 "& temp2 $end
$var wire 1 #& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[52] $end
$scope module fa $end
$var wire 1 $& a $end
$var wire 1 %& b $end
$var wire 1 && cin $end
$var wire 1 '& cout $end
$var wire 1 (& sum $end
$var wire 1 )& temp1 $end
$var wire 1 *& temp2 $end
$var wire 1 +& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[53] $end
$scope module fa $end
$var wire 1 ,& a $end
$var wire 1 -& b $end
$var wire 1 .& cin $end
$var wire 1 /& cout $end
$var wire 1 0& sum $end
$var wire 1 1& temp1 $end
$var wire 1 2& temp2 $end
$var wire 1 3& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[54] $end
$scope module fa $end
$var wire 1 4& a $end
$var wire 1 5& b $end
$var wire 1 6& cin $end
$var wire 1 7& cout $end
$var wire 1 8& sum $end
$var wire 1 9& temp1 $end
$var wire 1 :& temp2 $end
$var wire 1 ;& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[55] $end
$scope module fa $end
$var wire 1 <& a $end
$var wire 1 =& b $end
$var wire 1 >& cin $end
$var wire 1 ?& cout $end
$var wire 1 @& sum $end
$var wire 1 A& temp1 $end
$var wire 1 B& temp2 $end
$var wire 1 C& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[56] $end
$scope module fa $end
$var wire 1 D& a $end
$var wire 1 E& b $end
$var wire 1 F& cin $end
$var wire 1 G& cout $end
$var wire 1 H& sum $end
$var wire 1 I& temp1 $end
$var wire 1 J& temp2 $end
$var wire 1 K& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[57] $end
$scope module fa $end
$var wire 1 L& a $end
$var wire 1 M& b $end
$var wire 1 N& cin $end
$var wire 1 O& cout $end
$var wire 1 P& sum $end
$var wire 1 Q& temp1 $end
$var wire 1 R& temp2 $end
$var wire 1 S& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[58] $end
$scope module fa $end
$var wire 1 T& a $end
$var wire 1 U& b $end
$var wire 1 V& cin $end
$var wire 1 W& cout $end
$var wire 1 X& sum $end
$var wire 1 Y& temp1 $end
$var wire 1 Z& temp2 $end
$var wire 1 [& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[59] $end
$scope module fa $end
$var wire 1 \& a $end
$var wire 1 ]& b $end
$var wire 1 ^& cin $end
$var wire 1 _& cout $end
$var wire 1 `& sum $end
$var wire 1 a& temp1 $end
$var wire 1 b& temp2 $end
$var wire 1 c& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[60] $end
$scope module fa $end
$var wire 1 d& a $end
$var wire 1 e& b $end
$var wire 1 f& cin $end
$var wire 1 g& cout $end
$var wire 1 h& sum $end
$var wire 1 i& temp1 $end
$var wire 1 j& temp2 $end
$var wire 1 k& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[61] $end
$scope module fa $end
$var wire 1 l& a $end
$var wire 1 m& b $end
$var wire 1 n& cin $end
$var wire 1 o& cout $end
$var wire 1 p& sum $end
$var wire 1 q& temp1 $end
$var wire 1 r& temp2 $end
$var wire 1 s& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[62] $end
$scope module fa $end
$var wire 1 t& a $end
$var wire 1 u& b $end
$var wire 1 v& cin $end
$var wire 1 w& cout $end
$var wire 1 x& sum $end
$var wire 1 y& temp1 $end
$var wire 1 z& temp2 $end
$var wire 1 {& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[63] $end
$scope module fa $end
$var wire 1 |& a $end
$var wire 1 }& b $end
$var wire 1 ~& cin $end
$var wire 1 !' cout $end
$var wire 1 "' sum $end
$var wire 1 #' temp1 $end
$var wire 1 $' temp2 $end
$var wire 1 %' temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module comparison_operations $end
$var wire 1 &' a_neg $end
$var wire 64 '' b [63:0] $end
$var wire 1 (' diff_sign $end
$var wire 1 )' is_less_s $end
$var wire 1 *' same_less $end
$var wire 1 +' sub_neg $end
$var wire 63 ,' zeros [62:0] $end
$var wire 64 -' sub [63:0] $end
$var wire 64 .' sltu_final [63:0] $end
$var wire 64 /' slt_final [63:0] $end
$var wire 65 0' prop [64:0] $end
$var wire 64 1' lt_temp [63:0] $end
$var wire 64 2' lt [63:0] $end
$var wire 1 3' is_less_u $end
$var wire 64 4' gt [63:0] $end
$var wire 64 5' eq [63:0] $end
$var wire 64 6' a [63:0] $end
$scope begin compare_each_bit[0] $end
$upscope $end
$scope begin compare_each_bit[1] $end
$upscope $end
$scope begin compare_each_bit[2] $end
$upscope $end
$scope begin compare_each_bit[3] $end
$upscope $end
$scope begin compare_each_bit[4] $end
$upscope $end
$scope begin compare_each_bit[5] $end
$upscope $end
$scope begin compare_each_bit[6] $end
$upscope $end
$scope begin compare_each_bit[7] $end
$upscope $end
$scope begin compare_each_bit[8] $end
$upscope $end
$scope begin compare_each_bit[9] $end
$upscope $end
$scope begin compare_each_bit[10] $end
$upscope $end
$scope begin compare_each_bit[11] $end
$upscope $end
$scope begin compare_each_bit[12] $end
$upscope $end
$scope begin compare_each_bit[13] $end
$upscope $end
$scope begin compare_each_bit[14] $end
$upscope $end
$scope begin compare_each_bit[15] $end
$upscope $end
$scope begin compare_each_bit[16] $end
$upscope $end
$scope begin compare_each_bit[17] $end
$upscope $end
$scope begin compare_each_bit[18] $end
$upscope $end
$scope begin compare_each_bit[19] $end
$upscope $end
$scope begin compare_each_bit[20] $end
$upscope $end
$scope begin compare_each_bit[21] $end
$upscope $end
$scope begin compare_each_bit[22] $end
$upscope $end
$scope begin compare_each_bit[23] $end
$upscope $end
$scope begin compare_each_bit[24] $end
$upscope $end
$scope begin compare_each_bit[25] $end
$upscope $end
$scope begin compare_each_bit[26] $end
$upscope $end
$scope begin compare_each_bit[27] $end
$upscope $end
$scope begin compare_each_bit[28] $end
$upscope $end
$scope begin compare_each_bit[29] $end
$upscope $end
$scope begin compare_each_bit[30] $end
$upscope $end
$scope begin compare_each_bit[31] $end
$upscope $end
$scope begin compare_each_bit[32] $end
$upscope $end
$scope begin compare_each_bit[33] $end
$upscope $end
$scope begin compare_each_bit[34] $end
$upscope $end
$scope begin compare_each_bit[35] $end
$upscope $end
$scope begin compare_each_bit[36] $end
$upscope $end
$scope begin compare_each_bit[37] $end
$upscope $end
$scope begin compare_each_bit[38] $end
$upscope $end
$scope begin compare_each_bit[39] $end
$upscope $end
$scope begin compare_each_bit[40] $end
$upscope $end
$scope begin compare_each_bit[41] $end
$upscope $end
$scope begin compare_each_bit[42] $end
$upscope $end
$scope begin compare_each_bit[43] $end
$upscope $end
$scope begin compare_each_bit[44] $end
$upscope $end
$scope begin compare_each_bit[45] $end
$upscope $end
$scope begin compare_each_bit[46] $end
$upscope $end
$scope begin compare_each_bit[47] $end
$upscope $end
$scope begin compare_each_bit[48] $end
$upscope $end
$scope begin compare_each_bit[49] $end
$upscope $end
$scope begin compare_each_bit[50] $end
$upscope $end
$scope begin compare_each_bit[51] $end
$upscope $end
$scope begin compare_each_bit[52] $end
$upscope $end
$scope begin compare_each_bit[53] $end
$upscope $end
$scope begin compare_each_bit[54] $end
$upscope $end
$scope begin compare_each_bit[55] $end
$upscope $end
$scope begin compare_each_bit[56] $end
$upscope $end
$scope begin compare_each_bit[57] $end
$upscope $end
$scope begin compare_each_bit[58] $end
$upscope $end
$scope begin compare_each_bit[59] $end
$upscope $end
$scope begin compare_each_bit[60] $end
$upscope $end
$scope begin compare_each_bit[61] $end
$upscope $end
$scope begin compare_each_bit[62] $end
$upscope $end
$scope begin compare_each_bit[63] $end
$upscope $end
$scope begin priority[0] $end
$upscope $end
$scope begin priority[1] $end
$upscope $end
$scope begin priority[2] $end
$upscope $end
$scope begin priority[3] $end
$upscope $end
$scope begin priority[4] $end
$upscope $end
$scope begin priority[5] $end
$upscope $end
$scope begin priority[6] $end
$upscope $end
$scope begin priority[7] $end
$upscope $end
$scope begin priority[8] $end
$upscope $end
$scope begin priority[9] $end
$upscope $end
$scope begin priority[10] $end
$upscope $end
$scope begin priority[11] $end
$upscope $end
$scope begin priority[12] $end
$upscope $end
$scope begin priority[13] $end
$upscope $end
$scope begin priority[14] $end
$upscope $end
$scope begin priority[15] $end
$upscope $end
$scope begin priority[16] $end
$upscope $end
$scope begin priority[17] $end
$upscope $end
$scope begin priority[18] $end
$upscope $end
$scope begin priority[19] $end
$upscope $end
$scope begin priority[20] $end
$upscope $end
$scope begin priority[21] $end
$upscope $end
$scope begin priority[22] $end
$upscope $end
$scope begin priority[23] $end
$upscope $end
$scope begin priority[24] $end
$upscope $end
$scope begin priority[25] $end
$upscope $end
$scope begin priority[26] $end
$upscope $end
$scope begin priority[27] $end
$upscope $end
$scope begin priority[28] $end
$upscope $end
$scope begin priority[29] $end
$upscope $end
$scope begin priority[30] $end
$upscope $end
$scope begin priority[31] $end
$upscope $end
$scope begin priority[32] $end
$upscope $end
$scope begin priority[33] $end
$upscope $end
$scope begin priority[34] $end
$upscope $end
$scope begin priority[35] $end
$upscope $end
$scope begin priority[36] $end
$upscope $end
$scope begin priority[37] $end
$upscope $end
$scope begin priority[38] $end
$upscope $end
$scope begin priority[39] $end
$upscope $end
$scope begin priority[40] $end
$upscope $end
$scope begin priority[41] $end
$upscope $end
$scope begin priority[42] $end
$upscope $end
$scope begin priority[43] $end
$upscope $end
$scope begin priority[44] $end
$upscope $end
$scope begin priority[45] $end
$upscope $end
$scope begin priority[46] $end
$upscope $end
$scope begin priority[47] $end
$upscope $end
$scope begin priority[48] $end
$upscope $end
$scope begin priority[49] $end
$upscope $end
$scope begin priority[50] $end
$upscope $end
$scope begin priority[51] $end
$upscope $end
$scope begin priority[52] $end
$upscope $end
$scope begin priority[53] $end
$upscope $end
$scope begin priority[54] $end
$upscope $end
$scope begin priority[55] $end
$upscope $end
$scope begin priority[56] $end
$upscope $end
$scope begin priority[57] $end
$upscope $end
$scope begin priority[58] $end
$upscope $end
$scope begin priority[59] $end
$upscope $end
$scope begin priority[60] $end
$upscope $end
$scope begin priority[61] $end
$upscope $end
$scope begin priority[62] $end
$upscope $end
$scope begin priority[63] $end
$upscope $end
$scope module compare $end
$var wire 64 7' b [63:0] $end
$var wire 64 8' diff [63:0] $end
$var wire 1 9' cout $end
$var wire 64 :' b_complement [63:0] $end
$var wire 64 ;' a [63:0] $end
$scope begin complement[0] $end
$upscope $end
$scope begin complement[1] $end
$upscope $end
$scope begin complement[2] $end
$upscope $end
$scope begin complement[3] $end
$upscope $end
$scope begin complement[4] $end
$upscope $end
$scope begin complement[5] $end
$upscope $end
$scope begin complement[6] $end
$upscope $end
$scope begin complement[7] $end
$upscope $end
$scope begin complement[8] $end
$upscope $end
$scope begin complement[9] $end
$upscope $end
$scope begin complement[10] $end
$upscope $end
$scope begin complement[11] $end
$upscope $end
$scope begin complement[12] $end
$upscope $end
$scope begin complement[13] $end
$upscope $end
$scope begin complement[14] $end
$upscope $end
$scope begin complement[15] $end
$upscope $end
$scope begin complement[16] $end
$upscope $end
$scope begin complement[17] $end
$upscope $end
$scope begin complement[18] $end
$upscope $end
$scope begin complement[19] $end
$upscope $end
$scope begin complement[20] $end
$upscope $end
$scope begin complement[21] $end
$upscope $end
$scope begin complement[22] $end
$upscope $end
$scope begin complement[23] $end
$upscope $end
$scope begin complement[24] $end
$upscope $end
$scope begin complement[25] $end
$upscope $end
$scope begin complement[26] $end
$upscope $end
$scope begin complement[27] $end
$upscope $end
$scope begin complement[28] $end
$upscope $end
$scope begin complement[29] $end
$upscope $end
$scope begin complement[30] $end
$upscope $end
$scope begin complement[31] $end
$upscope $end
$scope begin complement[32] $end
$upscope $end
$scope begin complement[33] $end
$upscope $end
$scope begin complement[34] $end
$upscope $end
$scope begin complement[35] $end
$upscope $end
$scope begin complement[36] $end
$upscope $end
$scope begin complement[37] $end
$upscope $end
$scope begin complement[38] $end
$upscope $end
$scope begin complement[39] $end
$upscope $end
$scope begin complement[40] $end
$upscope $end
$scope begin complement[41] $end
$upscope $end
$scope begin complement[42] $end
$upscope $end
$scope begin complement[43] $end
$upscope $end
$scope begin complement[44] $end
$upscope $end
$scope begin complement[45] $end
$upscope $end
$scope begin complement[46] $end
$upscope $end
$scope begin complement[47] $end
$upscope $end
$scope begin complement[48] $end
$upscope $end
$scope begin complement[49] $end
$upscope $end
$scope begin complement[50] $end
$upscope $end
$scope begin complement[51] $end
$upscope $end
$scope begin complement[52] $end
$upscope $end
$scope begin complement[53] $end
$upscope $end
$scope begin complement[54] $end
$upscope $end
$scope begin complement[55] $end
$upscope $end
$scope begin complement[56] $end
$upscope $end
$scope begin complement[57] $end
$upscope $end
$scope begin complement[58] $end
$upscope $end
$scope begin complement[59] $end
$upscope $end
$scope begin complement[60] $end
$upscope $end
$scope begin complement[61] $end
$upscope $end
$scope begin complement[62] $end
$upscope $end
$scope begin complement[63] $end
$upscope $end
$scope module final $end
$var wire 64 <' b [63:0] $end
$var wire 1 =' cin $end
$var wire 64 >' sum [63:0] $end
$var wire 1 9' cout $end
$var wire 65 ?' carry [64:0] $end
$var wire 64 @' a [63:0] $end
$scope begin adders[0] $end
$scope module fa $end
$var wire 1 A' a $end
$var wire 1 B' b $end
$var wire 1 C' cin $end
$var wire 1 D' cout $end
$var wire 1 E' sum $end
$var wire 1 F' temp1 $end
$var wire 1 G' temp2 $end
$var wire 1 H' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[1] $end
$scope module fa $end
$var wire 1 I' a $end
$var wire 1 J' b $end
$var wire 1 K' cin $end
$var wire 1 L' cout $end
$var wire 1 M' sum $end
$var wire 1 N' temp1 $end
$var wire 1 O' temp2 $end
$var wire 1 P' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[2] $end
$scope module fa $end
$var wire 1 Q' a $end
$var wire 1 R' b $end
$var wire 1 S' cin $end
$var wire 1 T' cout $end
$var wire 1 U' sum $end
$var wire 1 V' temp1 $end
$var wire 1 W' temp2 $end
$var wire 1 X' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[3] $end
$scope module fa $end
$var wire 1 Y' a $end
$var wire 1 Z' b $end
$var wire 1 [' cin $end
$var wire 1 \' cout $end
$var wire 1 ]' sum $end
$var wire 1 ^' temp1 $end
$var wire 1 _' temp2 $end
$var wire 1 `' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[4] $end
$scope module fa $end
$var wire 1 a' a $end
$var wire 1 b' b $end
$var wire 1 c' cin $end
$var wire 1 d' cout $end
$var wire 1 e' sum $end
$var wire 1 f' temp1 $end
$var wire 1 g' temp2 $end
$var wire 1 h' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[5] $end
$scope module fa $end
$var wire 1 i' a $end
$var wire 1 j' b $end
$var wire 1 k' cin $end
$var wire 1 l' cout $end
$var wire 1 m' sum $end
$var wire 1 n' temp1 $end
$var wire 1 o' temp2 $end
$var wire 1 p' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[6] $end
$scope module fa $end
$var wire 1 q' a $end
$var wire 1 r' b $end
$var wire 1 s' cin $end
$var wire 1 t' cout $end
$var wire 1 u' sum $end
$var wire 1 v' temp1 $end
$var wire 1 w' temp2 $end
$var wire 1 x' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[7] $end
$scope module fa $end
$var wire 1 y' a $end
$var wire 1 z' b $end
$var wire 1 {' cin $end
$var wire 1 |' cout $end
$var wire 1 }' sum $end
$var wire 1 ~' temp1 $end
$var wire 1 !( temp2 $end
$var wire 1 "( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[8] $end
$scope module fa $end
$var wire 1 #( a $end
$var wire 1 $( b $end
$var wire 1 %( cin $end
$var wire 1 &( cout $end
$var wire 1 '( sum $end
$var wire 1 (( temp1 $end
$var wire 1 )( temp2 $end
$var wire 1 *( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[9] $end
$scope module fa $end
$var wire 1 +( a $end
$var wire 1 ,( b $end
$var wire 1 -( cin $end
$var wire 1 .( cout $end
$var wire 1 /( sum $end
$var wire 1 0( temp1 $end
$var wire 1 1( temp2 $end
$var wire 1 2( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[10] $end
$scope module fa $end
$var wire 1 3( a $end
$var wire 1 4( b $end
$var wire 1 5( cin $end
$var wire 1 6( cout $end
$var wire 1 7( sum $end
$var wire 1 8( temp1 $end
$var wire 1 9( temp2 $end
$var wire 1 :( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[11] $end
$scope module fa $end
$var wire 1 ;( a $end
$var wire 1 <( b $end
$var wire 1 =( cin $end
$var wire 1 >( cout $end
$var wire 1 ?( sum $end
$var wire 1 @( temp1 $end
$var wire 1 A( temp2 $end
$var wire 1 B( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[12] $end
$scope module fa $end
$var wire 1 C( a $end
$var wire 1 D( b $end
$var wire 1 E( cin $end
$var wire 1 F( cout $end
$var wire 1 G( sum $end
$var wire 1 H( temp1 $end
$var wire 1 I( temp2 $end
$var wire 1 J( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[13] $end
$scope module fa $end
$var wire 1 K( a $end
$var wire 1 L( b $end
$var wire 1 M( cin $end
$var wire 1 N( cout $end
$var wire 1 O( sum $end
$var wire 1 P( temp1 $end
$var wire 1 Q( temp2 $end
$var wire 1 R( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[14] $end
$scope module fa $end
$var wire 1 S( a $end
$var wire 1 T( b $end
$var wire 1 U( cin $end
$var wire 1 V( cout $end
$var wire 1 W( sum $end
$var wire 1 X( temp1 $end
$var wire 1 Y( temp2 $end
$var wire 1 Z( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[15] $end
$scope module fa $end
$var wire 1 [( a $end
$var wire 1 \( b $end
$var wire 1 ]( cin $end
$var wire 1 ^( cout $end
$var wire 1 _( sum $end
$var wire 1 `( temp1 $end
$var wire 1 a( temp2 $end
$var wire 1 b( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[16] $end
$scope module fa $end
$var wire 1 c( a $end
$var wire 1 d( b $end
$var wire 1 e( cin $end
$var wire 1 f( cout $end
$var wire 1 g( sum $end
$var wire 1 h( temp1 $end
$var wire 1 i( temp2 $end
$var wire 1 j( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[17] $end
$scope module fa $end
$var wire 1 k( a $end
$var wire 1 l( b $end
$var wire 1 m( cin $end
$var wire 1 n( cout $end
$var wire 1 o( sum $end
$var wire 1 p( temp1 $end
$var wire 1 q( temp2 $end
$var wire 1 r( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[18] $end
$scope module fa $end
$var wire 1 s( a $end
$var wire 1 t( b $end
$var wire 1 u( cin $end
$var wire 1 v( cout $end
$var wire 1 w( sum $end
$var wire 1 x( temp1 $end
$var wire 1 y( temp2 $end
$var wire 1 z( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[19] $end
$scope module fa $end
$var wire 1 {( a $end
$var wire 1 |( b $end
$var wire 1 }( cin $end
$var wire 1 ~( cout $end
$var wire 1 !) sum $end
$var wire 1 ") temp1 $end
$var wire 1 #) temp2 $end
$var wire 1 $) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[20] $end
$scope module fa $end
$var wire 1 %) a $end
$var wire 1 &) b $end
$var wire 1 ') cin $end
$var wire 1 () cout $end
$var wire 1 )) sum $end
$var wire 1 *) temp1 $end
$var wire 1 +) temp2 $end
$var wire 1 ,) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[21] $end
$scope module fa $end
$var wire 1 -) a $end
$var wire 1 .) b $end
$var wire 1 /) cin $end
$var wire 1 0) cout $end
$var wire 1 1) sum $end
$var wire 1 2) temp1 $end
$var wire 1 3) temp2 $end
$var wire 1 4) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[22] $end
$scope module fa $end
$var wire 1 5) a $end
$var wire 1 6) b $end
$var wire 1 7) cin $end
$var wire 1 8) cout $end
$var wire 1 9) sum $end
$var wire 1 :) temp1 $end
$var wire 1 ;) temp2 $end
$var wire 1 <) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[23] $end
$scope module fa $end
$var wire 1 =) a $end
$var wire 1 >) b $end
$var wire 1 ?) cin $end
$var wire 1 @) cout $end
$var wire 1 A) sum $end
$var wire 1 B) temp1 $end
$var wire 1 C) temp2 $end
$var wire 1 D) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[24] $end
$scope module fa $end
$var wire 1 E) a $end
$var wire 1 F) b $end
$var wire 1 G) cin $end
$var wire 1 H) cout $end
$var wire 1 I) sum $end
$var wire 1 J) temp1 $end
$var wire 1 K) temp2 $end
$var wire 1 L) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[25] $end
$scope module fa $end
$var wire 1 M) a $end
$var wire 1 N) b $end
$var wire 1 O) cin $end
$var wire 1 P) cout $end
$var wire 1 Q) sum $end
$var wire 1 R) temp1 $end
$var wire 1 S) temp2 $end
$var wire 1 T) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[26] $end
$scope module fa $end
$var wire 1 U) a $end
$var wire 1 V) b $end
$var wire 1 W) cin $end
$var wire 1 X) cout $end
$var wire 1 Y) sum $end
$var wire 1 Z) temp1 $end
$var wire 1 [) temp2 $end
$var wire 1 \) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[27] $end
$scope module fa $end
$var wire 1 ]) a $end
$var wire 1 ^) b $end
$var wire 1 _) cin $end
$var wire 1 `) cout $end
$var wire 1 a) sum $end
$var wire 1 b) temp1 $end
$var wire 1 c) temp2 $end
$var wire 1 d) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[28] $end
$scope module fa $end
$var wire 1 e) a $end
$var wire 1 f) b $end
$var wire 1 g) cin $end
$var wire 1 h) cout $end
$var wire 1 i) sum $end
$var wire 1 j) temp1 $end
$var wire 1 k) temp2 $end
$var wire 1 l) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[29] $end
$scope module fa $end
$var wire 1 m) a $end
$var wire 1 n) b $end
$var wire 1 o) cin $end
$var wire 1 p) cout $end
$var wire 1 q) sum $end
$var wire 1 r) temp1 $end
$var wire 1 s) temp2 $end
$var wire 1 t) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[30] $end
$scope module fa $end
$var wire 1 u) a $end
$var wire 1 v) b $end
$var wire 1 w) cin $end
$var wire 1 x) cout $end
$var wire 1 y) sum $end
$var wire 1 z) temp1 $end
$var wire 1 {) temp2 $end
$var wire 1 |) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[31] $end
$scope module fa $end
$var wire 1 }) a $end
$var wire 1 ~) b $end
$var wire 1 !* cin $end
$var wire 1 "* cout $end
$var wire 1 #* sum $end
$var wire 1 $* temp1 $end
$var wire 1 %* temp2 $end
$var wire 1 &* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[32] $end
$scope module fa $end
$var wire 1 '* a $end
$var wire 1 (* b $end
$var wire 1 )* cin $end
$var wire 1 ** cout $end
$var wire 1 +* sum $end
$var wire 1 ,* temp1 $end
$var wire 1 -* temp2 $end
$var wire 1 .* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[33] $end
$scope module fa $end
$var wire 1 /* a $end
$var wire 1 0* b $end
$var wire 1 1* cin $end
$var wire 1 2* cout $end
$var wire 1 3* sum $end
$var wire 1 4* temp1 $end
$var wire 1 5* temp2 $end
$var wire 1 6* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[34] $end
$scope module fa $end
$var wire 1 7* a $end
$var wire 1 8* b $end
$var wire 1 9* cin $end
$var wire 1 :* cout $end
$var wire 1 ;* sum $end
$var wire 1 <* temp1 $end
$var wire 1 =* temp2 $end
$var wire 1 >* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[35] $end
$scope module fa $end
$var wire 1 ?* a $end
$var wire 1 @* b $end
$var wire 1 A* cin $end
$var wire 1 B* cout $end
$var wire 1 C* sum $end
$var wire 1 D* temp1 $end
$var wire 1 E* temp2 $end
$var wire 1 F* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[36] $end
$scope module fa $end
$var wire 1 G* a $end
$var wire 1 H* b $end
$var wire 1 I* cin $end
$var wire 1 J* cout $end
$var wire 1 K* sum $end
$var wire 1 L* temp1 $end
$var wire 1 M* temp2 $end
$var wire 1 N* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[37] $end
$scope module fa $end
$var wire 1 O* a $end
$var wire 1 P* b $end
$var wire 1 Q* cin $end
$var wire 1 R* cout $end
$var wire 1 S* sum $end
$var wire 1 T* temp1 $end
$var wire 1 U* temp2 $end
$var wire 1 V* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[38] $end
$scope module fa $end
$var wire 1 W* a $end
$var wire 1 X* b $end
$var wire 1 Y* cin $end
$var wire 1 Z* cout $end
$var wire 1 [* sum $end
$var wire 1 \* temp1 $end
$var wire 1 ]* temp2 $end
$var wire 1 ^* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[39] $end
$scope module fa $end
$var wire 1 _* a $end
$var wire 1 `* b $end
$var wire 1 a* cin $end
$var wire 1 b* cout $end
$var wire 1 c* sum $end
$var wire 1 d* temp1 $end
$var wire 1 e* temp2 $end
$var wire 1 f* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[40] $end
$scope module fa $end
$var wire 1 g* a $end
$var wire 1 h* b $end
$var wire 1 i* cin $end
$var wire 1 j* cout $end
$var wire 1 k* sum $end
$var wire 1 l* temp1 $end
$var wire 1 m* temp2 $end
$var wire 1 n* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[41] $end
$scope module fa $end
$var wire 1 o* a $end
$var wire 1 p* b $end
$var wire 1 q* cin $end
$var wire 1 r* cout $end
$var wire 1 s* sum $end
$var wire 1 t* temp1 $end
$var wire 1 u* temp2 $end
$var wire 1 v* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[42] $end
$scope module fa $end
$var wire 1 w* a $end
$var wire 1 x* b $end
$var wire 1 y* cin $end
$var wire 1 z* cout $end
$var wire 1 {* sum $end
$var wire 1 |* temp1 $end
$var wire 1 }* temp2 $end
$var wire 1 ~* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[43] $end
$scope module fa $end
$var wire 1 !+ a $end
$var wire 1 "+ b $end
$var wire 1 #+ cin $end
$var wire 1 $+ cout $end
$var wire 1 %+ sum $end
$var wire 1 &+ temp1 $end
$var wire 1 '+ temp2 $end
$var wire 1 (+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[44] $end
$scope module fa $end
$var wire 1 )+ a $end
$var wire 1 *+ b $end
$var wire 1 ++ cin $end
$var wire 1 ,+ cout $end
$var wire 1 -+ sum $end
$var wire 1 .+ temp1 $end
$var wire 1 /+ temp2 $end
$var wire 1 0+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[45] $end
$scope module fa $end
$var wire 1 1+ a $end
$var wire 1 2+ b $end
$var wire 1 3+ cin $end
$var wire 1 4+ cout $end
$var wire 1 5+ sum $end
$var wire 1 6+ temp1 $end
$var wire 1 7+ temp2 $end
$var wire 1 8+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[46] $end
$scope module fa $end
$var wire 1 9+ a $end
$var wire 1 :+ b $end
$var wire 1 ;+ cin $end
$var wire 1 <+ cout $end
$var wire 1 =+ sum $end
$var wire 1 >+ temp1 $end
$var wire 1 ?+ temp2 $end
$var wire 1 @+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[47] $end
$scope module fa $end
$var wire 1 A+ a $end
$var wire 1 B+ b $end
$var wire 1 C+ cin $end
$var wire 1 D+ cout $end
$var wire 1 E+ sum $end
$var wire 1 F+ temp1 $end
$var wire 1 G+ temp2 $end
$var wire 1 H+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[48] $end
$scope module fa $end
$var wire 1 I+ a $end
$var wire 1 J+ b $end
$var wire 1 K+ cin $end
$var wire 1 L+ cout $end
$var wire 1 M+ sum $end
$var wire 1 N+ temp1 $end
$var wire 1 O+ temp2 $end
$var wire 1 P+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[49] $end
$scope module fa $end
$var wire 1 Q+ a $end
$var wire 1 R+ b $end
$var wire 1 S+ cin $end
$var wire 1 T+ cout $end
$var wire 1 U+ sum $end
$var wire 1 V+ temp1 $end
$var wire 1 W+ temp2 $end
$var wire 1 X+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[50] $end
$scope module fa $end
$var wire 1 Y+ a $end
$var wire 1 Z+ b $end
$var wire 1 [+ cin $end
$var wire 1 \+ cout $end
$var wire 1 ]+ sum $end
$var wire 1 ^+ temp1 $end
$var wire 1 _+ temp2 $end
$var wire 1 `+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[51] $end
$scope module fa $end
$var wire 1 a+ a $end
$var wire 1 b+ b $end
$var wire 1 c+ cin $end
$var wire 1 d+ cout $end
$var wire 1 e+ sum $end
$var wire 1 f+ temp1 $end
$var wire 1 g+ temp2 $end
$var wire 1 h+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[52] $end
$scope module fa $end
$var wire 1 i+ a $end
$var wire 1 j+ b $end
$var wire 1 k+ cin $end
$var wire 1 l+ cout $end
$var wire 1 m+ sum $end
$var wire 1 n+ temp1 $end
$var wire 1 o+ temp2 $end
$var wire 1 p+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[53] $end
$scope module fa $end
$var wire 1 q+ a $end
$var wire 1 r+ b $end
$var wire 1 s+ cin $end
$var wire 1 t+ cout $end
$var wire 1 u+ sum $end
$var wire 1 v+ temp1 $end
$var wire 1 w+ temp2 $end
$var wire 1 x+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[54] $end
$scope module fa $end
$var wire 1 y+ a $end
$var wire 1 z+ b $end
$var wire 1 {+ cin $end
$var wire 1 |+ cout $end
$var wire 1 }+ sum $end
$var wire 1 ~+ temp1 $end
$var wire 1 !, temp2 $end
$var wire 1 ", temp3 $end
$upscope $end
$upscope $end
$scope begin adders[55] $end
$scope module fa $end
$var wire 1 #, a $end
$var wire 1 $, b $end
$var wire 1 %, cin $end
$var wire 1 &, cout $end
$var wire 1 ', sum $end
$var wire 1 (, temp1 $end
$var wire 1 ), temp2 $end
$var wire 1 *, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[56] $end
$scope module fa $end
$var wire 1 +, a $end
$var wire 1 ,, b $end
$var wire 1 -, cin $end
$var wire 1 ., cout $end
$var wire 1 /, sum $end
$var wire 1 0, temp1 $end
$var wire 1 1, temp2 $end
$var wire 1 2, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[57] $end
$scope module fa $end
$var wire 1 3, a $end
$var wire 1 4, b $end
$var wire 1 5, cin $end
$var wire 1 6, cout $end
$var wire 1 7, sum $end
$var wire 1 8, temp1 $end
$var wire 1 9, temp2 $end
$var wire 1 :, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[58] $end
$scope module fa $end
$var wire 1 ;, a $end
$var wire 1 <, b $end
$var wire 1 =, cin $end
$var wire 1 >, cout $end
$var wire 1 ?, sum $end
$var wire 1 @, temp1 $end
$var wire 1 A, temp2 $end
$var wire 1 B, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[59] $end
$scope module fa $end
$var wire 1 C, a $end
$var wire 1 D, b $end
$var wire 1 E, cin $end
$var wire 1 F, cout $end
$var wire 1 G, sum $end
$var wire 1 H, temp1 $end
$var wire 1 I, temp2 $end
$var wire 1 J, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[60] $end
$scope module fa $end
$var wire 1 K, a $end
$var wire 1 L, b $end
$var wire 1 M, cin $end
$var wire 1 N, cout $end
$var wire 1 O, sum $end
$var wire 1 P, temp1 $end
$var wire 1 Q, temp2 $end
$var wire 1 R, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[61] $end
$scope module fa $end
$var wire 1 S, a $end
$var wire 1 T, b $end
$var wire 1 U, cin $end
$var wire 1 V, cout $end
$var wire 1 W, sum $end
$var wire 1 X, temp1 $end
$var wire 1 Y, temp2 $end
$var wire 1 Z, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[62] $end
$scope module fa $end
$var wire 1 [, a $end
$var wire 1 \, b $end
$var wire 1 ], cin $end
$var wire 1 ^, cout $end
$var wire 1 _, sum $end
$var wire 1 `, temp1 $end
$var wire 1 a, temp2 $end
$var wire 1 b, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[63] $end
$scope module fa $end
$var wire 1 c, a $end
$var wire 1 d, b $end
$var wire 1 e, cin $end
$var wire 1 f, cout $end
$var wire 1 g, sum $end
$var wire 1 h, temp1 $end
$var wire 1 i, temp2 $end
$var wire 1 j, temp3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module logical_operations $end
$var wire 64 k, b [63:0] $end
$var wire 64 l, xor_final [63:0] $end
$var wire 64 m, or_final [63:0] $end
$var wire 64 n, and_final [63:0] $end
$var wire 64 o, a [63:0] $end
$scope begin bitwiseops[0] $end
$upscope $end
$scope begin bitwiseops[1] $end
$upscope $end
$scope begin bitwiseops[2] $end
$upscope $end
$scope begin bitwiseops[3] $end
$upscope $end
$scope begin bitwiseops[4] $end
$upscope $end
$scope begin bitwiseops[5] $end
$upscope $end
$scope begin bitwiseops[6] $end
$upscope $end
$scope begin bitwiseops[7] $end
$upscope $end
$scope begin bitwiseops[8] $end
$upscope $end
$scope begin bitwiseops[9] $end
$upscope $end
$scope begin bitwiseops[10] $end
$upscope $end
$scope begin bitwiseops[11] $end
$upscope $end
$scope begin bitwiseops[12] $end
$upscope $end
$scope begin bitwiseops[13] $end
$upscope $end
$scope begin bitwiseops[14] $end
$upscope $end
$scope begin bitwiseops[15] $end
$upscope $end
$scope begin bitwiseops[16] $end
$upscope $end
$scope begin bitwiseops[17] $end
$upscope $end
$scope begin bitwiseops[18] $end
$upscope $end
$scope begin bitwiseops[19] $end
$upscope $end
$scope begin bitwiseops[20] $end
$upscope $end
$scope begin bitwiseops[21] $end
$upscope $end
$scope begin bitwiseops[22] $end
$upscope $end
$scope begin bitwiseops[23] $end
$upscope $end
$scope begin bitwiseops[24] $end
$upscope $end
$scope begin bitwiseops[25] $end
$upscope $end
$scope begin bitwiseops[26] $end
$upscope $end
$scope begin bitwiseops[27] $end
$upscope $end
$scope begin bitwiseops[28] $end
$upscope $end
$scope begin bitwiseops[29] $end
$upscope $end
$scope begin bitwiseops[30] $end
$upscope $end
$scope begin bitwiseops[31] $end
$upscope $end
$scope begin bitwiseops[32] $end
$upscope $end
$scope begin bitwiseops[33] $end
$upscope $end
$scope begin bitwiseops[34] $end
$upscope $end
$scope begin bitwiseops[35] $end
$upscope $end
$scope begin bitwiseops[36] $end
$upscope $end
$scope begin bitwiseops[37] $end
$upscope $end
$scope begin bitwiseops[38] $end
$upscope $end
$scope begin bitwiseops[39] $end
$upscope $end
$scope begin bitwiseops[40] $end
$upscope $end
$scope begin bitwiseops[41] $end
$upscope $end
$scope begin bitwiseops[42] $end
$upscope $end
$scope begin bitwiseops[43] $end
$upscope $end
$scope begin bitwiseops[44] $end
$upscope $end
$scope begin bitwiseops[45] $end
$upscope $end
$scope begin bitwiseops[46] $end
$upscope $end
$scope begin bitwiseops[47] $end
$upscope $end
$scope begin bitwiseops[48] $end
$upscope $end
$scope begin bitwiseops[49] $end
$upscope $end
$scope begin bitwiseops[50] $end
$upscope $end
$scope begin bitwiseops[51] $end
$upscope $end
$scope begin bitwiseops[52] $end
$upscope $end
$scope begin bitwiseops[53] $end
$upscope $end
$scope begin bitwiseops[54] $end
$upscope $end
$scope begin bitwiseops[55] $end
$upscope $end
$scope begin bitwiseops[56] $end
$upscope $end
$scope begin bitwiseops[57] $end
$upscope $end
$scope begin bitwiseops[58] $end
$upscope $end
$scope begin bitwiseops[59] $end
$upscope $end
$scope begin bitwiseops[60] $end
$upscope $end
$scope begin bitwiseops[61] $end
$upscope $end
$scope begin bitwiseops[62] $end
$upscope $end
$scope begin bitwiseops[63] $end
$upscope $end
$upscope $end
$scope module shift_operations $end
$var wire 64 p, b [63:0] $end
$var wire 64 q, a [63:0] $end
$var reg 64 r, sll_final [63:0] $end
$var reg 64 s, sra_final [63:0] $end
$var reg 64 t, srl_final [63:0] $end
$var reg 64 u, temp_sll [63:0] $end
$var reg 64 v, temp_sra [63:0] $end
$var reg 64 w, temp_srl [63:0] $end
$upscope $end
$scope module sub $end
$var wire 64 x, b [63:0] $end
$var wire 64 y, diff [63:0] $end
$var wire 1 z, cout $end
$var wire 64 {, b_complement [63:0] $end
$var wire 64 |, a [63:0] $end
$scope begin complement[0] $end
$upscope $end
$scope begin complement[1] $end
$upscope $end
$scope begin complement[2] $end
$upscope $end
$scope begin complement[3] $end
$upscope $end
$scope begin complement[4] $end
$upscope $end
$scope begin complement[5] $end
$upscope $end
$scope begin complement[6] $end
$upscope $end
$scope begin complement[7] $end
$upscope $end
$scope begin complement[8] $end
$upscope $end
$scope begin complement[9] $end
$upscope $end
$scope begin complement[10] $end
$upscope $end
$scope begin complement[11] $end
$upscope $end
$scope begin complement[12] $end
$upscope $end
$scope begin complement[13] $end
$upscope $end
$scope begin complement[14] $end
$upscope $end
$scope begin complement[15] $end
$upscope $end
$scope begin complement[16] $end
$upscope $end
$scope begin complement[17] $end
$upscope $end
$scope begin complement[18] $end
$upscope $end
$scope begin complement[19] $end
$upscope $end
$scope begin complement[20] $end
$upscope $end
$scope begin complement[21] $end
$upscope $end
$scope begin complement[22] $end
$upscope $end
$scope begin complement[23] $end
$upscope $end
$scope begin complement[24] $end
$upscope $end
$scope begin complement[25] $end
$upscope $end
$scope begin complement[26] $end
$upscope $end
$scope begin complement[27] $end
$upscope $end
$scope begin complement[28] $end
$upscope $end
$scope begin complement[29] $end
$upscope $end
$scope begin complement[30] $end
$upscope $end
$scope begin complement[31] $end
$upscope $end
$scope begin complement[32] $end
$upscope $end
$scope begin complement[33] $end
$upscope $end
$scope begin complement[34] $end
$upscope $end
$scope begin complement[35] $end
$upscope $end
$scope begin complement[36] $end
$upscope $end
$scope begin complement[37] $end
$upscope $end
$scope begin complement[38] $end
$upscope $end
$scope begin complement[39] $end
$upscope $end
$scope begin complement[40] $end
$upscope $end
$scope begin complement[41] $end
$upscope $end
$scope begin complement[42] $end
$upscope $end
$scope begin complement[43] $end
$upscope $end
$scope begin complement[44] $end
$upscope $end
$scope begin complement[45] $end
$upscope $end
$scope begin complement[46] $end
$upscope $end
$scope begin complement[47] $end
$upscope $end
$scope begin complement[48] $end
$upscope $end
$scope begin complement[49] $end
$upscope $end
$scope begin complement[50] $end
$upscope $end
$scope begin complement[51] $end
$upscope $end
$scope begin complement[52] $end
$upscope $end
$scope begin complement[53] $end
$upscope $end
$scope begin complement[54] $end
$upscope $end
$scope begin complement[55] $end
$upscope $end
$scope begin complement[56] $end
$upscope $end
$scope begin complement[57] $end
$upscope $end
$scope begin complement[58] $end
$upscope $end
$scope begin complement[59] $end
$upscope $end
$scope begin complement[60] $end
$upscope $end
$scope begin complement[61] $end
$upscope $end
$scope begin complement[62] $end
$upscope $end
$scope begin complement[63] $end
$upscope $end
$scope module final $end
$var wire 64 }, b [63:0] $end
$var wire 1 ~, cin $end
$var wire 64 !- sum [63:0] $end
$var wire 1 z, cout $end
$var wire 65 "- carry [64:0] $end
$var wire 64 #- a [63:0] $end
$scope begin adders[0] $end
$scope module fa $end
$var wire 1 $- a $end
$var wire 1 %- b $end
$var wire 1 &- cin $end
$var wire 1 '- cout $end
$var wire 1 (- sum $end
$var wire 1 )- temp1 $end
$var wire 1 *- temp2 $end
$var wire 1 +- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[1] $end
$scope module fa $end
$var wire 1 ,- a $end
$var wire 1 -- b $end
$var wire 1 .- cin $end
$var wire 1 /- cout $end
$var wire 1 0- sum $end
$var wire 1 1- temp1 $end
$var wire 1 2- temp2 $end
$var wire 1 3- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[2] $end
$scope module fa $end
$var wire 1 4- a $end
$var wire 1 5- b $end
$var wire 1 6- cin $end
$var wire 1 7- cout $end
$var wire 1 8- sum $end
$var wire 1 9- temp1 $end
$var wire 1 :- temp2 $end
$var wire 1 ;- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[3] $end
$scope module fa $end
$var wire 1 <- a $end
$var wire 1 =- b $end
$var wire 1 >- cin $end
$var wire 1 ?- cout $end
$var wire 1 @- sum $end
$var wire 1 A- temp1 $end
$var wire 1 B- temp2 $end
$var wire 1 C- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[4] $end
$scope module fa $end
$var wire 1 D- a $end
$var wire 1 E- b $end
$var wire 1 F- cin $end
$var wire 1 G- cout $end
$var wire 1 H- sum $end
$var wire 1 I- temp1 $end
$var wire 1 J- temp2 $end
$var wire 1 K- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[5] $end
$scope module fa $end
$var wire 1 L- a $end
$var wire 1 M- b $end
$var wire 1 N- cin $end
$var wire 1 O- cout $end
$var wire 1 P- sum $end
$var wire 1 Q- temp1 $end
$var wire 1 R- temp2 $end
$var wire 1 S- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[6] $end
$scope module fa $end
$var wire 1 T- a $end
$var wire 1 U- b $end
$var wire 1 V- cin $end
$var wire 1 W- cout $end
$var wire 1 X- sum $end
$var wire 1 Y- temp1 $end
$var wire 1 Z- temp2 $end
$var wire 1 [- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[7] $end
$scope module fa $end
$var wire 1 \- a $end
$var wire 1 ]- b $end
$var wire 1 ^- cin $end
$var wire 1 _- cout $end
$var wire 1 `- sum $end
$var wire 1 a- temp1 $end
$var wire 1 b- temp2 $end
$var wire 1 c- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[8] $end
$scope module fa $end
$var wire 1 d- a $end
$var wire 1 e- b $end
$var wire 1 f- cin $end
$var wire 1 g- cout $end
$var wire 1 h- sum $end
$var wire 1 i- temp1 $end
$var wire 1 j- temp2 $end
$var wire 1 k- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[9] $end
$scope module fa $end
$var wire 1 l- a $end
$var wire 1 m- b $end
$var wire 1 n- cin $end
$var wire 1 o- cout $end
$var wire 1 p- sum $end
$var wire 1 q- temp1 $end
$var wire 1 r- temp2 $end
$var wire 1 s- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[10] $end
$scope module fa $end
$var wire 1 t- a $end
$var wire 1 u- b $end
$var wire 1 v- cin $end
$var wire 1 w- cout $end
$var wire 1 x- sum $end
$var wire 1 y- temp1 $end
$var wire 1 z- temp2 $end
$var wire 1 {- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[11] $end
$scope module fa $end
$var wire 1 |- a $end
$var wire 1 }- b $end
$var wire 1 ~- cin $end
$var wire 1 !. cout $end
$var wire 1 ". sum $end
$var wire 1 #. temp1 $end
$var wire 1 $. temp2 $end
$var wire 1 %. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[12] $end
$scope module fa $end
$var wire 1 &. a $end
$var wire 1 '. b $end
$var wire 1 (. cin $end
$var wire 1 ). cout $end
$var wire 1 *. sum $end
$var wire 1 +. temp1 $end
$var wire 1 ,. temp2 $end
$var wire 1 -. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[13] $end
$scope module fa $end
$var wire 1 .. a $end
$var wire 1 /. b $end
$var wire 1 0. cin $end
$var wire 1 1. cout $end
$var wire 1 2. sum $end
$var wire 1 3. temp1 $end
$var wire 1 4. temp2 $end
$var wire 1 5. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[14] $end
$scope module fa $end
$var wire 1 6. a $end
$var wire 1 7. b $end
$var wire 1 8. cin $end
$var wire 1 9. cout $end
$var wire 1 :. sum $end
$var wire 1 ;. temp1 $end
$var wire 1 <. temp2 $end
$var wire 1 =. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[15] $end
$scope module fa $end
$var wire 1 >. a $end
$var wire 1 ?. b $end
$var wire 1 @. cin $end
$var wire 1 A. cout $end
$var wire 1 B. sum $end
$var wire 1 C. temp1 $end
$var wire 1 D. temp2 $end
$var wire 1 E. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[16] $end
$scope module fa $end
$var wire 1 F. a $end
$var wire 1 G. b $end
$var wire 1 H. cin $end
$var wire 1 I. cout $end
$var wire 1 J. sum $end
$var wire 1 K. temp1 $end
$var wire 1 L. temp2 $end
$var wire 1 M. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[17] $end
$scope module fa $end
$var wire 1 N. a $end
$var wire 1 O. b $end
$var wire 1 P. cin $end
$var wire 1 Q. cout $end
$var wire 1 R. sum $end
$var wire 1 S. temp1 $end
$var wire 1 T. temp2 $end
$var wire 1 U. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[18] $end
$scope module fa $end
$var wire 1 V. a $end
$var wire 1 W. b $end
$var wire 1 X. cin $end
$var wire 1 Y. cout $end
$var wire 1 Z. sum $end
$var wire 1 [. temp1 $end
$var wire 1 \. temp2 $end
$var wire 1 ]. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[19] $end
$scope module fa $end
$var wire 1 ^. a $end
$var wire 1 _. b $end
$var wire 1 `. cin $end
$var wire 1 a. cout $end
$var wire 1 b. sum $end
$var wire 1 c. temp1 $end
$var wire 1 d. temp2 $end
$var wire 1 e. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[20] $end
$scope module fa $end
$var wire 1 f. a $end
$var wire 1 g. b $end
$var wire 1 h. cin $end
$var wire 1 i. cout $end
$var wire 1 j. sum $end
$var wire 1 k. temp1 $end
$var wire 1 l. temp2 $end
$var wire 1 m. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[21] $end
$scope module fa $end
$var wire 1 n. a $end
$var wire 1 o. b $end
$var wire 1 p. cin $end
$var wire 1 q. cout $end
$var wire 1 r. sum $end
$var wire 1 s. temp1 $end
$var wire 1 t. temp2 $end
$var wire 1 u. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[22] $end
$scope module fa $end
$var wire 1 v. a $end
$var wire 1 w. b $end
$var wire 1 x. cin $end
$var wire 1 y. cout $end
$var wire 1 z. sum $end
$var wire 1 {. temp1 $end
$var wire 1 |. temp2 $end
$var wire 1 }. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[23] $end
$scope module fa $end
$var wire 1 ~. a $end
$var wire 1 !/ b $end
$var wire 1 "/ cin $end
$var wire 1 #/ cout $end
$var wire 1 $/ sum $end
$var wire 1 %/ temp1 $end
$var wire 1 &/ temp2 $end
$var wire 1 '/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[24] $end
$scope module fa $end
$var wire 1 (/ a $end
$var wire 1 )/ b $end
$var wire 1 */ cin $end
$var wire 1 +/ cout $end
$var wire 1 ,/ sum $end
$var wire 1 -/ temp1 $end
$var wire 1 ./ temp2 $end
$var wire 1 // temp3 $end
$upscope $end
$upscope $end
$scope begin adders[25] $end
$scope module fa $end
$var wire 1 0/ a $end
$var wire 1 1/ b $end
$var wire 1 2/ cin $end
$var wire 1 3/ cout $end
$var wire 1 4/ sum $end
$var wire 1 5/ temp1 $end
$var wire 1 6/ temp2 $end
$var wire 1 7/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[26] $end
$scope module fa $end
$var wire 1 8/ a $end
$var wire 1 9/ b $end
$var wire 1 :/ cin $end
$var wire 1 ;/ cout $end
$var wire 1 </ sum $end
$var wire 1 =/ temp1 $end
$var wire 1 >/ temp2 $end
$var wire 1 ?/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[27] $end
$scope module fa $end
$var wire 1 @/ a $end
$var wire 1 A/ b $end
$var wire 1 B/ cin $end
$var wire 1 C/ cout $end
$var wire 1 D/ sum $end
$var wire 1 E/ temp1 $end
$var wire 1 F/ temp2 $end
$var wire 1 G/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[28] $end
$scope module fa $end
$var wire 1 H/ a $end
$var wire 1 I/ b $end
$var wire 1 J/ cin $end
$var wire 1 K/ cout $end
$var wire 1 L/ sum $end
$var wire 1 M/ temp1 $end
$var wire 1 N/ temp2 $end
$var wire 1 O/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[29] $end
$scope module fa $end
$var wire 1 P/ a $end
$var wire 1 Q/ b $end
$var wire 1 R/ cin $end
$var wire 1 S/ cout $end
$var wire 1 T/ sum $end
$var wire 1 U/ temp1 $end
$var wire 1 V/ temp2 $end
$var wire 1 W/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[30] $end
$scope module fa $end
$var wire 1 X/ a $end
$var wire 1 Y/ b $end
$var wire 1 Z/ cin $end
$var wire 1 [/ cout $end
$var wire 1 \/ sum $end
$var wire 1 ]/ temp1 $end
$var wire 1 ^/ temp2 $end
$var wire 1 _/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[31] $end
$scope module fa $end
$var wire 1 `/ a $end
$var wire 1 a/ b $end
$var wire 1 b/ cin $end
$var wire 1 c/ cout $end
$var wire 1 d/ sum $end
$var wire 1 e/ temp1 $end
$var wire 1 f/ temp2 $end
$var wire 1 g/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[32] $end
$scope module fa $end
$var wire 1 h/ a $end
$var wire 1 i/ b $end
$var wire 1 j/ cin $end
$var wire 1 k/ cout $end
$var wire 1 l/ sum $end
$var wire 1 m/ temp1 $end
$var wire 1 n/ temp2 $end
$var wire 1 o/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[33] $end
$scope module fa $end
$var wire 1 p/ a $end
$var wire 1 q/ b $end
$var wire 1 r/ cin $end
$var wire 1 s/ cout $end
$var wire 1 t/ sum $end
$var wire 1 u/ temp1 $end
$var wire 1 v/ temp2 $end
$var wire 1 w/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[34] $end
$scope module fa $end
$var wire 1 x/ a $end
$var wire 1 y/ b $end
$var wire 1 z/ cin $end
$var wire 1 {/ cout $end
$var wire 1 |/ sum $end
$var wire 1 }/ temp1 $end
$var wire 1 ~/ temp2 $end
$var wire 1 !0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[35] $end
$scope module fa $end
$var wire 1 "0 a $end
$var wire 1 #0 b $end
$var wire 1 $0 cin $end
$var wire 1 %0 cout $end
$var wire 1 &0 sum $end
$var wire 1 '0 temp1 $end
$var wire 1 (0 temp2 $end
$var wire 1 )0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[36] $end
$scope module fa $end
$var wire 1 *0 a $end
$var wire 1 +0 b $end
$var wire 1 ,0 cin $end
$var wire 1 -0 cout $end
$var wire 1 .0 sum $end
$var wire 1 /0 temp1 $end
$var wire 1 00 temp2 $end
$var wire 1 10 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[37] $end
$scope module fa $end
$var wire 1 20 a $end
$var wire 1 30 b $end
$var wire 1 40 cin $end
$var wire 1 50 cout $end
$var wire 1 60 sum $end
$var wire 1 70 temp1 $end
$var wire 1 80 temp2 $end
$var wire 1 90 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[38] $end
$scope module fa $end
$var wire 1 :0 a $end
$var wire 1 ;0 b $end
$var wire 1 <0 cin $end
$var wire 1 =0 cout $end
$var wire 1 >0 sum $end
$var wire 1 ?0 temp1 $end
$var wire 1 @0 temp2 $end
$var wire 1 A0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[39] $end
$scope module fa $end
$var wire 1 B0 a $end
$var wire 1 C0 b $end
$var wire 1 D0 cin $end
$var wire 1 E0 cout $end
$var wire 1 F0 sum $end
$var wire 1 G0 temp1 $end
$var wire 1 H0 temp2 $end
$var wire 1 I0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[40] $end
$scope module fa $end
$var wire 1 J0 a $end
$var wire 1 K0 b $end
$var wire 1 L0 cin $end
$var wire 1 M0 cout $end
$var wire 1 N0 sum $end
$var wire 1 O0 temp1 $end
$var wire 1 P0 temp2 $end
$var wire 1 Q0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[41] $end
$scope module fa $end
$var wire 1 R0 a $end
$var wire 1 S0 b $end
$var wire 1 T0 cin $end
$var wire 1 U0 cout $end
$var wire 1 V0 sum $end
$var wire 1 W0 temp1 $end
$var wire 1 X0 temp2 $end
$var wire 1 Y0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[42] $end
$scope module fa $end
$var wire 1 Z0 a $end
$var wire 1 [0 b $end
$var wire 1 \0 cin $end
$var wire 1 ]0 cout $end
$var wire 1 ^0 sum $end
$var wire 1 _0 temp1 $end
$var wire 1 `0 temp2 $end
$var wire 1 a0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[43] $end
$scope module fa $end
$var wire 1 b0 a $end
$var wire 1 c0 b $end
$var wire 1 d0 cin $end
$var wire 1 e0 cout $end
$var wire 1 f0 sum $end
$var wire 1 g0 temp1 $end
$var wire 1 h0 temp2 $end
$var wire 1 i0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[44] $end
$scope module fa $end
$var wire 1 j0 a $end
$var wire 1 k0 b $end
$var wire 1 l0 cin $end
$var wire 1 m0 cout $end
$var wire 1 n0 sum $end
$var wire 1 o0 temp1 $end
$var wire 1 p0 temp2 $end
$var wire 1 q0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[45] $end
$scope module fa $end
$var wire 1 r0 a $end
$var wire 1 s0 b $end
$var wire 1 t0 cin $end
$var wire 1 u0 cout $end
$var wire 1 v0 sum $end
$var wire 1 w0 temp1 $end
$var wire 1 x0 temp2 $end
$var wire 1 y0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[46] $end
$scope module fa $end
$var wire 1 z0 a $end
$var wire 1 {0 b $end
$var wire 1 |0 cin $end
$var wire 1 }0 cout $end
$var wire 1 ~0 sum $end
$var wire 1 !1 temp1 $end
$var wire 1 "1 temp2 $end
$var wire 1 #1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[47] $end
$scope module fa $end
$var wire 1 $1 a $end
$var wire 1 %1 b $end
$var wire 1 &1 cin $end
$var wire 1 '1 cout $end
$var wire 1 (1 sum $end
$var wire 1 )1 temp1 $end
$var wire 1 *1 temp2 $end
$var wire 1 +1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[48] $end
$scope module fa $end
$var wire 1 ,1 a $end
$var wire 1 -1 b $end
$var wire 1 .1 cin $end
$var wire 1 /1 cout $end
$var wire 1 01 sum $end
$var wire 1 11 temp1 $end
$var wire 1 21 temp2 $end
$var wire 1 31 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[49] $end
$scope module fa $end
$var wire 1 41 a $end
$var wire 1 51 b $end
$var wire 1 61 cin $end
$var wire 1 71 cout $end
$var wire 1 81 sum $end
$var wire 1 91 temp1 $end
$var wire 1 :1 temp2 $end
$var wire 1 ;1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[50] $end
$scope module fa $end
$var wire 1 <1 a $end
$var wire 1 =1 b $end
$var wire 1 >1 cin $end
$var wire 1 ?1 cout $end
$var wire 1 @1 sum $end
$var wire 1 A1 temp1 $end
$var wire 1 B1 temp2 $end
$var wire 1 C1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[51] $end
$scope module fa $end
$var wire 1 D1 a $end
$var wire 1 E1 b $end
$var wire 1 F1 cin $end
$var wire 1 G1 cout $end
$var wire 1 H1 sum $end
$var wire 1 I1 temp1 $end
$var wire 1 J1 temp2 $end
$var wire 1 K1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[52] $end
$scope module fa $end
$var wire 1 L1 a $end
$var wire 1 M1 b $end
$var wire 1 N1 cin $end
$var wire 1 O1 cout $end
$var wire 1 P1 sum $end
$var wire 1 Q1 temp1 $end
$var wire 1 R1 temp2 $end
$var wire 1 S1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[53] $end
$scope module fa $end
$var wire 1 T1 a $end
$var wire 1 U1 b $end
$var wire 1 V1 cin $end
$var wire 1 W1 cout $end
$var wire 1 X1 sum $end
$var wire 1 Y1 temp1 $end
$var wire 1 Z1 temp2 $end
$var wire 1 [1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[54] $end
$scope module fa $end
$var wire 1 \1 a $end
$var wire 1 ]1 b $end
$var wire 1 ^1 cin $end
$var wire 1 _1 cout $end
$var wire 1 `1 sum $end
$var wire 1 a1 temp1 $end
$var wire 1 b1 temp2 $end
$var wire 1 c1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[55] $end
$scope module fa $end
$var wire 1 d1 a $end
$var wire 1 e1 b $end
$var wire 1 f1 cin $end
$var wire 1 g1 cout $end
$var wire 1 h1 sum $end
$var wire 1 i1 temp1 $end
$var wire 1 j1 temp2 $end
$var wire 1 k1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[56] $end
$scope module fa $end
$var wire 1 l1 a $end
$var wire 1 m1 b $end
$var wire 1 n1 cin $end
$var wire 1 o1 cout $end
$var wire 1 p1 sum $end
$var wire 1 q1 temp1 $end
$var wire 1 r1 temp2 $end
$var wire 1 s1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[57] $end
$scope module fa $end
$var wire 1 t1 a $end
$var wire 1 u1 b $end
$var wire 1 v1 cin $end
$var wire 1 w1 cout $end
$var wire 1 x1 sum $end
$var wire 1 y1 temp1 $end
$var wire 1 z1 temp2 $end
$var wire 1 {1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[58] $end
$scope module fa $end
$var wire 1 |1 a $end
$var wire 1 }1 b $end
$var wire 1 ~1 cin $end
$var wire 1 !2 cout $end
$var wire 1 "2 sum $end
$var wire 1 #2 temp1 $end
$var wire 1 $2 temp2 $end
$var wire 1 %2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[59] $end
$scope module fa $end
$var wire 1 &2 a $end
$var wire 1 '2 b $end
$var wire 1 (2 cin $end
$var wire 1 )2 cout $end
$var wire 1 *2 sum $end
$var wire 1 +2 temp1 $end
$var wire 1 ,2 temp2 $end
$var wire 1 -2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[60] $end
$scope module fa $end
$var wire 1 .2 a $end
$var wire 1 /2 b $end
$var wire 1 02 cin $end
$var wire 1 12 cout $end
$var wire 1 22 sum $end
$var wire 1 32 temp1 $end
$var wire 1 42 temp2 $end
$var wire 1 52 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[61] $end
$scope module fa $end
$var wire 1 62 a $end
$var wire 1 72 b $end
$var wire 1 82 cin $end
$var wire 1 92 cout $end
$var wire 1 :2 sum $end
$var wire 1 ;2 temp1 $end
$var wire 1 <2 temp2 $end
$var wire 1 =2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[62] $end
$scope module fa $end
$var wire 1 >2 a $end
$var wire 1 ?2 b $end
$var wire 1 @2 cin $end
$var wire 1 A2 cout $end
$var wire 1 B2 sum $end
$var wire 1 C2 temp1 $end
$var wire 1 D2 temp2 $end
$var wire 1 E2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[63] $end
$scope module fa $end
$var wire 1 F2 a $end
$var wire 1 G2 b $end
$var wire 1 H2 cin $end
$var wire 1 I2 cout $end
$var wire 1 J2 sum $end
$var wire 1 K2 temp1 $end
$var wire 1 L2 temp2 $end
$var wire 1 M2 temp3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module br_unit $end
$var wire 64 N2 pc [63:0] $end
$var wire 64 O2 rs2_data [63:0] $end
$var wire 64 P2 rs1_data [63:0] $end
$var wire 64 Q2 imm [63:0] $end
$var wire 3 R2 funct3 [2:0] $end
$var wire 1 S2 equal $end
$var wire 1 5 branch $end
$var reg 64 T2 branch_target [63:0] $end
$var reg 1 4 take_branch $end
$upscope $end
$scope module ctrl $end
$var wire 3 U2 funct3 [2:0] $end
$var wire 7 V2 funct7 [6:0] $end
$var wire 7 W2 opcode [6:0] $end
$var reg 3 X2 alu_funct3 [2:0] $end
$var reg 7 Y2 alu_funct7 [6:0] $end
$var reg 1 6 alu_src_b_sel $end
$var reg 1 5 branch $end
$var reg 3 Z2 imm_type [2:0] $end
$var reg 1 / mem_read $end
$var reg 1 - mem_write $end
$var reg 1 , reg_write $end
$upscope $end
$scope module dmem $end
$var wire 64 [2 address [63:0] $end
$var wire 1 ! clk $end
$var wire 1 / mem_read $end
$var wire 1 - mem_write $end
$var wire 64 \2 write_data [63:0] $end
$var reg 64 ]2 read_data [63:0] $end
$var integer 32 ^2 i [31:0] $end
$scope function get_word $end
$var reg 10 _2 index [9:0] $end
$upscope $end
$upscope $end
$scope module imem $end
$var wire 64 `2 pc [63:0] $end
$var reg 32 a2 instruction [31:0] $end
$var integer 32 b2 i [31:0] $end
$upscope $end
$scope module imm_gen $end
$var wire 3 c2 imm_type [2:0] $end
$var wire 32 d2 instruction [31:0] $end
$var wire 12 e2 s_imm [11:0] $end
$var wire 12 f2 i_imm [11:0] $end
$var wire 13 g2 b_imm [12:0] $end
$var reg 64 h2 immediate [63:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 ! clk $end
$var wire 5 i2 rd_addr [4:0] $end
$var wire 64 j2 rd_data [63:0] $end
$var wire 1 , reg_write $end
$var wire 5 k2 rs1_addr [4:0] $end
$var wire 5 l2 rs2_addr [4:0] $end
$var wire 1 % rst $end
$var reg 64 m2 rs1_data [63:0] $end
$var reg 64 n2 rs2_data [63:0] $end
$var integer 32 o2 i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 p2 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 q2 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 r2 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 s2 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx s2
bx r2
bx q2
bx p2
b100000 o2
b0 n2
b0 m2
b101 l2
b0 k2
b101 j2
b1 i2
b101 h2
b100000000000 g2
b101 f2
b1 e2
b10100000000000010010011 d2
b0 c2
b10100 b2
b10100000000000010010011 a2
b0 `2
bx _2
b10000000000 ^2
b0 ]2
b0 \2
b101 [2
b0 Z2
b0 Y2
b0 X2
b10011 W2
b0 V2
b0 U2
b101 T2
1S2
b0 R2
b101 Q2
b0 P2
b0 O2
b0 N2
0M2
0L2
1K2
1J2
0I2
0H2
1G2
0F2
0E2
0D2
1C2
1B2
0A2
0@2
1?2
0>2
0=2
0<2
1;2
1:2
092
082
172
062
052
042
132
122
012
002
1/2
0.2
0-2
0,2
1+2
1*2
0)2
0(2
1'2
0&2
0%2
0$2
1#2
1"2
0!2
0~1
1}1
0|1
0{1
0z1
1y1
1x1
0w1
0v1
1u1
0t1
0s1
0r1
1q1
1p1
0o1
0n1
1m1
0l1
0k1
0j1
1i1
1h1
0g1
0f1
1e1
0d1
0c1
0b1
1a1
1`1
0_1
0^1
1]1
0\1
0[1
0Z1
1Y1
1X1
0W1
0V1
1U1
0T1
0S1
0R1
1Q1
1P1
0O1
0N1
1M1
0L1
0K1
0J1
1I1
1H1
0G1
0F1
1E1
0D1
0C1
0B1
1A1
1@1
0?1
0>1
1=1
0<1
0;1
0:1
191
181
071
061
151
041
031
021
111
101
0/1
0.1
1-1
0,1
0+1
0*1
1)1
1(1
0'1
0&1
1%1
0$1
0#1
0"1
1!1
1~0
0}0
0|0
1{0
0z0
0y0
0x0
1w0
1v0
0u0
0t0
1s0
0r0
0q0
0p0
1o0
1n0
0m0
0l0
1k0
0j0
0i0
0h0
1g0
1f0
0e0
0d0
1c0
0b0
0a0
0`0
1_0
1^0
0]0
0\0
1[0
0Z0
0Y0
0X0
1W0
1V0
0U0
0T0
1S0
0R0
0Q0
0P0
1O0
1N0
0M0
0L0
1K0
0J0
0I0
0H0
1G0
1F0
0E0
0D0
1C0
0B0
0A0
0@0
1?0
1>0
0=0
0<0
1;0
0:0
090
080
170
160
050
040
130
020
010
000
1/0
1.0
0-0
0,0
1+0
0*0
0)0
0(0
1'0
1&0
0%0
0$0
1#0
0"0
0!0
0~/
1}/
1|/
0{/
0z/
1y/
0x/
0w/
0v/
1u/
1t/
0s/
0r/
1q/
0p/
0o/
0n/
1m/
1l/
0k/
0j/
1i/
0h/
0g/
0f/
1e/
1d/
0c/
0b/
1a/
0`/
0_/
0^/
1]/
1\/
0[/
0Z/
1Y/
0X/
0W/
0V/
1U/
1T/
0S/
0R/
1Q/
0P/
0O/
0N/
1M/
1L/
0K/
0J/
1I/
0H/
0G/
0F/
1E/
1D/
0C/
0B/
1A/
0@/
0?/
0>/
1=/
1</
0;/
0:/
19/
08/
07/
06/
15/
14/
03/
02/
11/
00/
0//
0./
1-/
1,/
0+/
0*/
1)/
0(/
0'/
0&/
1%/
1$/
0#/
0"/
1!/
0~.
0}.
0|.
1{.
1z.
0y.
0x.
1w.
0v.
0u.
0t.
1s.
1r.
0q.
0p.
1o.
0n.
0m.
0l.
1k.
1j.
0i.
0h.
1g.
0f.
0e.
0d.
1c.
1b.
0a.
0`.
1_.
0^.
0].
0\.
1[.
1Z.
0Y.
0X.
1W.
0V.
0U.
0T.
1S.
1R.
0Q.
0P.
1O.
0N.
0M.
0L.
1K.
1J.
0I.
0H.
1G.
0F.
0E.
0D.
1C.
1B.
0A.
0@.
1?.
0>.
0=.
0<.
1;.
1:.
09.
08.
17.
06.
05.
04.
13.
12.
01.
00.
1/.
0..
0-.
0,.
1+.
1*.
0).
0(.
1'.
0&.
0%.
0$.
1#.
1".
0!.
0~-
1}-
0|-
0{-
0z-
1y-
1x-
0w-
0v-
1u-
0t-
0s-
0r-
1q-
1p-
0o-
0n-
1m-
0l-
0k-
0j-
1i-
1h-
0g-
0f-
1e-
0d-
0c-
0b-
1a-
1`-
0_-
0^-
1]-
0\-
0[-
0Z-
1Y-
1X-
0W-
0V-
1U-
0T-
0S-
0R-
1Q-
1P-
0O-
0N-
1M-
0L-
0K-
0J-
1I-
1H-
0G-
0F-
1E-
0D-
0C-
0B-
1A-
1@-
0?-
0>-
1=-
0<-
0;-
0:-
09-
08-
07-
06-
05-
04-
03-
02-
11-
10-
0/-
0.-
1--
0,-
0+-
0*-
0)-
1(-
0'-
1&-
0%-
0$-
b0 #-
b1 "-
b1111111111111111111111111111111111111111111111111111111111111011 !-
1~,
b1111111111111111111111111111111111111111111111111111111111111010 },
b0 |,
b1111111111111111111111111111111111111111111111111111111111111010 {,
0z,
b1111111111111111111111111111111111111111111111111111111111111011 y,
b101 x,
b0 w,
b0 v,
b0 u,
b0 t,
b0 s,
b0 r,
b0 q,
b101 p,
b0 o,
b0 n,
b101 m,
b101 l,
b101 k,
0j,
0i,
1h,
1g,
0f,
0e,
1d,
0c,
0b,
0a,
1`,
1_,
0^,
0],
1\,
0[,
0Z,
0Y,
1X,
1W,
0V,
0U,
1T,
0S,
0R,
0Q,
1P,
1O,
0N,
0M,
1L,
0K,
0J,
0I,
1H,
1G,
0F,
0E,
1D,
0C,
0B,
0A,
1@,
1?,
0>,
0=,
1<,
0;,
0:,
09,
18,
17,
06,
05,
14,
03,
02,
01,
10,
1/,
0.,
0-,
1,,
0+,
0*,
0),
1(,
1',
0&,
0%,
1$,
0#,
0",
0!,
1~+
1}+
0|+
0{+
1z+
0y+
0x+
0w+
1v+
1u+
0t+
0s+
1r+
0q+
0p+
0o+
1n+
1m+
0l+
0k+
1j+
0i+
0h+
0g+
1f+
1e+
0d+
0c+
1b+
0a+
0`+
0_+
1^+
1]+
0\+
0[+
1Z+
0Y+
0X+
0W+
1V+
1U+
0T+
0S+
1R+
0Q+
0P+
0O+
1N+
1M+
0L+
0K+
1J+
0I+
0H+
0G+
1F+
1E+
0D+
0C+
1B+
0A+
0@+
0?+
1>+
1=+
0<+
0;+
1:+
09+
08+
07+
16+
15+
04+
03+
12+
01+
00+
0/+
1.+
1-+
0,+
0++
1*+
0)+
0(+
0'+
1&+
1%+
0$+
0#+
1"+
0!+
0~*
0}*
1|*
1{*
0z*
0y*
1x*
0w*
0v*
0u*
1t*
1s*
0r*
0q*
1p*
0o*
0n*
0m*
1l*
1k*
0j*
0i*
1h*
0g*
0f*
0e*
1d*
1c*
0b*
0a*
1`*
0_*
0^*
0]*
1\*
1[*
0Z*
0Y*
1X*
0W*
0V*
0U*
1T*
1S*
0R*
0Q*
1P*
0O*
0N*
0M*
1L*
1K*
0J*
0I*
1H*
0G*
0F*
0E*
1D*
1C*
0B*
0A*
1@*
0?*
0>*
0=*
1<*
1;*
0:*
09*
18*
07*
06*
05*
14*
13*
02*
01*
10*
0/*
0.*
0-*
1,*
1+*
0**
0)*
1(*
0'*
0&*
0%*
1$*
1#*
0"*
0!*
1~)
0})
0|)
0{)
1z)
1y)
0x)
0w)
1v)
0u)
0t)
0s)
1r)
1q)
0p)
0o)
1n)
0m)
0l)
0k)
1j)
1i)
0h)
0g)
1f)
0e)
0d)
0c)
1b)
1a)
0`)
0_)
1^)
0])
0\)
0[)
1Z)
1Y)
0X)
0W)
1V)
0U)
0T)
0S)
1R)
1Q)
0P)
0O)
1N)
0M)
0L)
0K)
1J)
1I)
0H)
0G)
1F)
0E)
0D)
0C)
1B)
1A)
0@)
0?)
1>)
0=)
0<)
0;)
1:)
19)
08)
07)
16)
05)
04)
03)
12)
11)
00)
0/)
1.)
0-)
0,)
0+)
1*)
1))
0()
0')
1&)
0%)
0$)
0#)
1")
1!)
0~(
0}(
1|(
0{(
0z(
0y(
1x(
1w(
0v(
0u(
1t(
0s(
0r(
0q(
1p(
1o(
0n(
0m(
1l(
0k(
0j(
0i(
1h(
1g(
0f(
0e(
1d(
0c(
0b(
0a(
1`(
1_(
0^(
0](
1\(
0[(
0Z(
0Y(
1X(
1W(
0V(
0U(
1T(
0S(
0R(
0Q(
1P(
1O(
0N(
0M(
1L(
0K(
0J(
0I(
1H(
1G(
0F(
0E(
1D(
0C(
0B(
0A(
1@(
1?(
0>(
0=(
1<(
0;(
0:(
09(
18(
17(
06(
05(
14(
03(
02(
01(
10(
1/(
0.(
0-(
1,(
0+(
0*(
0)(
1((
1'(
0&(
0%(
1$(
0#(
0"(
0!(
1~'
1}'
0|'
0{'
1z'
0y'
0x'
0w'
1v'
1u'
0t'
0s'
1r'
0q'
0p'
0o'
1n'
1m'
0l'
0k'
1j'
0i'
0h'
0g'
1f'
1e'
0d'
0c'
1b'
0a'
0`'
0_'
1^'
1]'
0\'
0['
1Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
1N'
1M'
0L'
0K'
1J'
0I'
0H'
0G'
0F'
1E'
0D'
1C'
0B'
0A'
b0 @'
b1 ?'
b1111111111111111111111111111111111111111111111111111111111111011 >'
1='
b1111111111111111111111111111111111111111111111111111111111111010 <'
b0 ;'
b1111111111111111111111111111111111111111111111111111111111111010 :'
09'
b1111111111111111111111111111111111111111111111111111111111111011 8'
b101 7'
b0 6'
b1111111111111111111111111111111111111111111111111111111111111010 5'
b0 4'
13'
b101 2'
b101 1'
b0 0'
b1 /'
b1 .'
b1111111111111111111111111111111111111111111111111111111111111011 -'
b0 ,'
1+'
1*'
1)'
0('
b101 ''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
1o
1n
0m
0l
1k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
1_
1^
0]
0\
1[
0Z
b0 Y
b0 X
0W
b101 V
0U
b101 T
b101 S
b101 R
b0 Q
b0 P
b0 O
b101 N
b0 M
b0 L
b1 K
b1 J
b0 I
b0 H
b1111111111111111111111111111111111111111111111111111111111111011 G
b101 F
b101 E
0D
0C
0B
0A
0@
0?
0>
0=
0<
1;
b0 :
b0 9
b0 8
b101 7
16
05
04
b101 3
b0 2
b101 1
b10100000000000010010011 0
0/
b0 .
0-
1,
b0 +
b0 *
b101 )
b0 (
bx '
b0 &
1%
bx $
bx #
x"
0!
$end
#5
b100000 o2
1!
#10
0"
0!
#15
b100000 o2
1!
#20
b101 #
b1 $
1"
b100000 r2
b10100000000000010010011 '
b1 &
0!
0%
#25
1['
1>-
1T'
17-
1X'
1;-
1S'
16-
1L'
1/-
0M'
1P'
00-
13-
1K'
1.-
b1111 ?'
1D'
b1111 "-
1'-
b1000 )
b1000 j2
b0 J
b0 .'
03'
0E'
1H'
0U'
b1111111111111111111111111111111111111111111111111111111111111000 -'
b1111111111111111111111111111111111111111111111111111111111111000 8'
b1111111111111111111111111111111111111111111111111111111111111000 >'
1]'
0(-
1+-
08-
b1111111111111111111111111111111111111111111111111111111111111000 G
b1111111111111111111111111111111111111111111111111111111111111000 y,
b1111111111111111111111111111111111111111111111111111111111111000 !-
1@-
b1000 7
b1000 S
b1000 [2
b1000 1'
1F'
1V'
0^'
1)-
19-
0A-
0^
0n
b1000 R
b1000 V
1v
1B'
1R'
0Z'
1%-
15-
0=-
0_
0o
1w
b1111111111111111111111111111111111111111111111111111111111110111 5'
b1000 2'
b1111111111111111111111111111111111111111111111111111111111110111 :'
b1111111111111111111111111111111111111111111111111111111111110111 <'
b1000 N
b1000 m,
b1000 F
b1000 l,
b1111111111111111111111111111111111111111111111111111111111110111 {,
b1111111111111111111111111111111111111111111111111111111111110111 },
0[
0k
1s
b1000 E
b1000 T
b1000 ''
b1000 7'
b1000 k,
b1000 p,
b1000 x,
b1000 1
b1000 Q2
b1000 h2
b1000 f2
b10 e2
b10 g2
b10 i2
b1000 l2
b1100 3
b1100 T2
b100000000000000100010011 0
b100000000000000100010011 a2
b100000000000000100010011 d2
b100 (
b100 N2
b100 `2
b100 :
1!
#30
b1000 #
b10 $
b100000 r2
b100000000000000100010011 '
b10 &
0!
#35
b1 K
b1 /'
1)'
1*'
1+'
09'
0z,
0f,
0I2
1g,
0j,
1J2
0M2
0e,
0H2
0^,
0A2
1_,
0b,
1B2
0E2
0],
0@2
0V,
092
1W,
0Z,
1:2
0=2
0U,
082
0N,
012
1O,
0R,
122
052
0M,
002
0F,
0)2
1G,
0J,
1*2
0-2
0E,
0(2
0>,
0!2
1?,
0B,
1"2
0%2
0=,
0~1
06,
0w1
17,
0:,
1x1
0{1
05,
0v1
0.,
0o1
1/,
02,
1p1
0s1
0-,
0n1
0&,
0g1
1',
0*,
1h1
0k1
0%,
0f1
0|+
0_1
1}+
0",
1`1
0c1
0{+
0^1
0t+
0W1
1u+
0x+
1X1
0[1
0s+
0V1
0l+
0O1
1m+
0p+
1P1
0S1
0k+
0N1
0d+
0G1
1e+
0h+
1H1
0K1
0c+
0F1
0\+
0?1
1]+
0`+
1@1
0C1
0[+
0>1
0T+
071
1U+
0X+
181
0;1
0S+
061
0L+
0/1
1M+
0P+
101
031
0K+
0.1
0D+
0'1
1E+
0H+
1(1
0+1
0C+
0&1
0<+
0}0
1=+
0@+
1~0
0#1
0;+
0|0
04+
0u0
15+
08+
1v0
0y0
03+
0t0
0,+
0m0
1-+
00+
1n0
0q0
0++
0l0
0$+
0e0
1%+
0(+
1f0
0i0
0#+
0d0
0z*
0]0
1{*
0~*
1^0
0a0
0y*
0\0
0r*
0U0
1s*
0v*
1V0
0Y0
0q*
0T0
0j*
0M0
1k*
0n*
1N0
0Q0
0i*
0L0
0b*
0E0
1c*
0f*
1F0
0I0
0a*
0D0
0Z*
0=0
1[*
0^*
1>0
0A0
0Y*
0<0
0R*
050
1S*
0V*
160
090
0Q*
040
0J*
0-0
1K*
0N*
1.0
010
0I*
0,0
0B*
0%0
1C*
0F*
1&0
0)0
0A*
0$0
0:*
0{/
1;*
0>*
1|/
0!0
09*
0z/
02*
0s/
13*
06*
1t/
0w/
01*
0r/
0**
0k/
1+*
0.*
1l/
0o/
0)*
0j/
0"*
0c/
1#*
0&*
1d/
0g/
0!*
0b/
0x)
0[/
1y)
0|)
1\/
0_/
0w)
0Z/
0p)
0S/
1q)
0t)
1T/
0W/
0o)
0R/
0h)
0K/
1i)
0l)
1L/
0O/
0g)
0J/
0`)
0C/
1a)
0d)
1D/
0G/
0_)
0B/
0X)
0;/
1Y)
0\)
1</
0?/
0W)
0:/
0P)
03/
1Q)
0T)
14/
07/
0O)
02/
0H)
0+/
1I)
0L)
1,/
0//
0G)
0*/
0@)
0#/
1A)
0D)
1$/
0'/
0?)
0"/
08)
0y.
19)
0<)
1z.
0}.
07)
0x.
00)
0q.
11)
04)
1r.
0u.
0/)
0p.
0()
0i.
1))
0,)
1j.
0m.
0')
0h.
0~(
0a.
1!)
0$)
1b.
0e.
0}(
0`.
0v(
0Y.
1w(
0z(
1Z.
0].
0u(
0X.
0n(
0Q.
1o(
0r(
1R.
0U.
0m(
0P.
0f(
0I.
1g(
0j(
1J.
0M.
0e(
0H.
0^(
0A.
1_(
0b(
1B.
0E.
0](
0@.
0V(
09.
1W(
0Z(
1:.
0=.
0U(
08.
0N(
01.
1O(
0R(
12.
05.
0M(
00.
0F(
0).
1G(
0J(
1*.
0-.
0E(
0(.
0>(
0!.
1?(
0B(
1".
0%.
0=(
0~-
06(
0w-
17(
0:(
1x-
0{-
05(
0v-
0.(
0o-
1/(
02(
1p-
0s-
0-(
0n-
0&(
0g-
1'(
0*(
1h-
0k-
0%(
0f-
0|'
0_-
1}'
0"(
1`-
0c-
0{'
0^-
0t'
0W-
1u'
0x'
1X-
0[-
0s'
0V-
0l'
0O-
1m'
0p'
1P-
0S-
0k'
0N-
0d'
0G-
1e'
0h'
1H-
0K-
0S'
0['
0c'
06-
0>-
0F-
0L'
0T'
b11 ?'
0\'
0/-
07-
b11 "-
0?-
b110 )
b110 j2
1M'
0P'
0U'
0X'
b1111111111111111111111111111111111111111111111111111111111111010 -'
b1111111111111111111111111111111111111111111111111111111111111010 8'
b1111111111111111111111111111111111111111111111111111111111111010 >'
1]'
0`'
10-
03-
08-
0;-
b1111111111111111111111111111111111111111111111111111111111111010 G
b1111111111111111111111111111111111111111111111111111111111111010 y,
b1111111111111111111111111111111111111111111111111111111111111010 !-
1@-
0C-
b110 7
b110 S
b110 [2
b110 1'
0N'
0V'
1^'
01-
09-
1A-
1f
1n
b110 R
b110 V
0v
0J'
0R'
1Z'
0--
05-
1=-
1g
1o
0w
b1111111111111111111111111111111111111111111111111111111111111001 5'
b110 2'
b1111111111111111111111111111111111111111111111111111111111111001 :'
b1111111111111111111111111111111111111111111111111111111111111001 <'
b110 N
b110 m,
b110 F
b110 l,
b1111111111111111111111111111111111111111111111111111111111111001 {,
b1111111111111111111111111111111111111111111111111111111111111001 },
1c
1k
0s
b110 E
b110 T
b110 ''
b110 7'
b110 k,
b110 p,
b110 x,
b110 1
b110 Q2
b110 h2
b110 f2
b11 e2
b100000000010 g2
b11 i2
b110 l2
b1110 3
b1110 T2
b11000000000000110010011 0
b11000000000000110010011 a2
b11000000000000110010011 d2
b1000 (
b1000 N2
b1000 `2
b1000 :
1!
#40
b110 #
b11 $
b100000 r2
b11000000000000110010011 '
b11 &
0!
#45
1['
1>-
1T'
17-
1X'
1;-
1S'
16-
b1111 ?'
1L'
b1111 "-
1/-
b1000 )
b1000 j2
0M'
1P'
0U'
b1111111111111111111111111111111111111111111111111111111111111000 -'
b1111111111111111111111111111111111111111111111111111111111111000 8'
b1111111111111111111111111111111111111111111111111111111111111000 >'
1]'
00-
13-
08-
b1111111111111111111111111111111111111111111111111111111111111000 G
b1111111111111111111111111111111111111111111111111111111111111000 y,
b1111111111111111111111111111111111111111111111111111111111111000 !-
1@-
b1000 7
b1000 S
b1000 [2
b1000 1'
1N'
1V'
0^'
11-
19-
0A-
0f
0n
b1000 R
b1000 V
1v
1J'
1R'
0Z'
1--
15-
0=-
0g
0o
1w
b1111111111111111111111111111111111111111111111111111111111110111 5'
b1000 2'
b1111111111111111111111111111111111111111111111111111111111110111 :'
b1111111111111111111111111111111111111111111111111111111111110111 <'
b1000 N
b1000 m,
b1000 F
b1000 l,
b1111111111111111111111111111111111111111111111111111111111110111 {,
b1111111111111111111111111111111111111111111111111111111111110111 },
0c
0k
1s
b1000 E
b1000 T
b1000 ''
b1000 7'
b1000 k,
b1000 p,
b1000 x,
b1000 1
b1000 Q2
b1000 h2
b1000 f2
b1010 e2
b1010 g2
b1010 i2
b1000 l2
b10100 3
b10100 T2
b100000000000010100010011 0
b100000000000010100010011 a2
b100000000000010100010011 d2
b1100 (
b1100 N2
b1100 `2
b1100 :
1!
#50
b1000 #
b1010 $
b100000 r2
b100000000000010100010011 '
b100 &
0!
#55
b0 K
b0 /'
0)'
0*'
0+'
19'
1z,
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
0}'
1"(
0`-
1c-
1{'
1^-
1t'
1W-
0u'
1x'
0X-
1[-
1s'
1V-
1l'
1O-
0m'
1p'
0P-
1S-
1k'
1N-
1d'
1G-
0e'
1h'
0H-
1K-
1c'
1F-
b11111111111111111111111111111111111111111111111111111111111111111 ?'
1\'
b11111111111111111111111111111111111111111111111111111111111111111 "-
1?-
b0 )
b0 j2
b0 -'
b0 8'
b0 >'
0]'
1`'
b0 G
b0 y,
b0 !-
0@-
1C-
b0 7
b0 S
b0 [2
b0 1'
1^'
1A-
b0 R
b0 V
0v
1Z'
1=-
0w
b1111111111111111111111111111111111111111111111111111111111111111 5'
b0 2'
b1111111111111111111111111111111111111111111111111111111111111111 :'
b1111111111111111111111111111111111111111111111111111111111111111 <'
b0 N
b0 m,
b0 F
b0 l,
b1111111111111111111111111111111111111111111111111111111111111111 {,
b1111111111111111111111111111111111111111111111111111111111111111 },
0s
b0 E
b0 T
b0 ''
b0 7'
b0 k,
b0 p,
b0 x,
b0 1
b0 Q2
b0 h2
b0 f2
b111 e2
b100000000110 g2
b111 i2
b0 l2
b10000 3
b10000 T2
b1110010011 0
b1110010011 a2
b1110010011 d2
b10000 (
b10000 N2
b10000 `2
b10000 :
1!
#60
b0 #
b111 $
b100000 r2
b1110010011 '
b101 &
0!
#65
0S'
0['
06-
0>-
0L'
b11111111111111111111111111111111111111111111111111111111111110011 ?'
0T'
0/-
b11111111111111111111111111111111111111111111111111111111111110011 "-
07-
1M'
0P'
0U'
0X'
10-
03-
08-
0;-
b110 1'
0N'
0V'
01-
09-
b1110 )
b1110 j2
1f
1n
0J'
0R'
0--
05-
b10 G
b10 y,
b10 !-
0@-
0C-
b1110 7
b1110 S
b1110 [2
b10 -'
b10 8'
b10 >'
0]'
0`'
b1110 R
b1110 V
1v
1g
1o
b110 2'
b1111111111111111111111111111111111111111111111111111111111111001 :'
b1111111111111111111111111111111111111111111111111111111111111001 <'
b1111111111111111111111111111111111111111111111111111111111111001 {,
b1111111111111111111111111111111111111111111111111111111111111001 },
0A-
1B-
b1110 F
b1110 l,
b1110 N
b1110 m,
0^'
1_'
b1000 4'
b1111111111111111111111111111111111111111111111111111111111110001 5'
1w
1c
1k
1<-
1Y'
1r
b1000000000 L
b1000000000 r,
b0 v,
b0 w,
b1000000000 u,
b110 E
b110 T
b110 ''
b110 7'
b110 k,
b110 p,
b110 x,
b110 *
b110 O2
b110 \2
b110 n2
0S2
b1000 +
b1000 M
b1000 Y
b1000 6'
b1000 ;'
b1000 @'
b1000 o,
b1000 q,
b1000 |,
b1000 #-
b1000 P2
b1000 m2
06
1,
b11 1
b11 Q2
b11 h2
b11 f2
b100 e2
b100 g2
b100 i2
b11 l2
b10 k2
b110011 W2
b10111 3
b10111 T2
b1100010000001000110011 0
b1100010000001000110011 a2
b1100010000001000110011 d2
b10100 (
b10100 N2
b10100 `2
b10100 :
1!
#70
b1110 #
b100 $
b100000 r2
b1100010000001000110011 '
b110 &
0!
#75
b0 K
b0 /'
0)'
0*'
1z,
0+'
19'
1I2
1f,
0J2
1M2
0g,
1j,
1H2
1e,
1A2
1^,
0B2
1E2
0_,
1b,
1@2
1],
192
1V,
0:2
1=2
0W,
1Z,
182
1U,
112
1N,
022
152
0O,
1R,
102
1M,
1)2
1F,
0*2
1-2
0G,
1J,
1(2
1E,
1!2
1>,
0"2
1%2
0?,
1B,
1~1
1=,
1w1
16,
0x1
1{1
07,
1:,
1v1
15,
1o1
1.,
0p1
1s1
0/,
12,
1n1
1-,
1g1
1&,
0h1
1k1
0',
1*,
1f1
1%,
1_1
1|+
0`1
1c1
0}+
1",
1^1
1{+
1W1
1t+
0X1
1[1
0u+
1x+
1V1
1s+
1O1
1l+
0P1
1S1
0m+
1p+
1N1
1k+
1G1
1d+
0H1
1K1
0e+
1h+
1F1
1c+
1?1
1\+
0@1
1C1
0]+
1`+
1>1
1[+
171
1T+
081
1;1
0U+
1X+
161
1S+
1/1
1L+
001
131
0M+
1P+
1.1
1K+
1'1
1D+
0(1
1+1
0E+
1H+
1&1
1C+
1}0
1<+
0~0
1#1
0=+
1@+
1|0
1;+
1u0
14+
0v0
1y0
05+
18+
1t0
13+
1m0
1,+
0n0
1q0
0-+
10+
1l0
1++
1e0
1$+
0f0
1i0
0%+
1(+
1d0
1#+
1]0
1z*
0^0
1a0
0{*
1~*
1\0
1y*
1U0
1r*
0V0
1Y0
0s*
1v*
1T0
1q*
1M0
1j*
0N0
1Q0
0k*
1n*
1L0
1i*
1E0
1b*
0F0
1I0
0c*
1f*
1D0
1a*
1=0
1Z*
0>0
1A0
0[*
1^*
1<0
1Y*
150
1R*
060
190
0S*
1V*
140
1Q*
1-0
1J*
0.0
110
0K*
1N*
1,0
1I*
1%0
1B*
0&0
1)0
0C*
1F*
1$0
1A*
1{/
1:*
0|/
1!0
0;*
1>*
1z/
19*
1s/
12*
0t/
1w/
03*
16*
1r/
11*
1k/
1**
0l/
1o/
0+*
1.*
1j/
1)*
1c/
1"*
0d/
1g/
0#*
1&*
1b/
1!*
1[/
1x)
0\/
1_/
0y)
1|)
1Z/
1w)
1S/
1p)
0T/
1W/
0q)
1t)
1R/
1o)
1K/
1h)
0L/
1O/
0i)
1l)
1J/
1g)
1C/
1`)
0D/
1G/
0a)
1d)
1B/
1_)
1;/
1X)
0</
1?/
0Y)
1\)
1:/
1W)
13/
1P)
04/
17/
0Q)
1T)
12/
1O)
1+/
1H)
0,/
1//
0I)
1L)
1*/
1G)
1#/
1@)
0$/
1'/
0A)
1D)
1"/
1?)
1y.
18)
0z.
1}.
09)
1<)
1x.
17)
1q.
10)
0r.
1u.
01)
14)
1p.
1/)
1i.
1()
0j.
1m.
0))
1,)
1h.
1')
1a.
1~(
0b.
1e.
0!)
1$)
1`.
1}(
1Y.
1v(
0Z.
1].
0w(
1z(
1X.
1u(
1Q.
1n(
0R.
1U.
0o(
1r(
1P.
1m(
1I.
1f(
0J.
1M.
0g(
1j(
1H.
1e(
1A.
1^(
0B.
1E.
0_(
1b(
1@.
1](
19.
1V(
0:.
1=.
0W(
1Z(
18.
1U(
11.
1N(
02.
15.
0O(
1R(
10.
1M(
1).
1F(
0*.
1-.
0G(
1J(
1(.
1E(
1!.
1>(
0".
1%.
0?(
1B(
1~-
1=(
1w-
16(
0x-
1{-
07(
1:(
1v-
15(
1o-
1.(
0p-
1s-
0/(
12(
1n-
1-(
1g-
1&(
0h-
1k-
0'(
1*(
1f-
1%(
1_-
1|'
0`-
1c-
0}'
1"(
1^-
1{'
1W-
1t'
0X-
1[-
0u'
1x'
1V-
1s'
1O-
1C-
1l'
1`'
0K'
0.-
0P-
1S-
1>-
0m'
1p'
1['
0D'
0'-
1N-
17-
1k'
1T'
b1 J
b1 .'
13'
1E'
0H'
1(-
0+-
1G-
1;-
1d'
1X'
0F'
1O'
0)-
12-
0H-
1K-
16-
0e'
1h'
1S'
b1 1'
1^
0B'
1J'
0%-
1--
1F-
1/-
1c'
1L'
1t
0l
1_
b1111111111111111111111111111111111111111111111111111111111111010 :'
b1111111111111111111111111111111111111111111111111111111111111010 <'
b1111111111111111111111111111111111111111111111111111111111111010 {,
b1111111111111111111111111111111111111111111111111111111111111010 },
0@-
b11111111111111111111111111111111111111111111111111111111111111101 "-
1?-
08-
b1 G
b1 y,
b1 !-
00-
03-
0]'
b11111111111111111111111111111111111111111111111111111111111111101 ?'
1\'
0U'
b1 -'
b1 8'
b1 >'
0M'
0P'
b1 2'
1v
0n
1m
b1011 R
b1011 V
1f
b1000 X
0e
b1 )
b1 j2
1[
0c
1A-
0B-
19-
01-
b111 N
b111 m,
b11 F
b11 l,
b100 Q
b100 n,
1^'
0_'
1V'
0N'
b10 4'
b1111111111111111111111111111111111111111111111111111111111111100 5'
0w
0o
1p
1g
0h
b1 7
b1 S
b1 [2
b101 E
b101 T
b101 ''
b101 7'
b101 k,
b101 p,
b101 x,
0<-
14-
1,-
0Y'
1Q'
1I'
0r
1j
1b
b11000000 L
b11000000 r,
b0 v,
b0 w,
b11000000 u,
1C
0;
b101 *
b101 O2
b101 \2
b101 n2
0S2
b110 +
b110 M
b110 Y
b110 6'
b110 ;'
b110 @'
b110 o,
b110 q,
b110 |,
b110 #-
b110 P2
b110 m2
b100000 8
b100000 O
b100000 Y2
1,
b10000000001 1
b10000000001 Q2
b10000000001 h2
b10000000001 f2
b10000000101 e2
b110000000100 g2
b101 i2
b1 l2
b11 k2
b100000 V2
b10000011001 3
b10000011001 T2
b1000000000100011000001010110011 0
b1000000000100011000001010110011 a2
b1000000000100011000001010110011 d2
b11000 (
b11000 N2
b11000 `2
b11000 :
1!
#80
b1 #
b101 $
b100000 r2
b1000000000100011000001010110011 '
b111 &
0!
#85
1P'
13-
1K'
1.-
1D'
1'-
0~
b0 J
b0 .'
03'
0E'
1H'
0(-
1+-
1>-
1['
0|
b0 1'
1F'
1)-
17-
16-
1T'
1S'
0u
0t
0^
1B'
1R'
1%-
15-
1@-
0C-
08-
1;-
b1000 G
b1000 y,
b1000 !-
00-
b11111111111111111111111111111111111111111111111111111111111111111 "-
1/-
1]'
0`'
0U'
1X'
b1000 -'
b1000 8'
b1000 >'
0M'
b11111111111111111111111111111111111111111111111111111111111111111 ?'
1L'
1v
0y
b0 X
0m
b1000 R
b1000 V
0f
0_
b0 2'
b1111111111111111111111111111111111111111111111111111111111111111 :'
b1111111111111111111111111111111111111111111111111111111111111111 <'
b1111111111111111111111111111111111111111111111111111111111111111 {,
b1111111111111111111111111111111111111111111111111111111111111111 },
0A-
1B-
19-
11-
02-
b0 Q
b0 n,
b1000 F
b1000 l,
b1000 N
b1000 m,
0^'
1_'
1V'
1N'
0O'
b1000 4'
b1111111111111111111111111111111111111111111111111111111111110111 5'
1w
0p
0g
0[
0k
b1000 7
b1000 S
b1000 [2
1<-
04-
0,-
1Y'
0Q'
0I'
1r
0j
0b
b1000 I
b1000 s,
b1000 H
b1000 t,
b1000 L
b1000 r,
b1000 v,
b1000 w,
b1000 u,
b0 E
b0 T
b0 ''
b0 7'
b0 k,
b0 p,
b0 x,
b0 .
b0 ]2
b0 )
b0 j2
0C
1;
b0 *
b0 O2
b0 \2
b0 n2
b1000 +
b1000 M
b1000 Y
b1000 6'
b1000 ;'
b1000 @'
b1000 o,
b1000 q,
b1000 |,
b1000 #-
b1000 P2
b1000 m2
16
1/
b0 8
b0 O
b0 Y2
1,
b0 1
b0 Q2
b0 h2
b0 f2
b110 e2
b110 g2
b110 i2
b0 l2
b1010 k2
b0 V2
b11 U2
b11 W2
b11100 3
b11100 T2
b1010011001100000011 0
b1010011001100000011 a2
b1010011001100000011 d2
b11100 (
b11100 N2
b11100 `2
b11100 :
1!
#90
b0 #
b110 $
b100000 r2
b1010011001100000011 '
b1000 &
0!
#95
b0 K
b0 /'
0)'
0*'
0+'
19'
1z,
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
0}'
1"(
0`-
1c-
1{'
1^-
1t'
1W-
0u'
1x'
0X-
1[-
1s'
1V-
1l'
1O-
0m'
1p'
0P-
1S-
1k'
1N-
1d'
1G-
0e'
1h'
0H-
1K-
1c'
1F-
1['
1>-
1~
0]'
1`'
1\'
0@-
1C-
1?-
b11111111111111111111111111111111111111111111111111111111111111111 ?'
1T'
b11111111111111111111111111111111111111111111111111111111111111111 "-
17-
1|
1^'
0_'
1A-
0B-
b0 -'
b0 8'
b0 >'
0U'
1X'
b0 G
b0 y,
b0 !-
08-
1;-
0v
b10000 X
1u
b0 4'
0Z'
0=-
b10000 7
b10000 S
b10000 [2
b0 1'
1V'
19-
0w
1x
b1000 Q
b1000 n,
b10000 R
b10000 V
0n
1R'
15-
1s
0o
b1111111111111111111111111111111111111111111111111111111111111111 5'
b0 2'
b1111111111111111111111111111111111111111111111111111111111110111 :'
b1111111111111111111111111111111111111111111111111111111111110111 <'
b1000 N
b1000 m,
b0 F
b0 l,
b1111111111111111111111111111111111111111111111111111111111110111 {,
b1111111111111111111111111111111111111111111111111111111111110111 },
0k
b0 I
b0 s,
b0 H
b0 t,
b100000000000 L
b100000000000 r,
b0 v,
b0 w,
b100000000000 u,
b10000 )
b10000 j2
b1000 E
b1000 T
b1000 ''
b1000 7'
b1000 k,
b1000 p,
b1000 x,
b1110 *
b1110 O2
b1110 \2
b1110 n2
b1 2
b1 Z2
b1 c2
1-
16
0,
0/
b1000 1
b1000 Q2
b1000 h2
b100 f2
b1000 e2
b1000 g2
b1000 i2
b100 l2
b100011 W2
b101000 3
b101000 T2
b10001010011010000100011 0
b10001010011010000100011 a2
b10001010011010000100011 d2
b100000 (
b100000 N2
b100000 `2
b100000 :
1!
#100
b10000 #
b1000 $
0"
b10 s2
b100000 r2
b10001010011010000100011 '
b1001 &
0!
#105
b1 K
b1 /'
1)'
1*'
0z,
1+'
09'
0I2
0f,
1J2
0M2
1g,
0j,
0H2
0e,
0A2
0^,
1B2
0E2
1_,
0b,
0@2
0],
092
0V,
1:2
0=2
1W,
0Z,
082
0U,
012
0N,
122
052
1O,
0R,
002
0M,
0)2
0F,
1*2
0-2
1G,
0J,
0(2
0E,
0!2
0>,
1"2
0%2
1?,
0B,
0~1
0=,
0w1
06,
1x1
0{1
17,
0:,
0v1
05,
0o1
0.,
1p1
0s1
1/,
02,
0n1
0-,
0g1
0&,
1h1
0k1
1',
0*,
0f1
0%,
0_1
0|+
1`1
0c1
1}+
0",
0^1
0{+
0W1
0t+
1X1
0[1
1u+
0x+
0V1
0s+
0O1
0l+
1P1
0S1
1m+
0p+
0N1
0k+
0G1
0d+
1H1
0K1
1e+
0h+
0F1
0c+
0?1
0\+
1@1
0C1
1]+
0`+
0>1
0[+
071
0T+
181
0;1
1U+
0X+
061
0S+
0/1
0L+
101
031
1M+
0P+
0.1
0K+
0'1
0D+
1(1
0+1
1E+
0H+
0&1
0C+
0}0
0<+
1~0
0#1
1=+
0@+
0|0
0;+
0u0
04+
1v0
0y0
15+
08+
0t0
03+
0m0
0,+
1n0
0q0
1-+
00+
0l0
0++
0e0
0$+
1f0
0i0
1%+
0(+
0d0
0#+
0]0
0z*
1^0
0a0
1{*
0~*
0\0
0y*
0U0
0r*
1V0
0Y0
1s*
0v*
0T0
0q*
0M0
0j*
1N0
0Q0
1k*
0n*
0L0
0i*
0E0
0b*
1F0
0I0
1c*
0f*
0D0
0a*
0=0
0Z*
1>0
0A0
1[*
0^*
0<0
0Y*
050
0R*
160
090
1S*
0V*
040
0Q*
0-0
0J*
1.0
010
1K*
0N*
0,0
0I*
0%0
0B*
1&0
0)0
1C*
0F*
0$0
0A*
0{/
0:*
1|/
0!0
1;*
0>*
0z/
09*
0s/
02*
1t/
0w/
13*
06*
0r/
01*
0k/
0**
1l/
0o/
1+*
0.*
0j/
0)*
0c/
0"*
1d/
0g/
1#*
0&*
0b/
0!*
0[/
0x)
1\/
0_/
1y)
0|)
0Z/
0w)
0S/
0p)
1T/
0W/
1q)
0t)
0R/
0o)
0K/
0h)
1L/
0O/
1i)
0l)
0J/
0g)
0C/
0`)
1D/
0G/
1a)
0d)
0B/
0_)
0;/
0X)
1</
0?/
1Y)
0\)
0:/
0W)
03/
0P)
14/
07/
1Q)
0T)
02/
0O)
0+/
0H)
1,/
0//
1I)
0L)
0*/
0G)
0#/
0@)
1$/
0'/
1A)
0D)
0"/
0?)
0y.
08)
1z.
0}.
19)
0<)
0x.
07)
0q.
00)
1r.
0u.
11)
04)
0p.
0/)
0i.
0()
1j.
0m.
1))
0,)
0h.
0')
0a.
0~(
1b.
0e.
1!)
0$)
0`.
0}(
0Y.
0v(
1Z.
0].
1w(
0z(
0X.
0u(
0Q.
0n(
1R.
0U.
1o(
0r(
0P.
0m(
0I.
0f(
1J.
0M.
1g(
0j(
0H.
0e(
0A.
0^(
1B.
0E.
1_(
0b(
0@.
0](
09.
0V(
1:.
0=.
1W(
0Z(
08.
0U(
01.
0N(
12.
05.
1O(
0R(
00.
0M(
0).
0F(
1*.
0-.
1G(
0J(
0(.
0E(
0!.
0>(
1".
0%.
1?(
0B(
0~-
0=(
0w-
06(
1x-
0{-
17(
0:(
0v-
05(
0o-
0.(
1p-
0s-
1/(
02(
0n-
0-(
0g-
0&(
1h-
0k-
1'(
0*(
0f-
0%(
0_-
0|'
1`-
0c-
1}'
0"(
0^-
0{'
0W-
0t'
1X-
0[-
1u'
0x'
0V-
0s'
0O-
0l'
1P-
0S-
1m'
0p'
0N-
0k'
0K'
0S'
0['
0.-
06-
0>-
0G-
0d'
0D'
0L'
0T'
0'-
0/-
07-
1H-
0K-
1e'
0h'
b1 J
b1 .'
13'
1E'
0H'
1M'
0P'
1U'
0X'
1(-
0+-
10-
03-
18-
0;-
b1 )
b1 j2
0F-
0c'
0~
b1 1'
0F'
1N'
1V'
0)-
11-
19-
b1 7
b1 S
b1 [2
b1 "-
0?-
b1 ?'
0\'
0|
1^
0f
b1 R
b1 V
0n
0B'
1J'
1R'
1Z'
0%-
1--
15-
1=-
b1111111111111111111111111111111111111111111111111111111111111111 G
b1111111111111111111111111111111111111111111111111111111111111111 y,
b1111111111111111111111111111111111111111111111111111111111111111 !-
1@-
0C-
b1111111111111111111111111111111111111111111111111111111111111111 -'
b1111111111111111111111111111111111111111111111111111111111111111 8'
b1111111111111111111111111111111111111111111111111111111111111111 >'
1]'
0`'
b0 X
0u
1_
0g
0o
b1111111111111111111111111111111111111111111111111111111111111110 5'
b1 2'
b1111111111111111111111111111111111111111111111111111111111111110 :'
b1111111111111111111111111111111111111111111111111111111111111110 <'
b1 F
b1 l,
b1111111111111111111111111111111111111111111111111111111111111110 {,
b1111111111111111111111111111111111111111111111111111111111111110 },
1A-
b0 Q
b0 n,
b1 N
b1 m,
1^'
0x
1[
0c
0k
0s
0<-
0Y'
0r
b0 L
b0 r,
b0 u,
b1 E
b1 T
b1 ''
b1 7'
b1 k,
b1 p,
b1 x,
b101 *
b101 O2
b101 \2
b101 n2
b0 +
b0 M
b0 Y
b0 6'
b0 ;'
b0 @'
b0 o,
b0 q,
b0 |,
b0 #-
b0 P2
b0 m2
1,
16
b0 2
b0 Z2
b0 c2
0-
b1 1
b1 Q2
b1 h2
b1 f2
b111 e2
b100000000110 g2
b111 i2
b1 l2
b111 k2
b0 U2
b10011 W2
b100101 3
b100101 T2
b100111000001110010011 0
b100111000001110010011 a2
b100111000001110010011 d2
b100100 (
b100100 N2
b100100 `2
b100100 :
1!
#110
b1 #
b111 $
1"
b100000 r2
b100111000001110010011 '
b1010 &
0!
#115
16-
1S'
1/-
1L'
1U'
18-
00-
13-
0M'
1P'
b0 J
b0 .'
03'
0V'
09-
1.-
1K'
b100 1'
1f
1n
0R'
05-
b111 "-
1'-
b100000 )
b100000 j2
b111 ?'
1D'
1d
1o
b1111111111111111111111111111111111111111111111111111111111111010 :'
b1111111111111111111111111111111111111111111111111111111111111010 <'
b101 N
b101 m,
b1111111111111111111111111111111111111111111111111111111111111010 {,
b1111111111111111111111111111111111111111111111111111111111111010 },
b1111111111111111111111111111111111111111111111111111111111111100 G
b1111111111111111111111111111111111111111111111111111111111111100 y,
b1111111111111111111111111111111111111111111111111111111111111100 !-
0(-
1+-
b100000 7
b100000 S
b100000 [2
b1111111111111111111111111111111111111111111111111111111111111100 -'
b1111111111111111111111111111111111111111111111111111111111111100 8'
b1111111111111111111111111111111111111111111111111111111111111100 >'
0E'
1H'
b100 2'
b110 R
b110 V
0^
b10 X
1]
1k
1>
0;
14
1)-
b100 F
b100 l,
b1 Q
b1 n,
1F'
b1111111111111111111111111111111111111111111111111111111111111011 5'
0_
1`
b101 E
b101 T
b101 ''
b101 7'
b101 k,
b101 p,
b101 x,
b1 9
b1 P
b1 R2
b1 X2
b10 2
b10 Z2
b10 c2
15
06
0,
1$-
1A'
1Z
b100000 L
b100000 r,
b0 v,
b0 w,
b100000 u,
b111111111111111111111111111111111111111111111111111111111111100 1
b111111111111111111111111111111111111111111111111111111111111100 Q2
b111111111111111111111111111111111111111111111111111111111111100 h2
b111111100001 f2
b111111111001 e2
b1111111111000 g2
b11001 i2
b1111111 V2
b1 U2
b1100011 W2
b1 +
b1 M
b1 Y
b1 6'
b1 ;'
b1 @'
b1 o,
b1 q,
b1 |,
b1 #-
b1 P2
b1 m2
b1000000000000000000000000000000000000000000000000000000000100100 3
b1000000000000000000000000000000000000000000000000000000000100100 T2
b11111110000100111001110011100011 0
b11111110000100111001110011100011 a2
b11111110000100111001110011100011 d2
b101000 (
b101000 N2
b101000 `2
b101000 :
1!
#120
b100000 #
b11001 $
0"
b100000 r2
b11111110000100111001110011100011 '
b1011 &
0!
#125
b0 K
b0 /'
0)'
0*'
0+'
19'
1z,
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
0}'
1"(
0`-
1c-
1{'
1^-
1t'
1W-
0u'
1x'
0X-
1[-
1s'
1V-
1l'
1O-
0m'
1p'
0P-
1S-
1k'
1N-
1d'
1G-
0e'
1h'
0H-
1K-
1c'
1F-
1\'
1?-
0]'
1`'
0@-
1C-
1['
1>-
b11111111111111111111111111111111111111111111111111111111111111111 ?'
1T'
b11111111111111111111111111111111111111111111111111111111111111111 "-
17-
b0 -'
b0 8'
b0 >'
0U'
1X'
b0 G
b0 y,
b0 !-
08-
1;-
b0 1'
1V'
19-
b10 R
b10 V
0n
1R'
15-
0o
b1111111111111111111111111111111111111111111111111111111111111111 5'
b0 2'
b1111111111111111111111111111111111111111111111111111111111111110 :'
b1111111111111111111111111111111111111111111111111111111111111110 <'
b1 N
b1 m,
b0 F
b0 l,
b1111111111111111111111111111111111111111111111111111111111111110 {,
b1111111111111111111111111111111111111111111111111111111111111110 },
b10 )
b10 j2
0k
b10 L
b10 r,
b0 v,
b0 w,
b10 u,
b10 7
b10 S
b10 [2
b1 E
b1 T
b1 ''
b1 7'
b1 k,
b1 p,
b1 x,
0>
1;
16
1,
b0 2
b0 Z2
b0 c2
b0 9
b0 P
b0 R2
b0 X2
05
b1 1
b1 Q2
b1 h2
b1 f2
b111 e2
b100000000110 g2
b111 i2
b0 V2
b0 U2
b10011 W2
b1000000000000000000000000000000000000000000000000000000000100101 3
b1000000000000000000000000000000000000000000000000000000000100101 T2
04
b100111000001110010011 0
b100111000001110010011 a2
b100111000001110010011 d2
b1000000000000000000000000000000000000000000000000000000000100100 (
b1000000000000000000000000000000000000000000000000000000000100100 N2
b1000000000000000000000000000000000000000000000000000000000100100 `2
b1000000000000000000000000000000000000000000000000000000000100100 :
1!
#130
b10 #
b111 $
1"
b100000 r2
b100111000001110010011 '
b1100 &
0!
#135
b1 K
b1 /'
1)'
1*'
1+'
09'
0z,
0f,
0I2
1g,
0j,
1J2
0M2
0e,
0H2
0^,
0A2
1_,
0b,
1B2
0E2
0],
0@2
0V,
092
1W,
0Z,
1:2
0=2
0U,
082
0N,
012
1O,
0R,
122
052
0M,
002
0F,
0)2
1G,
0J,
1*2
0-2
0E,
0(2
0>,
0!2
1?,
0B,
1"2
0%2
0=,
0~1
06,
0w1
17,
0:,
1x1
0{1
05,
0v1
0.,
0o1
1/,
02,
1p1
0s1
0-,
0n1
0&,
0g1
1',
0*,
1h1
0k1
0%,
0f1
0|+
0_1
1}+
0",
1`1
0c1
0{+
0^1
0t+
0W1
1u+
0x+
1X1
0[1
0s+
0V1
0l+
0O1
1m+
0p+
1P1
0S1
0k+
0N1
0d+
0G1
1e+
0h+
1H1
0K1
0c+
0F1
0\+
0?1
1]+
0`+
1@1
0C1
0[+
0>1
0T+
071
1U+
0X+
181
0;1
0S+
061
0L+
0/1
1M+
0P+
101
031
0K+
0.1
0D+
0'1
1E+
0H+
1(1
0+1
0C+
0&1
0<+
0}0
1=+
0@+
1~0
0#1
0;+
0|0
04+
0u0
15+
08+
1v0
0y0
03+
0t0
0,+
0m0
1-+
00+
1n0
0q0
0++
0l0
0$+
0e0
1%+
0(+
1f0
0i0
0#+
0d0
0z*
0]0
1{*
0~*
1^0
0a0
0y*
0\0
0r*
0U0
1s*
0v*
1V0
0Y0
0q*
0T0
0j*
0M0
1k*
0n*
1N0
0Q0
0i*
0L0
0b*
0E0
1c*
0f*
1F0
0I0
0a*
0D0
0Z*
0=0
1[*
0^*
1>0
0A0
0Y*
0<0
0R*
050
1S*
0V*
160
090
0Q*
040
0J*
0-0
1K*
0N*
1.0
010
0I*
0,0
0B*
0%0
1C*
0F*
1&0
0)0
0A*
0$0
0:*
0{/
1;*
0>*
1|/
0!0
09*
0z/
02*
0s/
13*
06*
1t/
0w/
01*
0r/
0**
0k/
1+*
0.*
1l/
0o/
0)*
0j/
0"*
0c/
1#*
0&*
1d/
0g/
0!*
0b/
0x)
0[/
1y)
0|)
1\/
0_/
0w)
0Z/
0p)
0S/
1q)
0t)
1T/
0W/
0o)
0R/
0h)
0K/
1i)
0l)
1L/
0O/
0g)
0J/
0`)
0C/
1a)
0d)
1D/
0G/
0_)
0B/
0X)
0;/
1Y)
0\)
1</
0?/
0W)
0:/
0P)
03/
1Q)
0T)
14/
07/
0O)
02/
0H)
0+/
1I)
0L)
1,/
0//
0G)
0*/
0@)
0#/
1A)
0D)
1$/
0'/
0?)
0"/
08)
0y.
19)
0<)
1z.
0}.
07)
0x.
00)
0q.
11)
04)
1r.
0u.
0/)
0p.
0()
0i.
1))
0,)
1j.
0m.
0')
0h.
0~(
0a.
1!)
0$)
1b.
0e.
0}(
0`.
0v(
0Y.
1w(
0z(
1Z.
0].
0u(
0X.
0n(
0Q.
1o(
0r(
1R.
0U.
0m(
0P.
0f(
0I.
1g(
0j(
1J.
0M.
0e(
0H.
0^(
0A.
1_(
0b(
1B.
0E.
0](
0@.
0V(
09.
1W(
0Z(
1:.
0=.
0U(
08.
0N(
01.
1O(
0R(
12.
05.
0M(
00.
0F(
0).
1G(
0J(
1*.
0-.
0E(
0(.
0>(
0!.
1?(
0B(
1".
0%.
0=(
0~-
06(
0w-
17(
0:(
1x-
0{-
05(
0v-
0.(
0o-
1/(
02(
1p-
0s-
0-(
0n-
0&(
0g-
1'(
0*(
1h-
0k-
0%(
0f-
0|'
0_-
1}'
0"(
1`-
0c-
0{'
0^-
0t'
0W-
1u'
0x'
1X-
0[-
0s'
0V-
0l'
0O-
1m'
0p'
1P-
0S-
0k'
0N-
0d'
0G-
1e'
0h'
1H-
0K-
0c'
0F-
0\'
0?-
1]'
0`'
1@-
0C-
0v
0['
0>-
0t
0T'
07-
0m
1U'
0X'
18-
0;-
b1 J
b1 .'
13'
0q
0V'
09-
0.-
0K'
b101 1'
0l
1n
0R'
05-
b101 "-
0'-
b1000000 )
b1000000 j2
b101 ?'
0D'
0e
0d
1o
b1111111111111111111111111111111111111111111111111111111111111010 :'
b1111111111111111111111111111111111111111111111111111111111111010 <'
b1111111111111111111111111111111111111111111111111111111111111010 {,
b1111111111111111111111111111111111111111111111111111111111111010 },
00-
03-
b1111111111111111111111111111111111111111111111111111111111111101 G
b1111111111111111111111111111111111111111111111111111111111111101 y,
b1111111111111111111111111111111111111111111111111111111111111101 !-
1(-
0+-
b1000000 7
b1000000 S
b1000000 [2
0M'
0P'
b1111111111111111111111111111111111111111111111111111111111111101 -'
b1111111111111111111111111111111111111111111111111111111111111101 8'
b1111111111111111111111111111111111111111111111111111111111111101 >'
1E'
0H'
b101 2'
1f
0i
b111 R
b111 V
1^
b0 X
0]
1k
1>
0;
14
01-
12-
0)-
b111 N
b111 m,
b111 F
b111 l,
b0 Q
b0 n,
0N'
1O'
0F'
b10 4'
b1111111111111111111111111111111111111111111111111111111111111000 5'
1g
1_
0`
b101 E
b101 T
b101 ''
b101 7'
b101 k,
b101 p,
b101 x,
b1 9
b1 P
b1 R2
b1 X2
b10 2
b10 Z2
b10 c2
15
06
0,
1,-
0$-
1I'
0A'
1b
0Z
b0 I
b0 s,
b0 H
b0 t,
b1000000 L
b1000000 r,
b1000000 u,
b0 v,
b0 w,
b111111111111111111111111111111111111111111111111111111111111100 1
b111111111111111111111111111111111111111111111111111111111111100 Q2
b111111111111111111111111111111111111111111111111111111111111100 h2
b111111100001 f2
b111111111001 e2
b1111111111000 g2
b11001 i2
b1111111 V2
b1 U2
b1100011 W2
b10 +
b10 M
b10 Y
b10 6'
b10 ;'
b10 @'
b10 o,
b10 q,
b10 |,
b10 #-
b10 P2
b10 m2
b100100 3
b100100 T2
b11111110000100111001110011100011 0
b11111110000100111001110011100011 a2
b11111110000100111001110011100011 d2
b1000000000000000000000000000000000000000000000000000000000101000 (
b1000000000000000000000000000000000000000000000000000000000101000 N2
b1000000000000000000000000000000000000000000000000000000000101000 `2
b1000000000000000000000000000000000000000000000000000000000101000 :
1!
#140
b1000000 #
b11001 $
0"
b100000 r2
b11111110000100111001110011100011 '
b1101 &
0!
#145
b0 K
b0 /'
0)'
0*'
0+'
19'
1z,
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
0}'
1"(
0`-
1c-
1{'
1^-
1t'
1W-
0u'
1x'
0X-
1[-
1s'
1V-
1l'
1O-
0m'
1p'
0P-
1S-
1k'
1N-
1d'
1G-
0e'
1h'
0H-
1K-
1c'
1F-
1\'
1?-
0]'
1`'
0@-
1C-
1['
1>-
b11111111111111111111111111111111111111111111111111111111111111101 ?'
1T'
b11111111111111111111111111111111111111111111111111111111111111101 "-
17-
b1 -'
b1 8'
b1 >'
0U'
1X'
b1 G
b1 y,
b1 !-
08-
1;-
b1 1'
1V'
19-
b11 R
b11 V
0n
1R'
15-
0o
b1111111111111111111111111111111111111111111111111111111111111100 5'
b1 2'
b1111111111111111111111111111111111111111111111111111111111111110 :'
b1111111111111111111111111111111111111111111111111111111111111110 <'
b11 N
b11 m,
b11 F
b11 l,
b1111111111111111111111111111111111111111111111111111111111111110 {,
b1111111111111111111111111111111111111111111111111111111111111110 },
b11 )
b11 j2
0k
b1 I
b1 s,
b1 H
b1 t,
b100 L
b100 r,
b1 v,
b1 w,
b100 u,
b11 7
b11 S
b11 [2
b1 E
b1 T
b1 ''
b1 7'
b1 k,
b1 p,
b1 x,
0>
1;
16
1,
b0 2
b0 Z2
b0 c2
b0 9
b0 P
b0 R2
b0 X2
05
b1 1
b1 Q2
b1 h2
b1 f2
b111 e2
b100000000110 g2
b111 i2
b0 V2
b0 U2
b10011 W2
b100101 3
b100101 T2
04
b100111000001110010011 0
b100111000001110010011 a2
b100111000001110010011 d2
b100100 (
b100100 N2
b100100 `2
b100100 :
1!
#150
b11 #
b111 $
1"
b100000 r2
b100111000001110010011 '
b1110 &
0!
#155
b1 K
b1 /'
1)'
1*'
1+'
09'
0z,
0f,
0I2
1g,
0j,
1J2
0M2
0e,
0H2
0^,
0A2
1_,
0b,
1B2
0E2
0],
0@2
0V,
092
1W,
0Z,
1:2
0=2
0U,
082
0N,
012
1O,
0R,
122
052
0M,
002
0F,
0)2
1G,
0J,
1*2
0-2
0E,
0(2
0>,
0!2
1?,
0B,
1"2
0%2
0=,
0~1
06,
0w1
17,
0:,
1x1
0{1
05,
0v1
0.,
0o1
1/,
02,
1p1
0s1
0-,
0n1
0&,
0g1
1',
0*,
1h1
0k1
0%,
0f1
0|+
0_1
1}+
0",
1`1
0c1
0{+
0^1
0t+
0W1
1u+
0x+
1X1
0[1
0s+
0V1
0l+
0O1
1m+
0p+
1P1
0S1
0k+
0N1
0d+
0G1
1e+
0h+
1H1
0K1
0c+
0F1
0\+
0?1
1]+
0`+
1@1
0C1
0[+
0>1
0T+
071
1U+
0X+
181
0;1
0S+
061
0L+
0/1
1M+
0P+
101
031
0K+
0.1
0D+
0'1
1E+
0H+
1(1
0+1
0C+
0&1
0<+
0}0
1=+
0@+
1~0
0#1
0;+
0|0
04+
0u0
15+
08+
1v0
0y0
03+
0t0
0,+
0m0
1-+
00+
1n0
0q0
0++
0l0
0$+
0e0
1%+
0(+
1f0
0i0
0#+
0d0
0z*
0]0
1{*
0~*
1^0
0a0
0y*
0\0
0r*
0U0
1s*
0v*
1V0
0Y0
0q*
0T0
0j*
0M0
1k*
0n*
1N0
0Q0
0i*
0L0
0b*
0E0
1c*
0f*
1F0
0I0
0a*
0D0
0Z*
0=0
1[*
0^*
1>0
0A0
0Y*
0<0
0R*
050
1S*
0V*
160
090
0Q*
040
0J*
0-0
1K*
0N*
1.0
010
0I*
0,0
0B*
0%0
1C*
0F*
1&0
0)0
0A*
0$0
0:*
0{/
1;*
0>*
1|/
0!0
09*
0z/
02*
0s/
13*
06*
1t/
0w/
01*
0r/
0**
0k/
1+*
0.*
1l/
0o/
0)*
0j/
0"*
0c/
1#*
0&*
1d/
0g/
0!*
0b/
0x)
0[/
1y)
0|)
1\/
0_/
0w)
0Z/
0p)
0S/
1q)
0t)
1T/
0W/
0o)
0R/
0h)
0K/
1i)
0l)
1L/
0O/
0g)
0J/
0`)
0C/
1a)
0d)
1D/
0G/
0_)
0B/
0X)
0;/
1Y)
0\)
1</
0?/
0W)
0:/
0P)
03/
1Q)
0T)
14/
07/
0O)
02/
0H)
0+/
1I)
0L)
1,/
0//
0G)
0*/
0@)
0#/
1A)
0D)
1$/
0'/
0?)
0"/
08)
0y.
19)
0<)
1z.
0}.
07)
0x.
00)
0q.
11)
04)
1r.
0u.
0/)
0p.
0()
0i.
1))
0,)
1j.
0m.
0')
0h.
0~(
0a.
1!)
0$)
1b.
0e.
0}(
0`.
0v(
0Y.
1w(
0z(
1Z.
0].
0u(
0X.
0n(
0Q.
1o(
0r(
1R.
0U.
0m(
0P.
0f(
0I.
1g(
0j(
1J.
0M.
0e(
0H.
0^(
0A.
1_(
0b(
1B.
0E.
0](
0@.
0V(
09.
1W(
0Z(
1:.
0=.
0U(
08.
0N(
01.
1O(
0R(
12.
05.
0M(
00.
0F(
0).
1G(
0J(
1*.
0-.
0E(
0(.
0>(
0!.
1?(
0B(
1".
0%.
0=(
0~-
06(
0w-
17(
0:(
1x-
0{-
05(
0v-
0.(
0o-
1/(
02(
1p-
0s-
0-(
0n-
0&(
0g-
1'(
0*(
1h-
0k-
0%(
0f-
0|'
0_-
1}'
0"(
1`-
0c-
0{'
0^-
0t'
0W-
1u'
0x'
1X-
0[-
0s'
0V-
0l'
0O-
1m'
0p'
1P-
0S-
0k'
0N-
0d'
0G-
1e'
0h'
1H-
0K-
0c'
0F-
1v
0\'
0?-
1t
1]'
0`'
1@-
0C-
1m
0['
0>-
1q
0T'
07-
1l
1U'
0X'
18-
0;-
10-
1M'
b0 J
b0 .'
03'
1e
0V'
09-
1.-
1K'
b100 1'
0f
1i
0n
0R'
05-
b111 "-
1'-
b1100000 )
b1100000 j2
b111 ?'
1D'
1d
1o
b1111111111111111111111111111111111111111111111111111111111111010 :'
b1111111111111111111111111111111111111111111111111111111111111010 <'
b111 N
b111 m,
b1111111111111111111111111111111111111111111111111111111111111010 {,
b1111111111111111111111111111111111111111111111111111111111111010 },
b1111111111111111111111111111111111111111111111111111111111111110 G
b1111111111111111111111111111111111111111111111111111111111111110 y,
b1111111111111111111111111111111111111111111111111111111111111110 !-
0(-
1+-
b1100000 7
b1100000 S
b1100000 [2
b1111111111111111111111111111111111111111111111111111111111111110 -'
b1111111111111111111111111111111111111111111111111111111111111110 8'
b1111111111111111111111111111111111111111111111111111111111111110 >'
0E'
1H'
b100 2'
b1000 R
b1000 V
0^
b1110 X
1]
1k
b0 I
b0 s,
b0 H
b0 t,
1>
0;
14
1)-
b110 F
b110 l,
b1 Q
b1 n,
1F'
b1111111111111111111111111111111111111111111111111111111111111001 5'
0_
1`
b101 E
b101 T
b101 ''
b101 7'
b101 k,
b101 p,
b101 x,
b1 9
b1 P
b1 R2
b1 X2
b10 2
b10 Z2
b10 c2
15
06
0,
1$-
1A'
1Z
b1100000 L
b1100000 r,
b0 v,
b0 w,
b1100000 u,
b111111111111111111111111111111111111111111111111111111111111100 1
b111111111111111111111111111111111111111111111111111111111111100 Q2
b111111111111111111111111111111111111111111111111111111111111100 h2
b111111100001 f2
b111111111001 e2
b1111111111000 g2
b11001 i2
b1111111 V2
b1 U2
b1100011 W2
b11 +
b11 M
b11 Y
b11 6'
b11 ;'
b11 @'
b11 o,
b11 q,
b11 |,
b11 #-
b11 P2
b11 m2
b1000000000000000000000000000000000000000000000000000000000100100 3
b1000000000000000000000000000000000000000000000000000000000100100 T2
b11111110000100111001110011100011 0
b11111110000100111001110011100011 a2
b11111110000100111001110011100011 d2
b101000 (
b101000 N2
b101000 `2
b101000 :
1!
#160
b1100000 #
b11001 $
0"
b100000 r2
b11111110000100111001110011100011 '
b1111 &
0!
#165
b0 K
b0 /'
0)'
0*'
0+'
19'
1z,
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
0}'
1"(
0`-
1c-
1{'
1^-
1t'
1W-
0u'
1x'
0X-
1[-
1s'
1V-
1l'
1O-
0m'
1p'
0P-
1S-
1k'
1N-
1d'
1G-
0e'
1h'
0H-
1K-
1c'
1F-
1\'
1?-
0]'
1`'
0@-
1C-
1['
1>-
0v
b11111111111111111111111111111111111111111111111111111111111111111 ?'
1T'
b11111111111111111111111111111111111111111111111111111111111111111 "-
17-
0t
b10 -'
b10 8'
b10 >'
0U'
1X'
b10 G
b10 y,
b10 !-
08-
1;-
b110 X
0m
b0 1'
1V'
19-
b100 R
b100 V
1n
0q
1R'
15-
0o
b1111111111111111111111111111111111111111111111111111111111111101 5'
b0 2'
b1111111111111111111111111111111111111111111111111111111111111110 :'
b1111111111111111111111111111111111111111111111111111111111111110 <'
b11 N
b11 m,
b10 F
b10 l,
b1111111111111111111111111111111111111111111111111111111111111110 {,
b1111111111111111111111111111111111111111111111111111111111111110 },
b100 )
b100 j2
0k
b1 I
b1 s,
b1 H
b1 t,
b110 L
b110 r,
b1 v,
b1 w,
b110 u,
b100 7
b100 S
b100 [2
b1 E
b1 T
b1 ''
b1 7'
b1 k,
b1 p,
b1 x,
0>
1;
16
1,
b0 2
b0 Z2
b0 c2
b0 9
b0 P
b0 R2
b0 X2
05
b1 1
b1 Q2
b1 h2
b1 f2
b111 e2
b100000000110 g2
b111 i2
b0 V2
b0 U2
b10011 W2
b1000000000000000000000000000000000000000000000000000000000100101 3
b1000000000000000000000000000000000000000000000000000000000100101 T2
04
b100111000001110010011 0
b100111000001110010011 a2
b100111000001110010011 d2
b1000000000000000000000000000000000000000000000000000000000100100 (
b1000000000000000000000000000000000000000000000000000000000100100 N2
b1000000000000000000000000000000000000000000000000000000000100100 `2
b1000000000000000000000000000000000000000000000000000000000100100 :
1!
#170
b100 #
b111 $
1"
b100000 r2
b100111000001110010011 '
b10000 &
0!
#175
b1 K
b1 /'
1)'
1*'
0z,
1+'
09'
0I2
0f,
1J2
0M2
1g,
0j,
0H2
0e,
0A2
0^,
1B2
0E2
1_,
0b,
0@2
0],
092
0V,
1:2
0=2
1W,
0Z,
082
0U,
012
0N,
122
052
1O,
0R,
002
0M,
0)2
0F,
1*2
0-2
1G,
0J,
0(2
0E,
0!2
0>,
1"2
0%2
1?,
0B,
0~1
0=,
0w1
06,
1x1
0{1
17,
0:,
0v1
05,
0o1
0.,
1p1
0s1
1/,
02,
0n1
0-,
0g1
0&,
1h1
0k1
1',
0*,
0f1
0%,
0_1
0|+
1`1
0c1
1}+
0",
0^1
0{+
0W1
0t+
1X1
0[1
1u+
0x+
0V1
0s+
0O1
0l+
1P1
0S1
1m+
0p+
0N1
0k+
0G1
0d+
1H1
0K1
1e+
0h+
0F1
0c+
0?1
0\+
1@1
0C1
1]+
0`+
0>1
0[+
071
0T+
181
0;1
1U+
0X+
061
0S+
0/1
0L+
101
031
1M+
0P+
0.1
0K+
0'1
0D+
1(1
0+1
1E+
0H+
0&1
0C+
0}0
0<+
1~0
0#1
1=+
0@+
0|0
0;+
0u0
04+
1v0
0y0
15+
08+
0t0
03+
0m0
0,+
1n0
0q0
1-+
00+
0l0
0++
0e0
0$+
1f0
0i0
1%+
0(+
0d0
0#+
0]0
0z*
1^0
0a0
1{*
0~*
0\0
0y*
0U0
0r*
1V0
0Y0
1s*
0v*
0T0
0q*
0M0
0j*
1N0
0Q0
1k*
0n*
0L0
0i*
0E0
0b*
1F0
0I0
1c*
0f*
0D0
0a*
0=0
0Z*
1>0
0A0
1[*
0^*
0<0
0Y*
050
0R*
160
090
1S*
0V*
040
0Q*
0-0
0J*
1.0
010
1K*
0N*
0,0
0I*
0%0
0B*
1&0
0)0
1C*
0F*
0$0
0A*
0{/
0:*
1|/
0!0
1;*
0>*
0z/
09*
0s/
02*
1t/
0w/
13*
06*
0r/
01*
0k/
0**
1l/
0o/
1+*
0.*
0j/
0)*
0c/
0"*
1d/
0g/
1#*
0&*
0b/
0!*
0[/
0x)
1\/
0_/
1y)
0|)
0Z/
0w)
0S/
0p)
1T/
0W/
1q)
0t)
0R/
0o)
0K/
0h)
1L/
0O/
1i)
0l)
0J/
0g)
0C/
0`)
1D/
0G/
1a)
0d)
0B/
0_)
0;/
0X)
1</
0?/
1Y)
0\)
0:/
0W)
03/
0P)
14/
07/
1Q)
0T)
02/
0O)
0+/
0H)
1,/
0//
1I)
0L)
0*/
0G)
0#/
0@)
1$/
0'/
1A)
0D)
0"/
0?)
0y.
08)
1z.
0}.
19)
0<)
0x.
07)
0q.
00)
1r.
0u.
11)
04)
0p.
0/)
0i.
0()
1j.
0m.
1))
0,)
0h.
0')
0a.
0~(
1b.
0e.
1!)
0$)
0`.
0}(
0Y.
0v(
1Z.
0].
1w(
0z(
0X.
0u(
0Q.
0n(
1R.
0U.
1o(
0r(
0P.
0m(
0I.
0f(
1J.
0M.
1g(
0j(
0H.
0e(
0A.
0^(
1B.
0E.
1_(
0b(
0@.
0](
09.
0V(
1:.
0=.
1W(
0Z(
08.
0U(
01.
0N(
12.
05.
1O(
0R(
00.
0M(
0).
0F(
1*.
0-.
1G(
0J(
0(.
0E(
0!.
0>(
1".
0%.
1?(
0B(
0~-
0=(
0w-
06(
1x-
0{-
17(
0:(
0v-
05(
0o-
0.(
1p-
0s-
1/(
02(
0n-
0-(
0g-
0&(
1h-
0k-
1'(
0*(
0f-
0%(
0_-
0|'
1`-
0c-
1}'
0"(
0^-
0{'
0W-
0t'
1X-
0[-
1u'
0x'
0V-
0s'
0O-
0l'
1P-
0S-
1m'
0p'
0N-
0k'
0G-
0d'
1H-
0K-
1e'
0h'
0F-
0c'
0?-
0\'
1@-
0C-
1]'
0`'
0>-
0['
07-
0T'
b1 J
b1 .'
13'
1v
0.-
0K'
b1 1'
1t
0l
0R'
05-
06-
0'-
b10000000 )
b10000000 j2
0S'
0D'
1m
0e
0d
1p
b1111111111111111111111111111111111111111111111111111111111111010 :'
b1111111111111111111111111111111111111111111111111111111111111010 <'
b1111111111111111111111111111111111111111111111111111111111111010 {,
b1111111111111111111111111111111111111111111111111111111111111010 },
18-
0;-
10-
03-
b1 "-
0/-
b1111111111111111111111111111111111111111111111111111111111111111 G
b1111111111111111111111111111111111111111111111111111111111111111 y,
b1111111111111111111111111111111111111111111111111111111111111111 !-
1(-
0+-
b10000000 7
b10000000 S
b10000000 [2
1U'
0X'
1M'
0P'
b1 ?'
0L'
b1111111111111111111111111111111111111111111111111111111111111111 -'
b1111111111111111111111111111111111111111111111111111111111111111 8'
b1111111111111111111111111111111111111111111111111111111111111111 >'
1E'
0H'
b1 2'
0n
0q
0f
0i
b1001 R
b1001 V
1^
b1000 X
0]
1k
1>
0;
14
19-
0:-
11-
02-
0)-
b101 N
b101 m,
b1 F
b1 l,
b100 Q
b100 n,
1V'
0W'
1N'
0O'
0F'
b0 4'
b1111111111111111111111111111111111111111111111111111111111111110 5'
0o
0g
1_
0`
b101 E
b101 T
b101 ''
b101 7'
b101 k,
b101 p,
b101 x,
b1 9
b1 P
b1 R2
b1 X2
b10 2
b10 Z2
b10 c2
15
06
0,
14-
0,-
0$-
1Q'
0I'
0A'
1j
0b
0Z
b0 I
b0 s,
b0 H
b0 t,
b10000000 L
b10000000 r,
b0 v,
b0 w,
b10000000 u,
b111111111111111111111111111111111111111111111111111111111111100 1
b111111111111111111111111111111111111111111111111111111111111100 Q2
b111111111111111111111111111111111111111111111111111111111111100 h2
b111111100001 f2
b111111111001 e2
b1111111111000 g2
b11001 i2
b1111111 V2
b1 U2
b1100011 W2
b100 +
b100 M
b100 Y
b100 6'
b100 ;'
b100 @'
b100 o,
b100 q,
b100 |,
b100 #-
b100 P2
b100 m2
b100100 3
b100100 T2
b11111110000100111001110011100011 0
b11111110000100111001110011100011 a2
b11111110000100111001110011100011 d2
b1000000000000000000000000000000000000000000000000000000000101000 (
b1000000000000000000000000000000000000000000000000000000000101000 N2
b1000000000000000000000000000000000000000000000000000000000101000 `2
b1000000000000000000000000000000000000000000000000000000000101000 :
1!
#180
b10000000 #
b11001 $
0"
b100000 r2
b11111110000100111001110011100011 '
b10001 &
0!
#185
b0 K
b0 /'
0)'
0*'
0+'
19'
1z,
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
0}'
1"(
0`-
1c-
1{'
1^-
1t'
1W-
0u'
1x'
0X-
1[-
1s'
1V-
1l'
1O-
0m'
1p'
0P-
1S-
1k'
1N-
1d'
1G-
0e'
1h'
0H-
1K-
1c'
1F-
1\'
1?-
0]'
1`'
0@-
1C-
1['
1>-
0v
b11 -'
b11 8'
b11 >'
0U'
b11111111111111111111111111111111111111111111111111111111111111001 ?'
1T'
b11 G
b11 y,
b11 !-
08-
b11111111111111111111111111111111111111111111111111111111111111001 "-
17-
0t
0V'
1W'
09-
1:-
b101 R
b101 V
1n
b0 X
0m
b100 4'
1R'
15-
1o
0p
b1111111111111111111111111111111111111111111111111111111111111010 5'
b1111111111111111111111111111111111111111111111111111111111111110 :'
b1111111111111111111111111111111111111111111111111111111111111110 <'
b0 Q
b0 n,
b101 F
b101 l,
b1111111111111111111111111111111111111111111111111111111111111110 {,
b1111111111111111111111111111111111111111111111111111111111111110 },
b101 )
b101 j2
0k
b10 I
b10 s,
b10 H
b10 t,
b1000 L
b1000 r,
b10 v,
b10 w,
b1000 u,
b101 7
b101 S
b101 [2
b1 E
b1 T
b1 ''
b1 7'
b1 k,
b1 p,
b1 x,
0>
1;
16
1,
b0 2
b0 Z2
b0 c2
b0 9
b0 P
b0 R2
b0 X2
05
b1 1
b1 Q2
b1 h2
b1 f2
b111 e2
b100000000110 g2
b111 i2
b0 V2
b0 U2
b10011 W2
b100101 3
b100101 T2
04
b100111000001110010011 0
b100111000001110010011 a2
b100111000001110010011 d2
b100100 (
b100100 N2
b100100 `2
b100100 :
1!
#190
b101 #
b111 $
1"
b100000 r2
b100111000001110010011 '
b10010 &
0!
#195
b0 K
b0 /'
0)'
0*'
0+'
19'
1z,
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
0}'
1"(
0`-
1c-
1{'
1^-
1t'
1W-
0u'
1x'
0X-
1[-
1s'
1V-
1l'
1O-
0m'
1p'
0P-
1S-
1k'
1N-
1d'
1G-
0e'
1h'
0H-
1K-
1c'
1F-
1\'
1?-
1;-
1X'
0]'
1`'
0@-
1C-
16-
1S'
1['
1>-
1/-
1L'
1v
0U'
1T'
08-
17-
00-
13-
0M'
1P'
b0 J
b0 .'
03'
1t
1V'
0W'
19-
0:-
1.-
1K'
b0 1'
1f
0n
1m
b0 4'
0R'
05-
b11111111111111111111111111111111111111111111111111111111111111111 "-
1'-
b10100000 )
b10100000 j2
b11111111111111111111111111111111111111111111111111111111111111111 ?'
1D'
1d
0o
1p
b1111111111111111111111111111111111111111111111111111111111111010 :'
b1111111111111111111111111111111111111111111111111111111111111010 <'
b1111111111111111111111111111111111111111111111111111111111111010 {,
b1111111111111111111111111111111111111111111111111111111111111010 },
b0 G
b0 y,
b0 !-
0(-
1+-
b10100000 7
b10100000 S
b10100000 [2
b0 -'
b0 8'
b0 >'
0E'
1H'
b0 2'
b1010 R
b1010 V
0^
b1010 X
1]
1k
b0 I
b0 s,
b0 H
b0 t,
1>
0;
1)-
b0 F
b0 l,
b101 Q
b101 n,
1F'
b1111111111111111111111111111111111111111111111111111111111111111 5'
0_
1`
b101 E
b101 T
b101 ''
b101 7'
b101 k,
b101 p,
b101 x,
b1 9
b1 P
b1 R2
b1 X2
b10 2
b10 Z2
b10 c2
15
06
0,
1$-
1A'
1Z
b10100000 L
b10100000 r,
b0 v,
b0 w,
b10100000 u,
b111111111111111111111111111111111111111111111111111111111111100 1
b111111111111111111111111111111111111111111111111111111111111100 Q2
b111111111111111111111111111111111111111111111111111111111111100 h2
b111111100001 f2
b111111111001 e2
b1111111111000 g2
b11001 i2
b1111111 V2
b1 U2
b1100011 W2
1S2
b101 +
b101 M
b101 Y
b101 6'
b101 ;'
b101 @'
b101 o,
b101 q,
b101 |,
b101 #-
b101 P2
b101 m2
b1000000000000000000000000000000000000000000000000000000000100100 3
b1000000000000000000000000000000000000000000000000000000000100100 T2
b11111110000100111001110011100011 0
b11111110000100111001110011100011 a2
b11111110000100111001110011100011 d2
b101000 (
b101000 N2
b101000 `2
b101000 :
1!
#200
b10100000 #
b11001 $
0"
b100000 r2
b11111110000100111001110011100011 '
b10011 &
0!
#205
b0 K
b0 /'
0)'
0*'
1z,
0+'
19'
1I2
1f,
0J2
1M2
0g,
1j,
1H2
1e,
1A2
1^,
0B2
1E2
0_,
1b,
1@2
1],
192
1V,
0:2
1=2
0W,
1Z,
182
1U,
112
1N,
022
152
0O,
1R,
102
1M,
1)2
1F,
0*2
1-2
0G,
1J,
1(2
1E,
1!2
1>,
0"2
1%2
0?,
1B,
1~1
1=,
1w1
16,
0x1
1{1
07,
1:,
1v1
15,
1o1
1.,
0p1
1s1
0/,
12,
1n1
1-,
1g1
1&,
0h1
1k1
0',
1*,
1f1
1%,
1_1
1|+
0`1
1c1
0}+
1",
1^1
1{+
1W1
1t+
0X1
1[1
0u+
1x+
1V1
1s+
1O1
1l+
0P1
1S1
0m+
1p+
1N1
1k+
1G1
1d+
0H1
1K1
0e+
1h+
1F1
1c+
1?1
1\+
0@1
1C1
0]+
1`+
1>1
1[+
171
1T+
081
1;1
0U+
1X+
161
1S+
1/1
1L+
001
131
0M+
1P+
1.1
1K+
1'1
1D+
0(1
1+1
0E+
1H+
1&1
1C+
1}0
1<+
0~0
1#1
0=+
1@+
1|0
1;+
1u0
14+
0v0
1y0
05+
18+
1t0
13+
1m0
1,+
0n0
1q0
0-+
10+
1l0
1++
1e0
1$+
0f0
1i0
0%+
1(+
1d0
1#+
1]0
1z*
0^0
1a0
0{*
1~*
1\0
1y*
1U0
1r*
0V0
1Y0
0s*
1v*
1T0
1q*
1M0
1j*
0N0
1Q0
0k*
1n*
1L0
1i*
1E0
1b*
0F0
1I0
0c*
1f*
1D0
1a*
1=0
1Z*
0>0
1A0
0[*
1^*
1<0
1Y*
150
1R*
060
190
0S*
1V*
140
1Q*
1-0
1J*
0.0
110
0K*
1N*
1,0
1I*
1%0
1B*
0&0
1)0
0C*
1F*
1$0
1A*
1{/
1:*
0|/
1!0
0;*
1>*
1z/
19*
1s/
12*
0t/
1w/
03*
16*
1r/
11*
1k/
1**
0l/
1o/
0+*
1.*
1j/
1)*
1c/
1"*
0d/
1g/
0#*
1&*
1b/
1!*
1[/
1x)
0\/
1_/
0y)
1|)
1Z/
1w)
1S/
1p)
0T/
1W/
0q)
1t)
1R/
1o)
1K/
1h)
0L/
1O/
0i)
1l)
1J/
1g)
1C/
1`)
0D/
1G/
0a)
1d)
1B/
1_)
1;/
1X)
0</
1?/
0Y)
1\)
1:/
1W)
13/
1P)
04/
17/
0Q)
1T)
12/
1O)
1+/
1H)
0,/
1//
0I)
1L)
1*/
1G)
1#/
1@)
0$/
1'/
0A)
1D)
1"/
1?)
1y.
18)
0z.
1}.
09)
1<)
1x.
17)
1q.
10)
0r.
1u.
01)
14)
1p.
1/)
1i.
1()
0j.
1m.
0))
1,)
1h.
1')
1a.
1~(
0b.
1e.
0!)
1$)
1`.
1}(
1Y.
1v(
0Z.
1].
0w(
1z(
1X.
1u(
1Q.
1n(
0R.
1U.
0o(
1r(
1P.
1m(
1I.
1f(
0J.
1M.
0g(
1j(
1H.
1e(
1A.
1^(
0B.
1E.
0_(
1b(
1@.
1](
19.
1V(
0:.
1=.
0W(
1Z(
18.
1U(
11.
1N(
02.
15.
0O(
1R(
10.
1M(
1).
1F(
0*.
1-.
0G(
1J(
1(.
1E(
1!.
1>(
0".
1%.
0?(
1B(
1~-
1=(
1w-
16(
0x-
1{-
07(
1:(
1v-
15(
1o-
1.(
0p-
1s-
0/(
12(
1n-
1-(
1g-
1&(
0h-
1k-
0'(
1*(
1f-
1%(
1_-
1|'
0`-
1c-
0}'
1"(
1^-
1{'
1W-
1t'
0X-
1[-
0u'
1x'
1V-
1s'
1O-
1l'
0P-
1S-
0m'
1p'
1N-
1k'
1G-
1d'
0H-
1K-
0e'
1h'
1F-
16-
1c'
1S'
1?-
1/-
1\'
1L'
0@-
1C-
00-
13-
0]'
1`'
0M'
1P'
1>-
1.-
1['
1K'
0v
b0 R
b0 V
0f
17-
b11111111111111111111111111111111111111111111111111111111111111111 "-
1'-
1T'
b11111111111111111111111111111111111111111111111111111111111111111 ?'
1D'
0t
0d
1B'
1R'
1%-
15-
08-
1;-
b0 G
b0 y,
b0 !-
0(-
1+-
0U'
1X'
b0 -'
b0 8'
b0 >'
0E'
1H'
0m
b0 X
0]
b1111111111111111111111111111111111111111111111111111111111111111 :'
b1111111111111111111111111111111111111111111111111111111111111111 <'
b1111111111111111111111111111111111111111111111111111111111111111 {,
b1111111111111111111111111111111111111111111111111111111111111111 },
b0 )
b0 j2
19-
1)-
b0 Q
b0 n,
b0 N
b0 m,
1V'
1F'
0p
0`
0[
0k
b0 7
b0 S
b0 [2
04-
0$-
0Q'
0A'
0j
0Z
b0 L
b0 r,
b0 u,
b0 E
b0 T
b0 ''
b0 7'
b0 k,
b0 p,
b0 x,
0>
1;
b0 *
b0 O2
b0 \2
b0 n2
1S2
b0 +
b0 M
b0 Y
b0 6'
b0 ;'
b0 @'
b0 o,
b0 q,
b0 |,
b0 #-
b0 P2
b0 m2
16
1,
b0 2
b0 Z2
b0 c2
b0 9
b0 P
b0 R2
b0 X2
05
b0 1
b0 Q2
b0 h2
b0 f2
b0 e2
b0 g2
b0 i2
b0 l2
b0 k2
b0 V2
b0 U2
b10011 W2
b101100 3
b101100 T2
b10011 0
b10011 a2
b10011 d2
b101100 (
b101100 N2
b101100 `2
b101100 :
1!
#210
b0 #
b0 $
1"
b100000 r2
b10011 '
b10100 &
0!
#215
b110000 3
b110000 T2
b110000 (
b110000 N2
b110000 `2
b110000 :
1!
#220
b100000 r2
b10101 &
0!
#225
b110100 3
b110100 T2
b110100 (
b110100 N2
b110100 `2
b110100 :
b1011 q2
b100000 p2
1!
