$date
	Tue Mar 04 20:23:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module main_tb $end
$var reg 1 ! clk $end
$var reg 1 " prev_reg_write $end
$var reg 1 # rst $end
$var integer 32 $ cycle_count [31:0] $end
$scope function instruction $end
$var reg 32 % inst [31:0] $end
$upscope $end
$scope module dut $end
$var wire 1 ! clk $end
$var wire 64 & if_pc [63:0] $end
$var wire 1 # rst $end
$var wire 64 ' wb_data [63:0] $end
$var wire 1 ( stall_if $end
$var wire 1 ) stall_id $end
$var wire 64 * next_pc [63:0] $end
$var wire 64 + mem_read_data [63:0] $end
$var wire 32 , if_instruction [31:0] $end
$var wire 64 - id_rs2_data [63:0] $end
$var wire 64 . id_rs1_data [63:0] $end
$var wire 1 / id_reg_write $end
$var wire 64 0 id_pc [63:0] $end
$var wire 1 1 id_mem_write $end
$var wire 1 2 id_mem_read $end
$var wire 32 3 id_instruction [31:0] $end
$var wire 64 4 id_immediate [63:0] $end
$var wire 3 5 id_imm_type [2:0] $end
$var wire 1 6 id_branch $end
$var wire 1 7 id_alu_src_b_sel $end
$var wire 7 8 id_alu_funct7 [6:0] $end
$var wire 3 9 id_alu_funct3 [2:0] $end
$var wire 2 : forward_b [1:0] $end
$var wire 2 ; forward_a [1:0] $end
$var wire 1 < flush_ex $end
$var wire 64 = ex_rs2_data_fwd [63:0] $end
$var wire 64 > ex_rs1_data_fwd [63:0] $end
$var wire 64 ? ex_alu_result [63:0] $end
$var wire 64 @ branch_target [63:0] $end
$var wire 1 A branch_taken $end
$var reg 64 B pc_reg [63:0] $end
$scope module alu_unit $end
$var wire 1 C is_add $end
$var wire 1 D is_and $end
$var wire 1 E is_or $end
$var wire 1 F is_sll $end
$var wire 1 G is_slt $end
$var wire 1 H is_sltu $end
$var wire 1 I is_sra $end
$var wire 1 J is_srl $end
$var wire 1 K is_sub $end
$var wire 1 L is_xor $end
$var wire 64 M rs1 [63:0] $end
$var wire 64 N xor_final [63:0] $end
$var wire 64 O sub_final [63:0] $end
$var wire 64 P srl_final [63:0] $end
$var wire 64 Q sra_final [63:0] $end
$var wire 64 R sltu_final [63:0] $end
$var wire 64 S slt_final [63:0] $end
$var wire 64 T sll_final [63:0] $end
$var wire 64 U rs2 [63:0] $end
$var wire 64 V or_final [63:0] $end
$var wire 7 W funct7 [6:0] $end
$var wire 3 X funct3 [2:0] $end
$var wire 64 Y and_final [63:0] $end
$var wire 64 Z add_final [63:0] $end
$var reg 64 [ rd [63:0] $end
$scope module add $end
$var wire 64 \ a [63:0] $end
$var wire 1 ] cin $end
$var wire 64 ^ sum [63:0] $end
$var wire 1 _ cout $end
$var wire 65 ` carry [64:0] $end
$var wire 64 a b [63:0] $end
$scope begin adders[0] $end
$scope module fa $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d cin $end
$var wire 1 e cout $end
$var wire 1 f sum $end
$var wire 1 g temp1 $end
$var wire 1 h temp2 $end
$var wire 1 i temp3 $end
$upscope $end
$upscope $end
$scope begin adders[1] $end
$scope module fa $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l cin $end
$var wire 1 m cout $end
$var wire 1 n sum $end
$var wire 1 o temp1 $end
$var wire 1 p temp2 $end
$var wire 1 q temp3 $end
$upscope $end
$upscope $end
$scope begin adders[2] $end
$scope module fa $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t cin $end
$var wire 1 u cout $end
$var wire 1 v sum $end
$var wire 1 w temp1 $end
$var wire 1 x temp2 $end
$var wire 1 y temp3 $end
$upscope $end
$upscope $end
$scope begin adders[3] $end
$scope module fa $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } cout $end
$var wire 1 ~ sum $end
$var wire 1 !" temp1 $end
$var wire 1 "" temp2 $end
$var wire 1 #" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[4] $end
$scope module fa $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 &" cin $end
$var wire 1 '" cout $end
$var wire 1 (" sum $end
$var wire 1 )" temp1 $end
$var wire 1 *" temp2 $end
$var wire 1 +" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[5] $end
$scope module fa $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." cin $end
$var wire 1 /" cout $end
$var wire 1 0" sum $end
$var wire 1 1" temp1 $end
$var wire 1 2" temp2 $end
$var wire 1 3" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[6] $end
$scope module fa $end
$var wire 1 4" a $end
$var wire 1 5" b $end
$var wire 1 6" cin $end
$var wire 1 7" cout $end
$var wire 1 8" sum $end
$var wire 1 9" temp1 $end
$var wire 1 :" temp2 $end
$var wire 1 ;" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[7] $end
$scope module fa $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 >" cin $end
$var wire 1 ?" cout $end
$var wire 1 @" sum $end
$var wire 1 A" temp1 $end
$var wire 1 B" temp2 $end
$var wire 1 C" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[8] $end
$scope module fa $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" cin $end
$var wire 1 G" cout $end
$var wire 1 H" sum $end
$var wire 1 I" temp1 $end
$var wire 1 J" temp2 $end
$var wire 1 K" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[9] $end
$scope module fa $end
$var wire 1 L" a $end
$var wire 1 M" b $end
$var wire 1 N" cin $end
$var wire 1 O" cout $end
$var wire 1 P" sum $end
$var wire 1 Q" temp1 $end
$var wire 1 R" temp2 $end
$var wire 1 S" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[10] $end
$scope module fa $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" cin $end
$var wire 1 W" cout $end
$var wire 1 X" sum $end
$var wire 1 Y" temp1 $end
$var wire 1 Z" temp2 $end
$var wire 1 [" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[11] $end
$scope module fa $end
$var wire 1 \" a $end
$var wire 1 ]" b $end
$var wire 1 ^" cin $end
$var wire 1 _" cout $end
$var wire 1 `" sum $end
$var wire 1 a" temp1 $end
$var wire 1 b" temp2 $end
$var wire 1 c" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[12] $end
$scope module fa $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 f" cin $end
$var wire 1 g" cout $end
$var wire 1 h" sum $end
$var wire 1 i" temp1 $end
$var wire 1 j" temp2 $end
$var wire 1 k" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[13] $end
$scope module fa $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 n" cin $end
$var wire 1 o" cout $end
$var wire 1 p" sum $end
$var wire 1 q" temp1 $end
$var wire 1 r" temp2 $end
$var wire 1 s" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[14] $end
$scope module fa $end
$var wire 1 t" a $end
$var wire 1 u" b $end
$var wire 1 v" cin $end
$var wire 1 w" cout $end
$var wire 1 x" sum $end
$var wire 1 y" temp1 $end
$var wire 1 z" temp2 $end
$var wire 1 {" temp3 $end
$upscope $end
$upscope $end
$scope begin adders[15] $end
$scope module fa $end
$var wire 1 |" a $end
$var wire 1 }" b $end
$var wire 1 ~" cin $end
$var wire 1 !# cout $end
$var wire 1 "# sum $end
$var wire 1 ## temp1 $end
$var wire 1 $# temp2 $end
$var wire 1 %# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[16] $end
$scope module fa $end
$var wire 1 &# a $end
$var wire 1 '# b $end
$var wire 1 (# cin $end
$var wire 1 )# cout $end
$var wire 1 *# sum $end
$var wire 1 +# temp1 $end
$var wire 1 ,# temp2 $end
$var wire 1 -# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[17] $end
$scope module fa $end
$var wire 1 .# a $end
$var wire 1 /# b $end
$var wire 1 0# cin $end
$var wire 1 1# cout $end
$var wire 1 2# sum $end
$var wire 1 3# temp1 $end
$var wire 1 4# temp2 $end
$var wire 1 5# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[18] $end
$scope module fa $end
$var wire 1 6# a $end
$var wire 1 7# b $end
$var wire 1 8# cin $end
$var wire 1 9# cout $end
$var wire 1 :# sum $end
$var wire 1 ;# temp1 $end
$var wire 1 <# temp2 $end
$var wire 1 =# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[19] $end
$scope module fa $end
$var wire 1 ># a $end
$var wire 1 ?# b $end
$var wire 1 @# cin $end
$var wire 1 A# cout $end
$var wire 1 B# sum $end
$var wire 1 C# temp1 $end
$var wire 1 D# temp2 $end
$var wire 1 E# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[20] $end
$scope module fa $end
$var wire 1 F# a $end
$var wire 1 G# b $end
$var wire 1 H# cin $end
$var wire 1 I# cout $end
$var wire 1 J# sum $end
$var wire 1 K# temp1 $end
$var wire 1 L# temp2 $end
$var wire 1 M# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[21] $end
$scope module fa $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 P# cin $end
$var wire 1 Q# cout $end
$var wire 1 R# sum $end
$var wire 1 S# temp1 $end
$var wire 1 T# temp2 $end
$var wire 1 U# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[22] $end
$scope module fa $end
$var wire 1 V# a $end
$var wire 1 W# b $end
$var wire 1 X# cin $end
$var wire 1 Y# cout $end
$var wire 1 Z# sum $end
$var wire 1 [# temp1 $end
$var wire 1 \# temp2 $end
$var wire 1 ]# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[23] $end
$scope module fa $end
$var wire 1 ^# a $end
$var wire 1 _# b $end
$var wire 1 `# cin $end
$var wire 1 a# cout $end
$var wire 1 b# sum $end
$var wire 1 c# temp1 $end
$var wire 1 d# temp2 $end
$var wire 1 e# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[24] $end
$scope module fa $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 h# cin $end
$var wire 1 i# cout $end
$var wire 1 j# sum $end
$var wire 1 k# temp1 $end
$var wire 1 l# temp2 $end
$var wire 1 m# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[25] $end
$scope module fa $end
$var wire 1 n# a $end
$var wire 1 o# b $end
$var wire 1 p# cin $end
$var wire 1 q# cout $end
$var wire 1 r# sum $end
$var wire 1 s# temp1 $end
$var wire 1 t# temp2 $end
$var wire 1 u# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[26] $end
$scope module fa $end
$var wire 1 v# a $end
$var wire 1 w# b $end
$var wire 1 x# cin $end
$var wire 1 y# cout $end
$var wire 1 z# sum $end
$var wire 1 {# temp1 $end
$var wire 1 |# temp2 $end
$var wire 1 }# temp3 $end
$upscope $end
$upscope $end
$scope begin adders[27] $end
$scope module fa $end
$var wire 1 ~# a $end
$var wire 1 !$ b $end
$var wire 1 "$ cin $end
$var wire 1 #$ cout $end
$var wire 1 $$ sum $end
$var wire 1 %$ temp1 $end
$var wire 1 &$ temp2 $end
$var wire 1 '$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[28] $end
$scope module fa $end
$var wire 1 ($ a $end
$var wire 1 )$ b $end
$var wire 1 *$ cin $end
$var wire 1 +$ cout $end
$var wire 1 ,$ sum $end
$var wire 1 -$ temp1 $end
$var wire 1 .$ temp2 $end
$var wire 1 /$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[29] $end
$scope module fa $end
$var wire 1 0$ a $end
$var wire 1 1$ b $end
$var wire 1 2$ cin $end
$var wire 1 3$ cout $end
$var wire 1 4$ sum $end
$var wire 1 5$ temp1 $end
$var wire 1 6$ temp2 $end
$var wire 1 7$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[30] $end
$scope module fa $end
$var wire 1 8$ a $end
$var wire 1 9$ b $end
$var wire 1 :$ cin $end
$var wire 1 ;$ cout $end
$var wire 1 <$ sum $end
$var wire 1 =$ temp1 $end
$var wire 1 >$ temp2 $end
$var wire 1 ?$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[31] $end
$scope module fa $end
$var wire 1 @$ a $end
$var wire 1 A$ b $end
$var wire 1 B$ cin $end
$var wire 1 C$ cout $end
$var wire 1 D$ sum $end
$var wire 1 E$ temp1 $end
$var wire 1 F$ temp2 $end
$var wire 1 G$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[32] $end
$scope module fa $end
$var wire 1 H$ a $end
$var wire 1 I$ b $end
$var wire 1 J$ cin $end
$var wire 1 K$ cout $end
$var wire 1 L$ sum $end
$var wire 1 M$ temp1 $end
$var wire 1 N$ temp2 $end
$var wire 1 O$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[33] $end
$scope module fa $end
$var wire 1 P$ a $end
$var wire 1 Q$ b $end
$var wire 1 R$ cin $end
$var wire 1 S$ cout $end
$var wire 1 T$ sum $end
$var wire 1 U$ temp1 $end
$var wire 1 V$ temp2 $end
$var wire 1 W$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[34] $end
$scope module fa $end
$var wire 1 X$ a $end
$var wire 1 Y$ b $end
$var wire 1 Z$ cin $end
$var wire 1 [$ cout $end
$var wire 1 \$ sum $end
$var wire 1 ]$ temp1 $end
$var wire 1 ^$ temp2 $end
$var wire 1 _$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[35] $end
$scope module fa $end
$var wire 1 `$ a $end
$var wire 1 a$ b $end
$var wire 1 b$ cin $end
$var wire 1 c$ cout $end
$var wire 1 d$ sum $end
$var wire 1 e$ temp1 $end
$var wire 1 f$ temp2 $end
$var wire 1 g$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[36] $end
$scope module fa $end
$var wire 1 h$ a $end
$var wire 1 i$ b $end
$var wire 1 j$ cin $end
$var wire 1 k$ cout $end
$var wire 1 l$ sum $end
$var wire 1 m$ temp1 $end
$var wire 1 n$ temp2 $end
$var wire 1 o$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[37] $end
$scope module fa $end
$var wire 1 p$ a $end
$var wire 1 q$ b $end
$var wire 1 r$ cin $end
$var wire 1 s$ cout $end
$var wire 1 t$ sum $end
$var wire 1 u$ temp1 $end
$var wire 1 v$ temp2 $end
$var wire 1 w$ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[38] $end
$scope module fa $end
$var wire 1 x$ a $end
$var wire 1 y$ b $end
$var wire 1 z$ cin $end
$var wire 1 {$ cout $end
$var wire 1 |$ sum $end
$var wire 1 }$ temp1 $end
$var wire 1 ~$ temp2 $end
$var wire 1 !% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[39] $end
$scope module fa $end
$var wire 1 "% a $end
$var wire 1 #% b $end
$var wire 1 $% cin $end
$var wire 1 %% cout $end
$var wire 1 &% sum $end
$var wire 1 '% temp1 $end
$var wire 1 (% temp2 $end
$var wire 1 )% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[40] $end
$scope module fa $end
$var wire 1 *% a $end
$var wire 1 +% b $end
$var wire 1 ,% cin $end
$var wire 1 -% cout $end
$var wire 1 .% sum $end
$var wire 1 /% temp1 $end
$var wire 1 0% temp2 $end
$var wire 1 1% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[41] $end
$scope module fa $end
$var wire 1 2% a $end
$var wire 1 3% b $end
$var wire 1 4% cin $end
$var wire 1 5% cout $end
$var wire 1 6% sum $end
$var wire 1 7% temp1 $end
$var wire 1 8% temp2 $end
$var wire 1 9% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[42] $end
$scope module fa $end
$var wire 1 :% a $end
$var wire 1 ;% b $end
$var wire 1 <% cin $end
$var wire 1 =% cout $end
$var wire 1 >% sum $end
$var wire 1 ?% temp1 $end
$var wire 1 @% temp2 $end
$var wire 1 A% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[43] $end
$scope module fa $end
$var wire 1 B% a $end
$var wire 1 C% b $end
$var wire 1 D% cin $end
$var wire 1 E% cout $end
$var wire 1 F% sum $end
$var wire 1 G% temp1 $end
$var wire 1 H% temp2 $end
$var wire 1 I% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[44] $end
$scope module fa $end
$var wire 1 J% a $end
$var wire 1 K% b $end
$var wire 1 L% cin $end
$var wire 1 M% cout $end
$var wire 1 N% sum $end
$var wire 1 O% temp1 $end
$var wire 1 P% temp2 $end
$var wire 1 Q% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[45] $end
$scope module fa $end
$var wire 1 R% a $end
$var wire 1 S% b $end
$var wire 1 T% cin $end
$var wire 1 U% cout $end
$var wire 1 V% sum $end
$var wire 1 W% temp1 $end
$var wire 1 X% temp2 $end
$var wire 1 Y% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[46] $end
$scope module fa $end
$var wire 1 Z% a $end
$var wire 1 [% b $end
$var wire 1 \% cin $end
$var wire 1 ]% cout $end
$var wire 1 ^% sum $end
$var wire 1 _% temp1 $end
$var wire 1 `% temp2 $end
$var wire 1 a% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[47] $end
$scope module fa $end
$var wire 1 b% a $end
$var wire 1 c% b $end
$var wire 1 d% cin $end
$var wire 1 e% cout $end
$var wire 1 f% sum $end
$var wire 1 g% temp1 $end
$var wire 1 h% temp2 $end
$var wire 1 i% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[48] $end
$scope module fa $end
$var wire 1 j% a $end
$var wire 1 k% b $end
$var wire 1 l% cin $end
$var wire 1 m% cout $end
$var wire 1 n% sum $end
$var wire 1 o% temp1 $end
$var wire 1 p% temp2 $end
$var wire 1 q% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[49] $end
$scope module fa $end
$var wire 1 r% a $end
$var wire 1 s% b $end
$var wire 1 t% cin $end
$var wire 1 u% cout $end
$var wire 1 v% sum $end
$var wire 1 w% temp1 $end
$var wire 1 x% temp2 $end
$var wire 1 y% temp3 $end
$upscope $end
$upscope $end
$scope begin adders[50] $end
$scope module fa $end
$var wire 1 z% a $end
$var wire 1 {% b $end
$var wire 1 |% cin $end
$var wire 1 }% cout $end
$var wire 1 ~% sum $end
$var wire 1 !& temp1 $end
$var wire 1 "& temp2 $end
$var wire 1 #& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[51] $end
$scope module fa $end
$var wire 1 $& a $end
$var wire 1 %& b $end
$var wire 1 && cin $end
$var wire 1 '& cout $end
$var wire 1 (& sum $end
$var wire 1 )& temp1 $end
$var wire 1 *& temp2 $end
$var wire 1 +& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[52] $end
$scope module fa $end
$var wire 1 ,& a $end
$var wire 1 -& b $end
$var wire 1 .& cin $end
$var wire 1 /& cout $end
$var wire 1 0& sum $end
$var wire 1 1& temp1 $end
$var wire 1 2& temp2 $end
$var wire 1 3& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[53] $end
$scope module fa $end
$var wire 1 4& a $end
$var wire 1 5& b $end
$var wire 1 6& cin $end
$var wire 1 7& cout $end
$var wire 1 8& sum $end
$var wire 1 9& temp1 $end
$var wire 1 :& temp2 $end
$var wire 1 ;& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[54] $end
$scope module fa $end
$var wire 1 <& a $end
$var wire 1 =& b $end
$var wire 1 >& cin $end
$var wire 1 ?& cout $end
$var wire 1 @& sum $end
$var wire 1 A& temp1 $end
$var wire 1 B& temp2 $end
$var wire 1 C& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[55] $end
$scope module fa $end
$var wire 1 D& a $end
$var wire 1 E& b $end
$var wire 1 F& cin $end
$var wire 1 G& cout $end
$var wire 1 H& sum $end
$var wire 1 I& temp1 $end
$var wire 1 J& temp2 $end
$var wire 1 K& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[56] $end
$scope module fa $end
$var wire 1 L& a $end
$var wire 1 M& b $end
$var wire 1 N& cin $end
$var wire 1 O& cout $end
$var wire 1 P& sum $end
$var wire 1 Q& temp1 $end
$var wire 1 R& temp2 $end
$var wire 1 S& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[57] $end
$scope module fa $end
$var wire 1 T& a $end
$var wire 1 U& b $end
$var wire 1 V& cin $end
$var wire 1 W& cout $end
$var wire 1 X& sum $end
$var wire 1 Y& temp1 $end
$var wire 1 Z& temp2 $end
$var wire 1 [& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[58] $end
$scope module fa $end
$var wire 1 \& a $end
$var wire 1 ]& b $end
$var wire 1 ^& cin $end
$var wire 1 _& cout $end
$var wire 1 `& sum $end
$var wire 1 a& temp1 $end
$var wire 1 b& temp2 $end
$var wire 1 c& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[59] $end
$scope module fa $end
$var wire 1 d& a $end
$var wire 1 e& b $end
$var wire 1 f& cin $end
$var wire 1 g& cout $end
$var wire 1 h& sum $end
$var wire 1 i& temp1 $end
$var wire 1 j& temp2 $end
$var wire 1 k& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[60] $end
$scope module fa $end
$var wire 1 l& a $end
$var wire 1 m& b $end
$var wire 1 n& cin $end
$var wire 1 o& cout $end
$var wire 1 p& sum $end
$var wire 1 q& temp1 $end
$var wire 1 r& temp2 $end
$var wire 1 s& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[61] $end
$scope module fa $end
$var wire 1 t& a $end
$var wire 1 u& b $end
$var wire 1 v& cin $end
$var wire 1 w& cout $end
$var wire 1 x& sum $end
$var wire 1 y& temp1 $end
$var wire 1 z& temp2 $end
$var wire 1 {& temp3 $end
$upscope $end
$upscope $end
$scope begin adders[62] $end
$scope module fa $end
$var wire 1 |& a $end
$var wire 1 }& b $end
$var wire 1 ~& cin $end
$var wire 1 !' cout $end
$var wire 1 "' sum $end
$var wire 1 #' temp1 $end
$var wire 1 $' temp2 $end
$var wire 1 %' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[63] $end
$scope module fa $end
$var wire 1 &' a $end
$var wire 1 '' b $end
$var wire 1 (' cin $end
$var wire 1 )' cout $end
$var wire 1 *' sum $end
$var wire 1 +' temp1 $end
$var wire 1 ,' temp2 $end
$var wire 1 -' temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module comparison_operations $end
$var wire 64 .' a [63:0] $end
$var wire 1 /' a_neg $end
$var wire 1 0' diff_sign $end
$var wire 1 1' is_less_s $end
$var wire 1 2' same_less $end
$var wire 1 3' sub_neg $end
$var wire 63 4' zeros [62:0] $end
$var wire 64 5' sub [63:0] $end
$var wire 64 6' sltu_final [63:0] $end
$var wire 64 7' slt_final [63:0] $end
$var wire 65 8' prop [64:0] $end
$var wire 64 9' lt_temp [63:0] $end
$var wire 64 :' lt [63:0] $end
$var wire 1 ;' is_less_u $end
$var wire 64 <' gt [63:0] $end
$var wire 64 =' eq [63:0] $end
$var wire 64 >' b [63:0] $end
$scope begin compare_each_bit[0] $end
$upscope $end
$scope begin compare_each_bit[1] $end
$upscope $end
$scope begin compare_each_bit[2] $end
$upscope $end
$scope begin compare_each_bit[3] $end
$upscope $end
$scope begin compare_each_bit[4] $end
$upscope $end
$scope begin compare_each_bit[5] $end
$upscope $end
$scope begin compare_each_bit[6] $end
$upscope $end
$scope begin compare_each_bit[7] $end
$upscope $end
$scope begin compare_each_bit[8] $end
$upscope $end
$scope begin compare_each_bit[9] $end
$upscope $end
$scope begin compare_each_bit[10] $end
$upscope $end
$scope begin compare_each_bit[11] $end
$upscope $end
$scope begin compare_each_bit[12] $end
$upscope $end
$scope begin compare_each_bit[13] $end
$upscope $end
$scope begin compare_each_bit[14] $end
$upscope $end
$scope begin compare_each_bit[15] $end
$upscope $end
$scope begin compare_each_bit[16] $end
$upscope $end
$scope begin compare_each_bit[17] $end
$upscope $end
$scope begin compare_each_bit[18] $end
$upscope $end
$scope begin compare_each_bit[19] $end
$upscope $end
$scope begin compare_each_bit[20] $end
$upscope $end
$scope begin compare_each_bit[21] $end
$upscope $end
$scope begin compare_each_bit[22] $end
$upscope $end
$scope begin compare_each_bit[23] $end
$upscope $end
$scope begin compare_each_bit[24] $end
$upscope $end
$scope begin compare_each_bit[25] $end
$upscope $end
$scope begin compare_each_bit[26] $end
$upscope $end
$scope begin compare_each_bit[27] $end
$upscope $end
$scope begin compare_each_bit[28] $end
$upscope $end
$scope begin compare_each_bit[29] $end
$upscope $end
$scope begin compare_each_bit[30] $end
$upscope $end
$scope begin compare_each_bit[31] $end
$upscope $end
$scope begin compare_each_bit[32] $end
$upscope $end
$scope begin compare_each_bit[33] $end
$upscope $end
$scope begin compare_each_bit[34] $end
$upscope $end
$scope begin compare_each_bit[35] $end
$upscope $end
$scope begin compare_each_bit[36] $end
$upscope $end
$scope begin compare_each_bit[37] $end
$upscope $end
$scope begin compare_each_bit[38] $end
$upscope $end
$scope begin compare_each_bit[39] $end
$upscope $end
$scope begin compare_each_bit[40] $end
$upscope $end
$scope begin compare_each_bit[41] $end
$upscope $end
$scope begin compare_each_bit[42] $end
$upscope $end
$scope begin compare_each_bit[43] $end
$upscope $end
$scope begin compare_each_bit[44] $end
$upscope $end
$scope begin compare_each_bit[45] $end
$upscope $end
$scope begin compare_each_bit[46] $end
$upscope $end
$scope begin compare_each_bit[47] $end
$upscope $end
$scope begin compare_each_bit[48] $end
$upscope $end
$scope begin compare_each_bit[49] $end
$upscope $end
$scope begin compare_each_bit[50] $end
$upscope $end
$scope begin compare_each_bit[51] $end
$upscope $end
$scope begin compare_each_bit[52] $end
$upscope $end
$scope begin compare_each_bit[53] $end
$upscope $end
$scope begin compare_each_bit[54] $end
$upscope $end
$scope begin compare_each_bit[55] $end
$upscope $end
$scope begin compare_each_bit[56] $end
$upscope $end
$scope begin compare_each_bit[57] $end
$upscope $end
$scope begin compare_each_bit[58] $end
$upscope $end
$scope begin compare_each_bit[59] $end
$upscope $end
$scope begin compare_each_bit[60] $end
$upscope $end
$scope begin compare_each_bit[61] $end
$upscope $end
$scope begin compare_each_bit[62] $end
$upscope $end
$scope begin compare_each_bit[63] $end
$upscope $end
$scope begin priority[0] $end
$upscope $end
$scope begin priority[1] $end
$upscope $end
$scope begin priority[2] $end
$upscope $end
$scope begin priority[3] $end
$upscope $end
$scope begin priority[4] $end
$upscope $end
$scope begin priority[5] $end
$upscope $end
$scope begin priority[6] $end
$upscope $end
$scope begin priority[7] $end
$upscope $end
$scope begin priority[8] $end
$upscope $end
$scope begin priority[9] $end
$upscope $end
$scope begin priority[10] $end
$upscope $end
$scope begin priority[11] $end
$upscope $end
$scope begin priority[12] $end
$upscope $end
$scope begin priority[13] $end
$upscope $end
$scope begin priority[14] $end
$upscope $end
$scope begin priority[15] $end
$upscope $end
$scope begin priority[16] $end
$upscope $end
$scope begin priority[17] $end
$upscope $end
$scope begin priority[18] $end
$upscope $end
$scope begin priority[19] $end
$upscope $end
$scope begin priority[20] $end
$upscope $end
$scope begin priority[21] $end
$upscope $end
$scope begin priority[22] $end
$upscope $end
$scope begin priority[23] $end
$upscope $end
$scope begin priority[24] $end
$upscope $end
$scope begin priority[25] $end
$upscope $end
$scope begin priority[26] $end
$upscope $end
$scope begin priority[27] $end
$upscope $end
$scope begin priority[28] $end
$upscope $end
$scope begin priority[29] $end
$upscope $end
$scope begin priority[30] $end
$upscope $end
$scope begin priority[31] $end
$upscope $end
$scope begin priority[32] $end
$upscope $end
$scope begin priority[33] $end
$upscope $end
$scope begin priority[34] $end
$upscope $end
$scope begin priority[35] $end
$upscope $end
$scope begin priority[36] $end
$upscope $end
$scope begin priority[37] $end
$upscope $end
$scope begin priority[38] $end
$upscope $end
$scope begin priority[39] $end
$upscope $end
$scope begin priority[40] $end
$upscope $end
$scope begin priority[41] $end
$upscope $end
$scope begin priority[42] $end
$upscope $end
$scope begin priority[43] $end
$upscope $end
$scope begin priority[44] $end
$upscope $end
$scope begin priority[45] $end
$upscope $end
$scope begin priority[46] $end
$upscope $end
$scope begin priority[47] $end
$upscope $end
$scope begin priority[48] $end
$upscope $end
$scope begin priority[49] $end
$upscope $end
$scope begin priority[50] $end
$upscope $end
$scope begin priority[51] $end
$upscope $end
$scope begin priority[52] $end
$upscope $end
$scope begin priority[53] $end
$upscope $end
$scope begin priority[54] $end
$upscope $end
$scope begin priority[55] $end
$upscope $end
$scope begin priority[56] $end
$upscope $end
$scope begin priority[57] $end
$upscope $end
$scope begin priority[58] $end
$upscope $end
$scope begin priority[59] $end
$upscope $end
$scope begin priority[60] $end
$upscope $end
$scope begin priority[61] $end
$upscope $end
$scope begin priority[62] $end
$upscope $end
$scope begin priority[63] $end
$upscope $end
$scope module compare $end
$var wire 64 ?' a [63:0] $end
$var wire 64 @' diff [63:0] $end
$var wire 1 A' cout $end
$var wire 64 B' b_complement [63:0] $end
$var wire 64 C' b [63:0] $end
$scope begin complement[0] $end
$upscope $end
$scope begin complement[1] $end
$upscope $end
$scope begin complement[2] $end
$upscope $end
$scope begin complement[3] $end
$upscope $end
$scope begin complement[4] $end
$upscope $end
$scope begin complement[5] $end
$upscope $end
$scope begin complement[6] $end
$upscope $end
$scope begin complement[7] $end
$upscope $end
$scope begin complement[8] $end
$upscope $end
$scope begin complement[9] $end
$upscope $end
$scope begin complement[10] $end
$upscope $end
$scope begin complement[11] $end
$upscope $end
$scope begin complement[12] $end
$upscope $end
$scope begin complement[13] $end
$upscope $end
$scope begin complement[14] $end
$upscope $end
$scope begin complement[15] $end
$upscope $end
$scope begin complement[16] $end
$upscope $end
$scope begin complement[17] $end
$upscope $end
$scope begin complement[18] $end
$upscope $end
$scope begin complement[19] $end
$upscope $end
$scope begin complement[20] $end
$upscope $end
$scope begin complement[21] $end
$upscope $end
$scope begin complement[22] $end
$upscope $end
$scope begin complement[23] $end
$upscope $end
$scope begin complement[24] $end
$upscope $end
$scope begin complement[25] $end
$upscope $end
$scope begin complement[26] $end
$upscope $end
$scope begin complement[27] $end
$upscope $end
$scope begin complement[28] $end
$upscope $end
$scope begin complement[29] $end
$upscope $end
$scope begin complement[30] $end
$upscope $end
$scope begin complement[31] $end
$upscope $end
$scope begin complement[32] $end
$upscope $end
$scope begin complement[33] $end
$upscope $end
$scope begin complement[34] $end
$upscope $end
$scope begin complement[35] $end
$upscope $end
$scope begin complement[36] $end
$upscope $end
$scope begin complement[37] $end
$upscope $end
$scope begin complement[38] $end
$upscope $end
$scope begin complement[39] $end
$upscope $end
$scope begin complement[40] $end
$upscope $end
$scope begin complement[41] $end
$upscope $end
$scope begin complement[42] $end
$upscope $end
$scope begin complement[43] $end
$upscope $end
$scope begin complement[44] $end
$upscope $end
$scope begin complement[45] $end
$upscope $end
$scope begin complement[46] $end
$upscope $end
$scope begin complement[47] $end
$upscope $end
$scope begin complement[48] $end
$upscope $end
$scope begin complement[49] $end
$upscope $end
$scope begin complement[50] $end
$upscope $end
$scope begin complement[51] $end
$upscope $end
$scope begin complement[52] $end
$upscope $end
$scope begin complement[53] $end
$upscope $end
$scope begin complement[54] $end
$upscope $end
$scope begin complement[55] $end
$upscope $end
$scope begin complement[56] $end
$upscope $end
$scope begin complement[57] $end
$upscope $end
$scope begin complement[58] $end
$upscope $end
$scope begin complement[59] $end
$upscope $end
$scope begin complement[60] $end
$upscope $end
$scope begin complement[61] $end
$upscope $end
$scope begin complement[62] $end
$upscope $end
$scope begin complement[63] $end
$upscope $end
$scope module final $end
$var wire 64 D' a [63:0] $end
$var wire 64 E' b [63:0] $end
$var wire 1 F' cin $end
$var wire 64 G' sum [63:0] $end
$var wire 1 A' cout $end
$var wire 65 H' carry [64:0] $end
$scope begin adders[0] $end
$scope module fa $end
$var wire 1 I' a $end
$var wire 1 J' b $end
$var wire 1 K' cin $end
$var wire 1 L' cout $end
$var wire 1 M' sum $end
$var wire 1 N' temp1 $end
$var wire 1 O' temp2 $end
$var wire 1 P' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[1] $end
$scope module fa $end
$var wire 1 Q' a $end
$var wire 1 R' b $end
$var wire 1 S' cin $end
$var wire 1 T' cout $end
$var wire 1 U' sum $end
$var wire 1 V' temp1 $end
$var wire 1 W' temp2 $end
$var wire 1 X' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[2] $end
$scope module fa $end
$var wire 1 Y' a $end
$var wire 1 Z' b $end
$var wire 1 [' cin $end
$var wire 1 \' cout $end
$var wire 1 ]' sum $end
$var wire 1 ^' temp1 $end
$var wire 1 _' temp2 $end
$var wire 1 `' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[3] $end
$scope module fa $end
$var wire 1 a' a $end
$var wire 1 b' b $end
$var wire 1 c' cin $end
$var wire 1 d' cout $end
$var wire 1 e' sum $end
$var wire 1 f' temp1 $end
$var wire 1 g' temp2 $end
$var wire 1 h' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[4] $end
$scope module fa $end
$var wire 1 i' a $end
$var wire 1 j' b $end
$var wire 1 k' cin $end
$var wire 1 l' cout $end
$var wire 1 m' sum $end
$var wire 1 n' temp1 $end
$var wire 1 o' temp2 $end
$var wire 1 p' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[5] $end
$scope module fa $end
$var wire 1 q' a $end
$var wire 1 r' b $end
$var wire 1 s' cin $end
$var wire 1 t' cout $end
$var wire 1 u' sum $end
$var wire 1 v' temp1 $end
$var wire 1 w' temp2 $end
$var wire 1 x' temp3 $end
$upscope $end
$upscope $end
$scope begin adders[6] $end
$scope module fa $end
$var wire 1 y' a $end
$var wire 1 z' b $end
$var wire 1 {' cin $end
$var wire 1 |' cout $end
$var wire 1 }' sum $end
$var wire 1 ~' temp1 $end
$var wire 1 !( temp2 $end
$var wire 1 "( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[7] $end
$scope module fa $end
$var wire 1 #( a $end
$var wire 1 $( b $end
$var wire 1 %( cin $end
$var wire 1 &( cout $end
$var wire 1 '( sum $end
$var wire 1 (( temp1 $end
$var wire 1 )( temp2 $end
$var wire 1 *( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[8] $end
$scope module fa $end
$var wire 1 +( a $end
$var wire 1 ,( b $end
$var wire 1 -( cin $end
$var wire 1 .( cout $end
$var wire 1 /( sum $end
$var wire 1 0( temp1 $end
$var wire 1 1( temp2 $end
$var wire 1 2( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[9] $end
$scope module fa $end
$var wire 1 3( a $end
$var wire 1 4( b $end
$var wire 1 5( cin $end
$var wire 1 6( cout $end
$var wire 1 7( sum $end
$var wire 1 8( temp1 $end
$var wire 1 9( temp2 $end
$var wire 1 :( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[10] $end
$scope module fa $end
$var wire 1 ;( a $end
$var wire 1 <( b $end
$var wire 1 =( cin $end
$var wire 1 >( cout $end
$var wire 1 ?( sum $end
$var wire 1 @( temp1 $end
$var wire 1 A( temp2 $end
$var wire 1 B( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[11] $end
$scope module fa $end
$var wire 1 C( a $end
$var wire 1 D( b $end
$var wire 1 E( cin $end
$var wire 1 F( cout $end
$var wire 1 G( sum $end
$var wire 1 H( temp1 $end
$var wire 1 I( temp2 $end
$var wire 1 J( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[12] $end
$scope module fa $end
$var wire 1 K( a $end
$var wire 1 L( b $end
$var wire 1 M( cin $end
$var wire 1 N( cout $end
$var wire 1 O( sum $end
$var wire 1 P( temp1 $end
$var wire 1 Q( temp2 $end
$var wire 1 R( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[13] $end
$scope module fa $end
$var wire 1 S( a $end
$var wire 1 T( b $end
$var wire 1 U( cin $end
$var wire 1 V( cout $end
$var wire 1 W( sum $end
$var wire 1 X( temp1 $end
$var wire 1 Y( temp2 $end
$var wire 1 Z( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[14] $end
$scope module fa $end
$var wire 1 [( a $end
$var wire 1 \( b $end
$var wire 1 ]( cin $end
$var wire 1 ^( cout $end
$var wire 1 _( sum $end
$var wire 1 `( temp1 $end
$var wire 1 a( temp2 $end
$var wire 1 b( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[15] $end
$scope module fa $end
$var wire 1 c( a $end
$var wire 1 d( b $end
$var wire 1 e( cin $end
$var wire 1 f( cout $end
$var wire 1 g( sum $end
$var wire 1 h( temp1 $end
$var wire 1 i( temp2 $end
$var wire 1 j( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[16] $end
$scope module fa $end
$var wire 1 k( a $end
$var wire 1 l( b $end
$var wire 1 m( cin $end
$var wire 1 n( cout $end
$var wire 1 o( sum $end
$var wire 1 p( temp1 $end
$var wire 1 q( temp2 $end
$var wire 1 r( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[17] $end
$scope module fa $end
$var wire 1 s( a $end
$var wire 1 t( b $end
$var wire 1 u( cin $end
$var wire 1 v( cout $end
$var wire 1 w( sum $end
$var wire 1 x( temp1 $end
$var wire 1 y( temp2 $end
$var wire 1 z( temp3 $end
$upscope $end
$upscope $end
$scope begin adders[18] $end
$scope module fa $end
$var wire 1 {( a $end
$var wire 1 |( b $end
$var wire 1 }( cin $end
$var wire 1 ~( cout $end
$var wire 1 !) sum $end
$var wire 1 ") temp1 $end
$var wire 1 #) temp2 $end
$var wire 1 $) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[19] $end
$scope module fa $end
$var wire 1 %) a $end
$var wire 1 &) b $end
$var wire 1 ') cin $end
$var wire 1 () cout $end
$var wire 1 )) sum $end
$var wire 1 *) temp1 $end
$var wire 1 +) temp2 $end
$var wire 1 ,) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[20] $end
$scope module fa $end
$var wire 1 -) a $end
$var wire 1 .) b $end
$var wire 1 /) cin $end
$var wire 1 0) cout $end
$var wire 1 1) sum $end
$var wire 1 2) temp1 $end
$var wire 1 3) temp2 $end
$var wire 1 4) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[21] $end
$scope module fa $end
$var wire 1 5) a $end
$var wire 1 6) b $end
$var wire 1 7) cin $end
$var wire 1 8) cout $end
$var wire 1 9) sum $end
$var wire 1 :) temp1 $end
$var wire 1 ;) temp2 $end
$var wire 1 <) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[22] $end
$scope module fa $end
$var wire 1 =) a $end
$var wire 1 >) b $end
$var wire 1 ?) cin $end
$var wire 1 @) cout $end
$var wire 1 A) sum $end
$var wire 1 B) temp1 $end
$var wire 1 C) temp2 $end
$var wire 1 D) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[23] $end
$scope module fa $end
$var wire 1 E) a $end
$var wire 1 F) b $end
$var wire 1 G) cin $end
$var wire 1 H) cout $end
$var wire 1 I) sum $end
$var wire 1 J) temp1 $end
$var wire 1 K) temp2 $end
$var wire 1 L) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[24] $end
$scope module fa $end
$var wire 1 M) a $end
$var wire 1 N) b $end
$var wire 1 O) cin $end
$var wire 1 P) cout $end
$var wire 1 Q) sum $end
$var wire 1 R) temp1 $end
$var wire 1 S) temp2 $end
$var wire 1 T) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[25] $end
$scope module fa $end
$var wire 1 U) a $end
$var wire 1 V) b $end
$var wire 1 W) cin $end
$var wire 1 X) cout $end
$var wire 1 Y) sum $end
$var wire 1 Z) temp1 $end
$var wire 1 [) temp2 $end
$var wire 1 \) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[26] $end
$scope module fa $end
$var wire 1 ]) a $end
$var wire 1 ^) b $end
$var wire 1 _) cin $end
$var wire 1 `) cout $end
$var wire 1 a) sum $end
$var wire 1 b) temp1 $end
$var wire 1 c) temp2 $end
$var wire 1 d) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[27] $end
$scope module fa $end
$var wire 1 e) a $end
$var wire 1 f) b $end
$var wire 1 g) cin $end
$var wire 1 h) cout $end
$var wire 1 i) sum $end
$var wire 1 j) temp1 $end
$var wire 1 k) temp2 $end
$var wire 1 l) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[28] $end
$scope module fa $end
$var wire 1 m) a $end
$var wire 1 n) b $end
$var wire 1 o) cin $end
$var wire 1 p) cout $end
$var wire 1 q) sum $end
$var wire 1 r) temp1 $end
$var wire 1 s) temp2 $end
$var wire 1 t) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[29] $end
$scope module fa $end
$var wire 1 u) a $end
$var wire 1 v) b $end
$var wire 1 w) cin $end
$var wire 1 x) cout $end
$var wire 1 y) sum $end
$var wire 1 z) temp1 $end
$var wire 1 {) temp2 $end
$var wire 1 |) temp3 $end
$upscope $end
$upscope $end
$scope begin adders[30] $end
$scope module fa $end
$var wire 1 }) a $end
$var wire 1 ~) b $end
$var wire 1 !* cin $end
$var wire 1 "* cout $end
$var wire 1 #* sum $end
$var wire 1 $* temp1 $end
$var wire 1 %* temp2 $end
$var wire 1 &* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[31] $end
$scope module fa $end
$var wire 1 '* a $end
$var wire 1 (* b $end
$var wire 1 )* cin $end
$var wire 1 ** cout $end
$var wire 1 +* sum $end
$var wire 1 ,* temp1 $end
$var wire 1 -* temp2 $end
$var wire 1 .* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[32] $end
$scope module fa $end
$var wire 1 /* a $end
$var wire 1 0* b $end
$var wire 1 1* cin $end
$var wire 1 2* cout $end
$var wire 1 3* sum $end
$var wire 1 4* temp1 $end
$var wire 1 5* temp2 $end
$var wire 1 6* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[33] $end
$scope module fa $end
$var wire 1 7* a $end
$var wire 1 8* b $end
$var wire 1 9* cin $end
$var wire 1 :* cout $end
$var wire 1 ;* sum $end
$var wire 1 <* temp1 $end
$var wire 1 =* temp2 $end
$var wire 1 >* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[34] $end
$scope module fa $end
$var wire 1 ?* a $end
$var wire 1 @* b $end
$var wire 1 A* cin $end
$var wire 1 B* cout $end
$var wire 1 C* sum $end
$var wire 1 D* temp1 $end
$var wire 1 E* temp2 $end
$var wire 1 F* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[35] $end
$scope module fa $end
$var wire 1 G* a $end
$var wire 1 H* b $end
$var wire 1 I* cin $end
$var wire 1 J* cout $end
$var wire 1 K* sum $end
$var wire 1 L* temp1 $end
$var wire 1 M* temp2 $end
$var wire 1 N* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[36] $end
$scope module fa $end
$var wire 1 O* a $end
$var wire 1 P* b $end
$var wire 1 Q* cin $end
$var wire 1 R* cout $end
$var wire 1 S* sum $end
$var wire 1 T* temp1 $end
$var wire 1 U* temp2 $end
$var wire 1 V* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[37] $end
$scope module fa $end
$var wire 1 W* a $end
$var wire 1 X* b $end
$var wire 1 Y* cin $end
$var wire 1 Z* cout $end
$var wire 1 [* sum $end
$var wire 1 \* temp1 $end
$var wire 1 ]* temp2 $end
$var wire 1 ^* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[38] $end
$scope module fa $end
$var wire 1 _* a $end
$var wire 1 `* b $end
$var wire 1 a* cin $end
$var wire 1 b* cout $end
$var wire 1 c* sum $end
$var wire 1 d* temp1 $end
$var wire 1 e* temp2 $end
$var wire 1 f* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[39] $end
$scope module fa $end
$var wire 1 g* a $end
$var wire 1 h* b $end
$var wire 1 i* cin $end
$var wire 1 j* cout $end
$var wire 1 k* sum $end
$var wire 1 l* temp1 $end
$var wire 1 m* temp2 $end
$var wire 1 n* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[40] $end
$scope module fa $end
$var wire 1 o* a $end
$var wire 1 p* b $end
$var wire 1 q* cin $end
$var wire 1 r* cout $end
$var wire 1 s* sum $end
$var wire 1 t* temp1 $end
$var wire 1 u* temp2 $end
$var wire 1 v* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[41] $end
$scope module fa $end
$var wire 1 w* a $end
$var wire 1 x* b $end
$var wire 1 y* cin $end
$var wire 1 z* cout $end
$var wire 1 {* sum $end
$var wire 1 |* temp1 $end
$var wire 1 }* temp2 $end
$var wire 1 ~* temp3 $end
$upscope $end
$upscope $end
$scope begin adders[42] $end
$scope module fa $end
$var wire 1 !+ a $end
$var wire 1 "+ b $end
$var wire 1 #+ cin $end
$var wire 1 $+ cout $end
$var wire 1 %+ sum $end
$var wire 1 &+ temp1 $end
$var wire 1 '+ temp2 $end
$var wire 1 (+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[43] $end
$scope module fa $end
$var wire 1 )+ a $end
$var wire 1 *+ b $end
$var wire 1 ++ cin $end
$var wire 1 ,+ cout $end
$var wire 1 -+ sum $end
$var wire 1 .+ temp1 $end
$var wire 1 /+ temp2 $end
$var wire 1 0+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[44] $end
$scope module fa $end
$var wire 1 1+ a $end
$var wire 1 2+ b $end
$var wire 1 3+ cin $end
$var wire 1 4+ cout $end
$var wire 1 5+ sum $end
$var wire 1 6+ temp1 $end
$var wire 1 7+ temp2 $end
$var wire 1 8+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[45] $end
$scope module fa $end
$var wire 1 9+ a $end
$var wire 1 :+ b $end
$var wire 1 ;+ cin $end
$var wire 1 <+ cout $end
$var wire 1 =+ sum $end
$var wire 1 >+ temp1 $end
$var wire 1 ?+ temp2 $end
$var wire 1 @+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[46] $end
$scope module fa $end
$var wire 1 A+ a $end
$var wire 1 B+ b $end
$var wire 1 C+ cin $end
$var wire 1 D+ cout $end
$var wire 1 E+ sum $end
$var wire 1 F+ temp1 $end
$var wire 1 G+ temp2 $end
$var wire 1 H+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[47] $end
$scope module fa $end
$var wire 1 I+ a $end
$var wire 1 J+ b $end
$var wire 1 K+ cin $end
$var wire 1 L+ cout $end
$var wire 1 M+ sum $end
$var wire 1 N+ temp1 $end
$var wire 1 O+ temp2 $end
$var wire 1 P+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[48] $end
$scope module fa $end
$var wire 1 Q+ a $end
$var wire 1 R+ b $end
$var wire 1 S+ cin $end
$var wire 1 T+ cout $end
$var wire 1 U+ sum $end
$var wire 1 V+ temp1 $end
$var wire 1 W+ temp2 $end
$var wire 1 X+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[49] $end
$scope module fa $end
$var wire 1 Y+ a $end
$var wire 1 Z+ b $end
$var wire 1 [+ cin $end
$var wire 1 \+ cout $end
$var wire 1 ]+ sum $end
$var wire 1 ^+ temp1 $end
$var wire 1 _+ temp2 $end
$var wire 1 `+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[50] $end
$scope module fa $end
$var wire 1 a+ a $end
$var wire 1 b+ b $end
$var wire 1 c+ cin $end
$var wire 1 d+ cout $end
$var wire 1 e+ sum $end
$var wire 1 f+ temp1 $end
$var wire 1 g+ temp2 $end
$var wire 1 h+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[51] $end
$scope module fa $end
$var wire 1 i+ a $end
$var wire 1 j+ b $end
$var wire 1 k+ cin $end
$var wire 1 l+ cout $end
$var wire 1 m+ sum $end
$var wire 1 n+ temp1 $end
$var wire 1 o+ temp2 $end
$var wire 1 p+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[52] $end
$scope module fa $end
$var wire 1 q+ a $end
$var wire 1 r+ b $end
$var wire 1 s+ cin $end
$var wire 1 t+ cout $end
$var wire 1 u+ sum $end
$var wire 1 v+ temp1 $end
$var wire 1 w+ temp2 $end
$var wire 1 x+ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[53] $end
$scope module fa $end
$var wire 1 y+ a $end
$var wire 1 z+ b $end
$var wire 1 {+ cin $end
$var wire 1 |+ cout $end
$var wire 1 }+ sum $end
$var wire 1 ~+ temp1 $end
$var wire 1 !, temp2 $end
$var wire 1 ", temp3 $end
$upscope $end
$upscope $end
$scope begin adders[54] $end
$scope module fa $end
$var wire 1 #, a $end
$var wire 1 $, b $end
$var wire 1 %, cin $end
$var wire 1 &, cout $end
$var wire 1 ', sum $end
$var wire 1 (, temp1 $end
$var wire 1 ), temp2 $end
$var wire 1 *, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[55] $end
$scope module fa $end
$var wire 1 +, a $end
$var wire 1 ,, b $end
$var wire 1 -, cin $end
$var wire 1 ., cout $end
$var wire 1 /, sum $end
$var wire 1 0, temp1 $end
$var wire 1 1, temp2 $end
$var wire 1 2, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[56] $end
$scope module fa $end
$var wire 1 3, a $end
$var wire 1 4, b $end
$var wire 1 5, cin $end
$var wire 1 6, cout $end
$var wire 1 7, sum $end
$var wire 1 8, temp1 $end
$var wire 1 9, temp2 $end
$var wire 1 :, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[57] $end
$scope module fa $end
$var wire 1 ;, a $end
$var wire 1 <, b $end
$var wire 1 =, cin $end
$var wire 1 >, cout $end
$var wire 1 ?, sum $end
$var wire 1 @, temp1 $end
$var wire 1 A, temp2 $end
$var wire 1 B, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[58] $end
$scope module fa $end
$var wire 1 C, a $end
$var wire 1 D, b $end
$var wire 1 E, cin $end
$var wire 1 F, cout $end
$var wire 1 G, sum $end
$var wire 1 H, temp1 $end
$var wire 1 I, temp2 $end
$var wire 1 J, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[59] $end
$scope module fa $end
$var wire 1 K, a $end
$var wire 1 L, b $end
$var wire 1 M, cin $end
$var wire 1 N, cout $end
$var wire 1 O, sum $end
$var wire 1 P, temp1 $end
$var wire 1 Q, temp2 $end
$var wire 1 R, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[60] $end
$scope module fa $end
$var wire 1 S, a $end
$var wire 1 T, b $end
$var wire 1 U, cin $end
$var wire 1 V, cout $end
$var wire 1 W, sum $end
$var wire 1 X, temp1 $end
$var wire 1 Y, temp2 $end
$var wire 1 Z, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[61] $end
$scope module fa $end
$var wire 1 [, a $end
$var wire 1 \, b $end
$var wire 1 ], cin $end
$var wire 1 ^, cout $end
$var wire 1 _, sum $end
$var wire 1 `, temp1 $end
$var wire 1 a, temp2 $end
$var wire 1 b, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[62] $end
$scope module fa $end
$var wire 1 c, a $end
$var wire 1 d, b $end
$var wire 1 e, cin $end
$var wire 1 f, cout $end
$var wire 1 g, sum $end
$var wire 1 h, temp1 $end
$var wire 1 i, temp2 $end
$var wire 1 j, temp3 $end
$upscope $end
$upscope $end
$scope begin adders[63] $end
$scope module fa $end
$var wire 1 k, a $end
$var wire 1 l, b $end
$var wire 1 m, cin $end
$var wire 1 n, cout $end
$var wire 1 o, sum $end
$var wire 1 p, temp1 $end
$var wire 1 q, temp2 $end
$var wire 1 r, temp3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module logical_operations $end
$var wire 64 s, a [63:0] $end
$var wire 64 t, xor_final [63:0] $end
$var wire 64 u, or_final [63:0] $end
$var wire 64 v, b [63:0] $end
$var wire 64 w, and_final [63:0] $end
$scope begin bitwiseops[0] $end
$upscope $end
$scope begin bitwiseops[1] $end
$upscope $end
$scope begin bitwiseops[2] $end
$upscope $end
$scope begin bitwiseops[3] $end
$upscope $end
$scope begin bitwiseops[4] $end
$upscope $end
$scope begin bitwiseops[5] $end
$upscope $end
$scope begin bitwiseops[6] $end
$upscope $end
$scope begin bitwiseops[7] $end
$upscope $end
$scope begin bitwiseops[8] $end
$upscope $end
$scope begin bitwiseops[9] $end
$upscope $end
$scope begin bitwiseops[10] $end
$upscope $end
$scope begin bitwiseops[11] $end
$upscope $end
$scope begin bitwiseops[12] $end
$upscope $end
$scope begin bitwiseops[13] $end
$upscope $end
$scope begin bitwiseops[14] $end
$upscope $end
$scope begin bitwiseops[15] $end
$upscope $end
$scope begin bitwiseops[16] $end
$upscope $end
$scope begin bitwiseops[17] $end
$upscope $end
$scope begin bitwiseops[18] $end
$upscope $end
$scope begin bitwiseops[19] $end
$upscope $end
$scope begin bitwiseops[20] $end
$upscope $end
$scope begin bitwiseops[21] $end
$upscope $end
$scope begin bitwiseops[22] $end
$upscope $end
$scope begin bitwiseops[23] $end
$upscope $end
$scope begin bitwiseops[24] $end
$upscope $end
$scope begin bitwiseops[25] $end
$upscope $end
$scope begin bitwiseops[26] $end
$upscope $end
$scope begin bitwiseops[27] $end
$upscope $end
$scope begin bitwiseops[28] $end
$upscope $end
$scope begin bitwiseops[29] $end
$upscope $end
$scope begin bitwiseops[30] $end
$upscope $end
$scope begin bitwiseops[31] $end
$upscope $end
$scope begin bitwiseops[32] $end
$upscope $end
$scope begin bitwiseops[33] $end
$upscope $end
$scope begin bitwiseops[34] $end
$upscope $end
$scope begin bitwiseops[35] $end
$upscope $end
$scope begin bitwiseops[36] $end
$upscope $end
$scope begin bitwiseops[37] $end
$upscope $end
$scope begin bitwiseops[38] $end
$upscope $end
$scope begin bitwiseops[39] $end
$upscope $end
$scope begin bitwiseops[40] $end
$upscope $end
$scope begin bitwiseops[41] $end
$upscope $end
$scope begin bitwiseops[42] $end
$upscope $end
$scope begin bitwiseops[43] $end
$upscope $end
$scope begin bitwiseops[44] $end
$upscope $end
$scope begin bitwiseops[45] $end
$upscope $end
$scope begin bitwiseops[46] $end
$upscope $end
$scope begin bitwiseops[47] $end
$upscope $end
$scope begin bitwiseops[48] $end
$upscope $end
$scope begin bitwiseops[49] $end
$upscope $end
$scope begin bitwiseops[50] $end
$upscope $end
$scope begin bitwiseops[51] $end
$upscope $end
$scope begin bitwiseops[52] $end
$upscope $end
$scope begin bitwiseops[53] $end
$upscope $end
$scope begin bitwiseops[54] $end
$upscope $end
$scope begin bitwiseops[55] $end
$upscope $end
$scope begin bitwiseops[56] $end
$upscope $end
$scope begin bitwiseops[57] $end
$upscope $end
$scope begin bitwiseops[58] $end
$upscope $end
$scope begin bitwiseops[59] $end
$upscope $end
$scope begin bitwiseops[60] $end
$upscope $end
$scope begin bitwiseops[61] $end
$upscope $end
$scope begin bitwiseops[62] $end
$upscope $end
$scope begin bitwiseops[63] $end
$upscope $end
$upscope $end
$scope module shift_operations $end
$var wire 64 x, a [63:0] $end
$var wire 64 y, b [63:0] $end
$var reg 64 z, sll_final [63:0] $end
$var reg 64 {, sra_final [63:0] $end
$var reg 64 |, srl_final [63:0] $end
$var reg 64 }, temp_sll [63:0] $end
$var reg 64 ~, temp_sra [63:0] $end
$var reg 64 !- temp_srl [63:0] $end
$upscope $end
$scope module sub $end
$var wire 64 "- a [63:0] $end
$var wire 64 #- diff [63:0] $end
$var wire 1 $- cout $end
$var wire 64 %- b_complement [63:0] $end
$var wire 64 &- b [63:0] $end
$scope begin complement[0] $end
$upscope $end
$scope begin complement[1] $end
$upscope $end
$scope begin complement[2] $end
$upscope $end
$scope begin complement[3] $end
$upscope $end
$scope begin complement[4] $end
$upscope $end
$scope begin complement[5] $end
$upscope $end
$scope begin complement[6] $end
$upscope $end
$scope begin complement[7] $end
$upscope $end
$scope begin complement[8] $end
$upscope $end
$scope begin complement[9] $end
$upscope $end
$scope begin complement[10] $end
$upscope $end
$scope begin complement[11] $end
$upscope $end
$scope begin complement[12] $end
$upscope $end
$scope begin complement[13] $end
$upscope $end
$scope begin complement[14] $end
$upscope $end
$scope begin complement[15] $end
$upscope $end
$scope begin complement[16] $end
$upscope $end
$scope begin complement[17] $end
$upscope $end
$scope begin complement[18] $end
$upscope $end
$scope begin complement[19] $end
$upscope $end
$scope begin complement[20] $end
$upscope $end
$scope begin complement[21] $end
$upscope $end
$scope begin complement[22] $end
$upscope $end
$scope begin complement[23] $end
$upscope $end
$scope begin complement[24] $end
$upscope $end
$scope begin complement[25] $end
$upscope $end
$scope begin complement[26] $end
$upscope $end
$scope begin complement[27] $end
$upscope $end
$scope begin complement[28] $end
$upscope $end
$scope begin complement[29] $end
$upscope $end
$scope begin complement[30] $end
$upscope $end
$scope begin complement[31] $end
$upscope $end
$scope begin complement[32] $end
$upscope $end
$scope begin complement[33] $end
$upscope $end
$scope begin complement[34] $end
$upscope $end
$scope begin complement[35] $end
$upscope $end
$scope begin complement[36] $end
$upscope $end
$scope begin complement[37] $end
$upscope $end
$scope begin complement[38] $end
$upscope $end
$scope begin complement[39] $end
$upscope $end
$scope begin complement[40] $end
$upscope $end
$scope begin complement[41] $end
$upscope $end
$scope begin complement[42] $end
$upscope $end
$scope begin complement[43] $end
$upscope $end
$scope begin complement[44] $end
$upscope $end
$scope begin complement[45] $end
$upscope $end
$scope begin complement[46] $end
$upscope $end
$scope begin complement[47] $end
$upscope $end
$scope begin complement[48] $end
$upscope $end
$scope begin complement[49] $end
$upscope $end
$scope begin complement[50] $end
$upscope $end
$scope begin complement[51] $end
$upscope $end
$scope begin complement[52] $end
$upscope $end
$scope begin complement[53] $end
$upscope $end
$scope begin complement[54] $end
$upscope $end
$scope begin complement[55] $end
$upscope $end
$scope begin complement[56] $end
$upscope $end
$scope begin complement[57] $end
$upscope $end
$scope begin complement[58] $end
$upscope $end
$scope begin complement[59] $end
$upscope $end
$scope begin complement[60] $end
$upscope $end
$scope begin complement[61] $end
$upscope $end
$scope begin complement[62] $end
$upscope $end
$scope begin complement[63] $end
$upscope $end
$scope module final $end
$var wire 64 '- a [63:0] $end
$var wire 64 (- b [63:0] $end
$var wire 1 )- cin $end
$var wire 64 *- sum [63:0] $end
$var wire 1 $- cout $end
$var wire 65 +- carry [64:0] $end
$scope begin adders[0] $end
$scope module fa $end
$var wire 1 ,- a $end
$var wire 1 -- b $end
$var wire 1 .- cin $end
$var wire 1 /- cout $end
$var wire 1 0- sum $end
$var wire 1 1- temp1 $end
$var wire 1 2- temp2 $end
$var wire 1 3- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[1] $end
$scope module fa $end
$var wire 1 4- a $end
$var wire 1 5- b $end
$var wire 1 6- cin $end
$var wire 1 7- cout $end
$var wire 1 8- sum $end
$var wire 1 9- temp1 $end
$var wire 1 :- temp2 $end
$var wire 1 ;- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[2] $end
$scope module fa $end
$var wire 1 <- a $end
$var wire 1 =- b $end
$var wire 1 >- cin $end
$var wire 1 ?- cout $end
$var wire 1 @- sum $end
$var wire 1 A- temp1 $end
$var wire 1 B- temp2 $end
$var wire 1 C- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[3] $end
$scope module fa $end
$var wire 1 D- a $end
$var wire 1 E- b $end
$var wire 1 F- cin $end
$var wire 1 G- cout $end
$var wire 1 H- sum $end
$var wire 1 I- temp1 $end
$var wire 1 J- temp2 $end
$var wire 1 K- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[4] $end
$scope module fa $end
$var wire 1 L- a $end
$var wire 1 M- b $end
$var wire 1 N- cin $end
$var wire 1 O- cout $end
$var wire 1 P- sum $end
$var wire 1 Q- temp1 $end
$var wire 1 R- temp2 $end
$var wire 1 S- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[5] $end
$scope module fa $end
$var wire 1 T- a $end
$var wire 1 U- b $end
$var wire 1 V- cin $end
$var wire 1 W- cout $end
$var wire 1 X- sum $end
$var wire 1 Y- temp1 $end
$var wire 1 Z- temp2 $end
$var wire 1 [- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[6] $end
$scope module fa $end
$var wire 1 \- a $end
$var wire 1 ]- b $end
$var wire 1 ^- cin $end
$var wire 1 _- cout $end
$var wire 1 `- sum $end
$var wire 1 a- temp1 $end
$var wire 1 b- temp2 $end
$var wire 1 c- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[7] $end
$scope module fa $end
$var wire 1 d- a $end
$var wire 1 e- b $end
$var wire 1 f- cin $end
$var wire 1 g- cout $end
$var wire 1 h- sum $end
$var wire 1 i- temp1 $end
$var wire 1 j- temp2 $end
$var wire 1 k- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[8] $end
$scope module fa $end
$var wire 1 l- a $end
$var wire 1 m- b $end
$var wire 1 n- cin $end
$var wire 1 o- cout $end
$var wire 1 p- sum $end
$var wire 1 q- temp1 $end
$var wire 1 r- temp2 $end
$var wire 1 s- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[9] $end
$scope module fa $end
$var wire 1 t- a $end
$var wire 1 u- b $end
$var wire 1 v- cin $end
$var wire 1 w- cout $end
$var wire 1 x- sum $end
$var wire 1 y- temp1 $end
$var wire 1 z- temp2 $end
$var wire 1 {- temp3 $end
$upscope $end
$upscope $end
$scope begin adders[10] $end
$scope module fa $end
$var wire 1 |- a $end
$var wire 1 }- b $end
$var wire 1 ~- cin $end
$var wire 1 !. cout $end
$var wire 1 ". sum $end
$var wire 1 #. temp1 $end
$var wire 1 $. temp2 $end
$var wire 1 %. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[11] $end
$scope module fa $end
$var wire 1 &. a $end
$var wire 1 '. b $end
$var wire 1 (. cin $end
$var wire 1 ). cout $end
$var wire 1 *. sum $end
$var wire 1 +. temp1 $end
$var wire 1 ,. temp2 $end
$var wire 1 -. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[12] $end
$scope module fa $end
$var wire 1 .. a $end
$var wire 1 /. b $end
$var wire 1 0. cin $end
$var wire 1 1. cout $end
$var wire 1 2. sum $end
$var wire 1 3. temp1 $end
$var wire 1 4. temp2 $end
$var wire 1 5. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[13] $end
$scope module fa $end
$var wire 1 6. a $end
$var wire 1 7. b $end
$var wire 1 8. cin $end
$var wire 1 9. cout $end
$var wire 1 :. sum $end
$var wire 1 ;. temp1 $end
$var wire 1 <. temp2 $end
$var wire 1 =. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[14] $end
$scope module fa $end
$var wire 1 >. a $end
$var wire 1 ?. b $end
$var wire 1 @. cin $end
$var wire 1 A. cout $end
$var wire 1 B. sum $end
$var wire 1 C. temp1 $end
$var wire 1 D. temp2 $end
$var wire 1 E. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[15] $end
$scope module fa $end
$var wire 1 F. a $end
$var wire 1 G. b $end
$var wire 1 H. cin $end
$var wire 1 I. cout $end
$var wire 1 J. sum $end
$var wire 1 K. temp1 $end
$var wire 1 L. temp2 $end
$var wire 1 M. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[16] $end
$scope module fa $end
$var wire 1 N. a $end
$var wire 1 O. b $end
$var wire 1 P. cin $end
$var wire 1 Q. cout $end
$var wire 1 R. sum $end
$var wire 1 S. temp1 $end
$var wire 1 T. temp2 $end
$var wire 1 U. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[17] $end
$scope module fa $end
$var wire 1 V. a $end
$var wire 1 W. b $end
$var wire 1 X. cin $end
$var wire 1 Y. cout $end
$var wire 1 Z. sum $end
$var wire 1 [. temp1 $end
$var wire 1 \. temp2 $end
$var wire 1 ]. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[18] $end
$scope module fa $end
$var wire 1 ^. a $end
$var wire 1 _. b $end
$var wire 1 `. cin $end
$var wire 1 a. cout $end
$var wire 1 b. sum $end
$var wire 1 c. temp1 $end
$var wire 1 d. temp2 $end
$var wire 1 e. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[19] $end
$scope module fa $end
$var wire 1 f. a $end
$var wire 1 g. b $end
$var wire 1 h. cin $end
$var wire 1 i. cout $end
$var wire 1 j. sum $end
$var wire 1 k. temp1 $end
$var wire 1 l. temp2 $end
$var wire 1 m. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[20] $end
$scope module fa $end
$var wire 1 n. a $end
$var wire 1 o. b $end
$var wire 1 p. cin $end
$var wire 1 q. cout $end
$var wire 1 r. sum $end
$var wire 1 s. temp1 $end
$var wire 1 t. temp2 $end
$var wire 1 u. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[21] $end
$scope module fa $end
$var wire 1 v. a $end
$var wire 1 w. b $end
$var wire 1 x. cin $end
$var wire 1 y. cout $end
$var wire 1 z. sum $end
$var wire 1 {. temp1 $end
$var wire 1 |. temp2 $end
$var wire 1 }. temp3 $end
$upscope $end
$upscope $end
$scope begin adders[22] $end
$scope module fa $end
$var wire 1 ~. a $end
$var wire 1 !/ b $end
$var wire 1 "/ cin $end
$var wire 1 #/ cout $end
$var wire 1 $/ sum $end
$var wire 1 %/ temp1 $end
$var wire 1 &/ temp2 $end
$var wire 1 '/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[23] $end
$scope module fa $end
$var wire 1 (/ a $end
$var wire 1 )/ b $end
$var wire 1 */ cin $end
$var wire 1 +/ cout $end
$var wire 1 ,/ sum $end
$var wire 1 -/ temp1 $end
$var wire 1 ./ temp2 $end
$var wire 1 // temp3 $end
$upscope $end
$upscope $end
$scope begin adders[24] $end
$scope module fa $end
$var wire 1 0/ a $end
$var wire 1 1/ b $end
$var wire 1 2/ cin $end
$var wire 1 3/ cout $end
$var wire 1 4/ sum $end
$var wire 1 5/ temp1 $end
$var wire 1 6/ temp2 $end
$var wire 1 7/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[25] $end
$scope module fa $end
$var wire 1 8/ a $end
$var wire 1 9/ b $end
$var wire 1 :/ cin $end
$var wire 1 ;/ cout $end
$var wire 1 </ sum $end
$var wire 1 =/ temp1 $end
$var wire 1 >/ temp2 $end
$var wire 1 ?/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[26] $end
$scope module fa $end
$var wire 1 @/ a $end
$var wire 1 A/ b $end
$var wire 1 B/ cin $end
$var wire 1 C/ cout $end
$var wire 1 D/ sum $end
$var wire 1 E/ temp1 $end
$var wire 1 F/ temp2 $end
$var wire 1 G/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[27] $end
$scope module fa $end
$var wire 1 H/ a $end
$var wire 1 I/ b $end
$var wire 1 J/ cin $end
$var wire 1 K/ cout $end
$var wire 1 L/ sum $end
$var wire 1 M/ temp1 $end
$var wire 1 N/ temp2 $end
$var wire 1 O/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[28] $end
$scope module fa $end
$var wire 1 P/ a $end
$var wire 1 Q/ b $end
$var wire 1 R/ cin $end
$var wire 1 S/ cout $end
$var wire 1 T/ sum $end
$var wire 1 U/ temp1 $end
$var wire 1 V/ temp2 $end
$var wire 1 W/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[29] $end
$scope module fa $end
$var wire 1 X/ a $end
$var wire 1 Y/ b $end
$var wire 1 Z/ cin $end
$var wire 1 [/ cout $end
$var wire 1 \/ sum $end
$var wire 1 ]/ temp1 $end
$var wire 1 ^/ temp2 $end
$var wire 1 _/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[30] $end
$scope module fa $end
$var wire 1 `/ a $end
$var wire 1 a/ b $end
$var wire 1 b/ cin $end
$var wire 1 c/ cout $end
$var wire 1 d/ sum $end
$var wire 1 e/ temp1 $end
$var wire 1 f/ temp2 $end
$var wire 1 g/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[31] $end
$scope module fa $end
$var wire 1 h/ a $end
$var wire 1 i/ b $end
$var wire 1 j/ cin $end
$var wire 1 k/ cout $end
$var wire 1 l/ sum $end
$var wire 1 m/ temp1 $end
$var wire 1 n/ temp2 $end
$var wire 1 o/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[32] $end
$scope module fa $end
$var wire 1 p/ a $end
$var wire 1 q/ b $end
$var wire 1 r/ cin $end
$var wire 1 s/ cout $end
$var wire 1 t/ sum $end
$var wire 1 u/ temp1 $end
$var wire 1 v/ temp2 $end
$var wire 1 w/ temp3 $end
$upscope $end
$upscope $end
$scope begin adders[33] $end
$scope module fa $end
$var wire 1 x/ a $end
$var wire 1 y/ b $end
$var wire 1 z/ cin $end
$var wire 1 {/ cout $end
$var wire 1 |/ sum $end
$var wire 1 }/ temp1 $end
$var wire 1 ~/ temp2 $end
$var wire 1 !0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[34] $end
$scope module fa $end
$var wire 1 "0 a $end
$var wire 1 #0 b $end
$var wire 1 $0 cin $end
$var wire 1 %0 cout $end
$var wire 1 &0 sum $end
$var wire 1 '0 temp1 $end
$var wire 1 (0 temp2 $end
$var wire 1 )0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[35] $end
$scope module fa $end
$var wire 1 *0 a $end
$var wire 1 +0 b $end
$var wire 1 ,0 cin $end
$var wire 1 -0 cout $end
$var wire 1 .0 sum $end
$var wire 1 /0 temp1 $end
$var wire 1 00 temp2 $end
$var wire 1 10 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[36] $end
$scope module fa $end
$var wire 1 20 a $end
$var wire 1 30 b $end
$var wire 1 40 cin $end
$var wire 1 50 cout $end
$var wire 1 60 sum $end
$var wire 1 70 temp1 $end
$var wire 1 80 temp2 $end
$var wire 1 90 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[37] $end
$scope module fa $end
$var wire 1 :0 a $end
$var wire 1 ;0 b $end
$var wire 1 <0 cin $end
$var wire 1 =0 cout $end
$var wire 1 >0 sum $end
$var wire 1 ?0 temp1 $end
$var wire 1 @0 temp2 $end
$var wire 1 A0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[38] $end
$scope module fa $end
$var wire 1 B0 a $end
$var wire 1 C0 b $end
$var wire 1 D0 cin $end
$var wire 1 E0 cout $end
$var wire 1 F0 sum $end
$var wire 1 G0 temp1 $end
$var wire 1 H0 temp2 $end
$var wire 1 I0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[39] $end
$scope module fa $end
$var wire 1 J0 a $end
$var wire 1 K0 b $end
$var wire 1 L0 cin $end
$var wire 1 M0 cout $end
$var wire 1 N0 sum $end
$var wire 1 O0 temp1 $end
$var wire 1 P0 temp2 $end
$var wire 1 Q0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[40] $end
$scope module fa $end
$var wire 1 R0 a $end
$var wire 1 S0 b $end
$var wire 1 T0 cin $end
$var wire 1 U0 cout $end
$var wire 1 V0 sum $end
$var wire 1 W0 temp1 $end
$var wire 1 X0 temp2 $end
$var wire 1 Y0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[41] $end
$scope module fa $end
$var wire 1 Z0 a $end
$var wire 1 [0 b $end
$var wire 1 \0 cin $end
$var wire 1 ]0 cout $end
$var wire 1 ^0 sum $end
$var wire 1 _0 temp1 $end
$var wire 1 `0 temp2 $end
$var wire 1 a0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[42] $end
$scope module fa $end
$var wire 1 b0 a $end
$var wire 1 c0 b $end
$var wire 1 d0 cin $end
$var wire 1 e0 cout $end
$var wire 1 f0 sum $end
$var wire 1 g0 temp1 $end
$var wire 1 h0 temp2 $end
$var wire 1 i0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[43] $end
$scope module fa $end
$var wire 1 j0 a $end
$var wire 1 k0 b $end
$var wire 1 l0 cin $end
$var wire 1 m0 cout $end
$var wire 1 n0 sum $end
$var wire 1 o0 temp1 $end
$var wire 1 p0 temp2 $end
$var wire 1 q0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[44] $end
$scope module fa $end
$var wire 1 r0 a $end
$var wire 1 s0 b $end
$var wire 1 t0 cin $end
$var wire 1 u0 cout $end
$var wire 1 v0 sum $end
$var wire 1 w0 temp1 $end
$var wire 1 x0 temp2 $end
$var wire 1 y0 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[45] $end
$scope module fa $end
$var wire 1 z0 a $end
$var wire 1 {0 b $end
$var wire 1 |0 cin $end
$var wire 1 }0 cout $end
$var wire 1 ~0 sum $end
$var wire 1 !1 temp1 $end
$var wire 1 "1 temp2 $end
$var wire 1 #1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[46] $end
$scope module fa $end
$var wire 1 $1 a $end
$var wire 1 %1 b $end
$var wire 1 &1 cin $end
$var wire 1 '1 cout $end
$var wire 1 (1 sum $end
$var wire 1 )1 temp1 $end
$var wire 1 *1 temp2 $end
$var wire 1 +1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[47] $end
$scope module fa $end
$var wire 1 ,1 a $end
$var wire 1 -1 b $end
$var wire 1 .1 cin $end
$var wire 1 /1 cout $end
$var wire 1 01 sum $end
$var wire 1 11 temp1 $end
$var wire 1 21 temp2 $end
$var wire 1 31 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[48] $end
$scope module fa $end
$var wire 1 41 a $end
$var wire 1 51 b $end
$var wire 1 61 cin $end
$var wire 1 71 cout $end
$var wire 1 81 sum $end
$var wire 1 91 temp1 $end
$var wire 1 :1 temp2 $end
$var wire 1 ;1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[49] $end
$scope module fa $end
$var wire 1 <1 a $end
$var wire 1 =1 b $end
$var wire 1 >1 cin $end
$var wire 1 ?1 cout $end
$var wire 1 @1 sum $end
$var wire 1 A1 temp1 $end
$var wire 1 B1 temp2 $end
$var wire 1 C1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[50] $end
$scope module fa $end
$var wire 1 D1 a $end
$var wire 1 E1 b $end
$var wire 1 F1 cin $end
$var wire 1 G1 cout $end
$var wire 1 H1 sum $end
$var wire 1 I1 temp1 $end
$var wire 1 J1 temp2 $end
$var wire 1 K1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[51] $end
$scope module fa $end
$var wire 1 L1 a $end
$var wire 1 M1 b $end
$var wire 1 N1 cin $end
$var wire 1 O1 cout $end
$var wire 1 P1 sum $end
$var wire 1 Q1 temp1 $end
$var wire 1 R1 temp2 $end
$var wire 1 S1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[52] $end
$scope module fa $end
$var wire 1 T1 a $end
$var wire 1 U1 b $end
$var wire 1 V1 cin $end
$var wire 1 W1 cout $end
$var wire 1 X1 sum $end
$var wire 1 Y1 temp1 $end
$var wire 1 Z1 temp2 $end
$var wire 1 [1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[53] $end
$scope module fa $end
$var wire 1 \1 a $end
$var wire 1 ]1 b $end
$var wire 1 ^1 cin $end
$var wire 1 _1 cout $end
$var wire 1 `1 sum $end
$var wire 1 a1 temp1 $end
$var wire 1 b1 temp2 $end
$var wire 1 c1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[54] $end
$scope module fa $end
$var wire 1 d1 a $end
$var wire 1 e1 b $end
$var wire 1 f1 cin $end
$var wire 1 g1 cout $end
$var wire 1 h1 sum $end
$var wire 1 i1 temp1 $end
$var wire 1 j1 temp2 $end
$var wire 1 k1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[55] $end
$scope module fa $end
$var wire 1 l1 a $end
$var wire 1 m1 b $end
$var wire 1 n1 cin $end
$var wire 1 o1 cout $end
$var wire 1 p1 sum $end
$var wire 1 q1 temp1 $end
$var wire 1 r1 temp2 $end
$var wire 1 s1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[56] $end
$scope module fa $end
$var wire 1 t1 a $end
$var wire 1 u1 b $end
$var wire 1 v1 cin $end
$var wire 1 w1 cout $end
$var wire 1 x1 sum $end
$var wire 1 y1 temp1 $end
$var wire 1 z1 temp2 $end
$var wire 1 {1 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[57] $end
$scope module fa $end
$var wire 1 |1 a $end
$var wire 1 }1 b $end
$var wire 1 ~1 cin $end
$var wire 1 !2 cout $end
$var wire 1 "2 sum $end
$var wire 1 #2 temp1 $end
$var wire 1 $2 temp2 $end
$var wire 1 %2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[58] $end
$scope module fa $end
$var wire 1 &2 a $end
$var wire 1 '2 b $end
$var wire 1 (2 cin $end
$var wire 1 )2 cout $end
$var wire 1 *2 sum $end
$var wire 1 +2 temp1 $end
$var wire 1 ,2 temp2 $end
$var wire 1 -2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[59] $end
$scope module fa $end
$var wire 1 .2 a $end
$var wire 1 /2 b $end
$var wire 1 02 cin $end
$var wire 1 12 cout $end
$var wire 1 22 sum $end
$var wire 1 32 temp1 $end
$var wire 1 42 temp2 $end
$var wire 1 52 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[60] $end
$scope module fa $end
$var wire 1 62 a $end
$var wire 1 72 b $end
$var wire 1 82 cin $end
$var wire 1 92 cout $end
$var wire 1 :2 sum $end
$var wire 1 ;2 temp1 $end
$var wire 1 <2 temp2 $end
$var wire 1 =2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[61] $end
$scope module fa $end
$var wire 1 >2 a $end
$var wire 1 ?2 b $end
$var wire 1 @2 cin $end
$var wire 1 A2 cout $end
$var wire 1 B2 sum $end
$var wire 1 C2 temp1 $end
$var wire 1 D2 temp2 $end
$var wire 1 E2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[62] $end
$scope module fa $end
$var wire 1 F2 a $end
$var wire 1 G2 b $end
$var wire 1 H2 cin $end
$var wire 1 I2 cout $end
$var wire 1 J2 sum $end
$var wire 1 K2 temp1 $end
$var wire 1 L2 temp2 $end
$var wire 1 M2 temp3 $end
$upscope $end
$upscope $end
$scope begin adders[63] $end
$scope module fa $end
$var wire 1 N2 a $end
$var wire 1 O2 b $end
$var wire 1 P2 cin $end
$var wire 1 Q2 cout $end
$var wire 1 R2 sum $end
$var wire 1 S2 temp1 $end
$var wire 1 T2 temp2 $end
$var wire 1 U2 temp3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module br_unit $end
$var wire 64 V2 rs2_data [63:0] $end
$var wire 64 W2 rs1_data [63:0] $end
$var wire 64 X2 pc [63:0] $end
$var wire 64 Y2 imm [63:0] $end
$var wire 3 Z2 funct3 [2:0] $end
$var wire 1 [2 equal $end
$var wire 1 6 branch $end
$var reg 64 \2 branch_target [63:0] $end
$var reg 1 A take_branch $end
$upscope $end
$scope module ctrl $end
$var wire 3 ]2 funct3 [2:0] $end
$var wire 7 ^2 funct7 [6:0] $end
$var wire 7 _2 opcode [6:0] $end
$var reg 3 `2 alu_funct3 [2:0] $end
$var reg 7 a2 alu_funct7 [6:0] $end
$var reg 1 7 alu_src_b_sel $end
$var reg 1 6 branch $end
$var reg 3 b2 imm_type [2:0] $end
$var reg 1 2 mem_read $end
$var reg 1 1 mem_write $end
$var reg 1 / reg_write $end
$upscope $end
$scope module dmem $end
$var wire 1 ! clk $end
$var wire 64 c2 write_data [63:0] $end
$var wire 1 d2 mem_write $end
$var wire 1 e2 mem_read $end
$var wire 64 f2 address [63:0] $end
$var reg 64 g2 read_data [63:0] $end
$var integer 32 h2 i [31:0] $end
$upscope $end
$scope module forward_unit $end
$var wire 1 i2 wb_reg_write $end
$var wire 5 j2 wb_rd_addr [4:0] $end
$var wire 1 k2 mem_reg_write $end
$var wire 5 l2 mem_rd_addr [4:0] $end
$var wire 5 m2 ex_rs2_addr [4:0] $end
$var wire 5 n2 ex_rs1_addr [4:0] $end
$var reg 2 o2 forward_a [1:0] $end
$var reg 2 p2 forward_b [1:0] $end
$upscope $end
$scope module hazard_unit $end
$var wire 1 A branch_taken $end
$var wire 1 6 id_branch $end
$var wire 5 q2 id_rs1_addr [4:0] $end
$var wire 5 r2 id_rs2_addr [4:0] $end
$var wire 5 s2 mem_rd_addr [4:0] $end
$var wire 5 t2 ex_rd_addr [4:0] $end
$var wire 1 u2 ex_mem_read $end
$var reg 1 < flush_ex $end
$var reg 1 ) stall_id $end
$var reg 1 ( stall_if $end
$upscope $end
$scope module imem $end
$var wire 64 v2 pc [63:0] $end
$var reg 32 w2 instruction [31:0] $end
$var integer 32 x2 i [31:0] $end
$upscope $end
$scope module imm_gen $end
$var wire 3 y2 imm_type [2:0] $end
$var wire 12 z2 s_imm [11:0] $end
$var wire 32 {2 instruction [31:0] $end
$var wire 12 |2 i_imm [11:0] $end
$var wire 13 }2 b_imm [12:0] $end
$var reg 64 ~2 immediate [63:0] $end
$upscope $end
$scope module pipe_regs $end
$var wire 1 ! clk $end
$var wire 64 !3 ex_alu_result [63:0] $end
$var wire 64 "3 ex_rs2_data_fwd [63:0] $end
$var wire 1 #3 flush_ex_mem $end
$var wire 1 < flush_id_ex $end
$var wire 1 A flush_if_id $end
$var wire 1 $3 flush_mem_wb $end
$var wire 1 7 id_alu_src_b_sel $end
$var wire 3 %3 id_funct3 [2:0] $end
$var wire 7 &3 id_funct7 [6:0] $end
$var wire 64 '3 id_immediate [63:0] $end
$var wire 1 2 id_mem_read $end
$var wire 1 1 id_mem_write $end
$var wire 5 (3 id_rd_addr [4:0] $end
$var wire 1 / id_reg_write $end
$var wire 5 )3 id_rs1_addr [4:0] $end
$var wire 5 *3 id_rs2_addr [4:0] $end
$var wire 32 +3 if_instruction [31:0] $end
$var wire 64 ,3 if_pc [63:0] $end
$var wire 64 -3 mem_alu_result_in [63:0] $end
$var wire 64 .3 mem_read_data [63:0] $end
$var wire 1 # rst $end
$var wire 1 /3 stall_ex_mem $end
$var wire 1 ) stall_id_ex $end
$var wire 1 ( stall_if_id $end
$var wire 1 03 stall_mem_wb $end
$var wire 64 13 id_rs2_data [63:0] $end
$var wire 64 23 id_rs1_data [63:0] $end
$var reg 1 33 ex_alu_src_b_sel $end
$var reg 3 43 ex_funct3 [2:0] $end
$var reg 7 53 ex_funct7 [6:0] $end
$var reg 64 63 ex_immediate [63:0] $end
$var reg 1 u2 ex_mem_read $end
$var reg 1 73 ex_mem_write $end
$var reg 5 83 ex_rd_addr [4:0] $end
$var reg 1 93 ex_reg_write $end
$var reg 5 :3 ex_rs1_addr [4:0] $end
$var reg 64 ;3 ex_rs1_data [63:0] $end
$var reg 5 <3 ex_rs2_addr [4:0] $end
$var reg 64 =3 ex_rs2_data [63:0] $end
$var reg 32 >3 id_instruction [31:0] $end
$var reg 64 ?3 id_pc [63:0] $end
$var reg 64 @3 mem_alu_result [63:0] $end
$var reg 1 e2 mem_mem_read $end
$var reg 1 d2 mem_mem_write $end
$var reg 5 A3 mem_rd_addr [4:0] $end
$var reg 1 k2 mem_reg_write $end
$var reg 64 B3 mem_write_data [63:0] $end
$var reg 64 C3 wb_alu_result [63:0] $end
$var reg 1 D3 wb_mem_read $end
$var reg 5 E3 wb_rd_addr [4:0] $end
$var reg 64 F3 wb_read_data [63:0] $end
$var reg 1 i2 wb_reg_write $end
$upscope $end
$scope module regfile $end
$var wire 1 ! clk $end
$var wire 5 G3 rd_addr [4:0] $end
$var wire 64 H3 rd_data [63:0] $end
$var wire 1 i2 reg_write $end
$var wire 5 I3 rs1_addr [4:0] $end
$var wire 5 J3 rs2_addr [4:0] $end
$var wire 1 # rst $end
$var reg 64 K3 rs1_data [63:0] $end
$var reg 64 L3 rs2_data [63:0] $end
$var integer 32 M3 i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 N3 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 O3 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx O3
bx N3
b100000 M3
bx L3
bx K3
bx J3
bx I3
bx H3
bx G3
bx F3
bx E3
xD3
bx C3
bx B3
bx A3
bx @3
bx ?3
bx >3
bx =3
bx <3
bx ;3
bx :3
x93
bx 83
x73
bx 63
bx 53
bx 43
x33
bx 23
bx 13
003
0/3
b0 .3
bx -3
b0 ,3
b10100000000000010010011 +3
bx *3
bx )3
bx (3
bx '3
bx &3
bx %3
0$3
0#3
bx "3
b0 !3
bx ~2
bx0 }2
bx |2
bx {2
bx z2
bx y2
b10100 x2
b10100000000000010010011 w2
b0 v2
xu2
bx t2
bx s2
bx r2
bx q2
bx p2
bx o2
bx n2
bx m2
bx l2
xk2
bx j2
xi2
b10000000000 h2
b0 g2
bx f2
xe2
xd2
bx c2
bx b2
bx a2
bx `2
bx _2
bx ^2
bx ]2
bx \2
x[2
bx Z2
bx Y2
bx X2
bx W2
bx V2
xU2
xT2
xS2
xR2
xQ2
xP2
xO2
xN2
xM2
xL2
xK2
xJ2
xI2
xH2
xG2
xF2
xE2
xD2
xC2
xB2
xA2
x@2
x?2
x>2
x=2
x<2
x;2
x:2
x92
x82
x72
x62
x52
x42
x32
x22
x12
x02
x/2
x.2
x-2
x,2
x+2
x*2
x)2
x(2
x'2
x&2
x%2
x$2
x#2
x"2
x!2
x~1
x}1
x|1
x{1
xz1
xy1
xx1
xw1
xv1
xu1
xt1
xs1
xr1
xq1
xp1
xo1
xn1
xm1
xl1
xk1
xj1
xi1
xh1
xg1
xf1
xe1
xd1
xc1
xb1
xa1
x`1
x_1
x^1
x]1
x\1
x[1
xZ1
xY1
xX1
xW1
xV1
xU1
xT1
xS1
xR1
xQ1
xP1
xO1
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
xF1
xE1
xD1
xC1
xB1
xA1
x@1
x?1
x>1
x=1
x<1
x;1
x:1
x91
x81
x71
x61
x51
x41
x31
x21
x11
x01
x/1
x.1
x-1
x,1
x+1
x*1
x)1
x(1
x'1
x&1
x%1
x$1
x#1
x"1
x!1
x~0
x}0
x|0
x{0
xz0
xy0
xx0
xw0
xv0
xu0
xt0
xs0
xr0
xq0
xp0
xo0
xn0
xm0
xl0
xk0
xj0
xi0
xh0
xg0
xf0
xe0
xd0
xc0
xb0
xa0
x`0
x_0
x^0
x]0
x\0
x[0
xZ0
xY0
xX0
xW0
xV0
xU0
xT0
xS0
xR0
xQ0
xP0
xO0
xN0
xM0
xL0
xK0
xJ0
xI0
xH0
xG0
xF0
xE0
xD0
xC0
xB0
xA0
x@0
x?0
x>0
x=0
x<0
x;0
x:0
x90
x80
x70
x60
x50
x40
x30
x20
x10
x00
x/0
x.0
x-0
x,0
x+0
x*0
x)0
x(0
x'0
x&0
x%0
x$0
x#0
x"0
x!0
x~/
x}/
x|/
x{/
xz/
xy/
xx/
xw/
xv/
xu/
xt/
xs/
xr/
xq/
xp/
xo/
xn/
xm/
xl/
xk/
xj/
xi/
xh/
xg/
xf/
xe/
xd/
xc/
xb/
xa/
x`/
x_/
x^/
x]/
x\/
x[/
xZ/
xY/
xX/
xW/
xV/
xU/
xT/
xS/
xR/
xQ/
xP/
xO/
xN/
xM/
xL/
xK/
xJ/
xI/
xH/
xG/
xF/
xE/
xD/
xC/
xB/
xA/
x@/
x?/
x>/
x=/
x</
x;/
x:/
x9/
x8/
x7/
x6/
x5/
x4/
x3/
x2/
x1/
x0/
x//
x./
x-/
x,/
x+/
x*/
x)/
x(/
x'/
x&/
x%/
x$/
x#/
x"/
x!/
x~.
x}.
x|.
x{.
xz.
xy.
xx.
xw.
xv.
xu.
xt.
xs.
xr.
xq.
xp.
xo.
xn.
xm.
xl.
xk.
xj.
xi.
xh.
xg.
xf.
xe.
xd.
xc.
xb.
xa.
x`.
x_.
x^.
x].
x\.
x[.
xZ.
xY.
xX.
xW.
xV.
xU.
xT.
xS.
xR.
xQ.
xP.
xO.
xN.
xM.
xL.
xK.
xJ.
xI.
xH.
xG.
xF.
xE.
xD.
xC.
xB.
xA.
x@.
x?.
x>.
x=.
x<.
x;.
x:.
x9.
x8.
x7.
x6.
x5.
x4.
x3.
x2.
x1.
x0.
x/.
x..
x-.
x,.
x+.
x*.
x).
x(.
x'.
x&.
x%.
x$.
x#.
x".
x!.
x~-
x}-
x|-
x{-
xz-
xy-
xx-
xw-
xv-
xu-
xt-
xs-
xr-
xq-
xp-
xo-
xn-
xm-
xl-
xk-
xj-
xi-
xh-
xg-
xf-
xe-
xd-
xc-
xb-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
xW-
xV-
xU-
xT-
xS-
xR-
xQ-
xP-
xO-
xN-
xM-
xL-
xK-
xJ-
xI-
xH-
xG-
xF-
xE-
xD-
xC-
xB-
xA-
x@-
x?-
x>-
x=-
x<-
x;-
x:-
x9-
x8-
x7-
x6-
x5-
x4-
x3-
x2-
x1-
x0-
x/-
1.-
x--
x,-
bx1 +-
bx *-
1)-
bx (-
bx '-
bx &-
bx %-
x$-
bx #-
bx "-
bx !-
bx ~,
bx },
bx |,
bx {,
bx z,
bx y,
bx x,
bx w,
bx v,
bx u,
bx t,
bx s,
xr,
xq,
xp,
xo,
xn,
xm,
xl,
xk,
xj,
xi,
xh,
xg,
xf,
xe,
xd,
xc,
xb,
xa,
x`,
x_,
x^,
x],
x\,
x[,
xZ,
xY,
xX,
xW,
xV,
xU,
xT,
xS,
xR,
xQ,
xP,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xC,
xB,
xA,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
x3,
x2,
x1,
x0,
x/,
x.,
x-,
x,,
x+,
x*,
x),
x(,
x',
x&,
x%,
x$,
x#,
x",
x!,
x~+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
xt+
xs+
xr+
xq+
xp+
xo+
xn+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
xa+
x`+
x_+
x^+
x]+
x\+
x[+
xZ+
xY+
xX+
xW+
xV+
xU+
xT+
xS+
xR+
xQ+
xP+
xO+
xN+
xM+
xL+
xK+
xJ+
xI+
xH+
xG+
xF+
xE+
xD+
xC+
xB+
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
x3+
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
x#+
x"+
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
xp*
xo*
xn*
xm*
xl*
xk*
xj*
xi*
xh*
xg*
xf*
xe*
xd*
xc*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
x)*
x(*
x'*
x&*
x%*
x$*
x#*
x"*
x!*
x~)
x})
x|)
x{)
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
xr)
xq)
xp)
xo)
xn)
xm)
xl)
xk)
xj)
xi)
xh)
xg)
xf)
xe)
xd)
xc)
xb)
xa)
x`)
x_)
x^)
x])
x\)
x[)
xZ)
xY)
xX)
xW)
xV)
xU)
xT)
xS)
xR)
xQ)
xP)
xO)
xN)
xM)
xL)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x@)
x?)
x>)
x=)
x<)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
x$)
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
xX(
xW(
xV(
xU(
xT(
xS(
xR(
xQ(
xP(
xO(
xN(
xM(
xL(
xK(
xJ(
xI(
xH(
xG(
xF(
xE(
xD(
xC(
xB(
xA(
x@(
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
1K'
xJ'
xI'
bx1 H'
bx G'
1F'
bx E'
bx D'
bx C'
bx B'
xA'
bx @'
bx ?'
bx >'
bx ='
bx <'
x;'
bx :'
bx 9'
b0 8'
b0x 7'
b0x 6'
bx 5'
b0 4'
x3'
x2'
x1'
x0'
x/'
bx .'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
0i
xh
xg
xf
xe
0d
xc
xb
bx a
bx0 `
x_
bx ^
0]
bx \
b0 [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
b0x S
b0x R
bx Q
bx P
bx O
bx N
bx M
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
b0 B
xA
bx @
b0 ?
bx >
bx =
x<
bx ;
bx :
bx 9
bx 8
x7
x6
bx 5
bx 4
bx 3
x2
x1
bx 0
x/
bx .
bx -
b10100000000000010010011 ,
b0 +
bx *
x)
x(
bx '
b0 &
bx %
b0 $
1#
x"
0!
$end
#5
b0 S
b0 7'
01'
02'
1$-
03'
1A'
1Q2
1n,
0R2
1U2
0o,
1r,
1P2
1m,
1I2
1f,
0J2
1M2
0g,
1j,
1H2
1e,
1A2
1^,
0B2
1E2
0_,
1b,
1@2
1],
192
1V,
0:2
1=2
0W,
1Z,
182
1U,
112
1N,
022
152
0O,
1R,
102
1M,
1)2
1F,
0*2
1-2
0G,
1J,
1(2
1E,
1!2
1>,
0"2
1%2
0?,
1B,
1~1
1=,
1w1
16,
0x1
1{1
07,
1:,
1v1
15,
1o1
1.,
0p1
1s1
0/,
12,
1n1
1-,
1g1
1&,
0h1
1k1
0',
1*,
1f1
1%,
1_1
1|+
0`1
1c1
0}+
1",
1^1
1{+
1W1
1t+
0X1
1[1
0u+
1x+
1V1
1s+
1O1
1l+
0P1
1S1
0m+
1p+
1N1
1k+
1G1
1d+
0H1
1K1
0e+
1h+
1F1
1c+
1?1
1\+
0@1
1C1
0]+
1`+
1>1
1[+
171
1T+
081
1;1
0U+
1X+
161
1S+
1/1
1L+
001
131
0M+
1P+
1.1
1K+
1'1
1D+
0(1
1+1
0E+
1H+
1&1
1C+
1}0
1<+
0~0
1#1
0=+
1@+
1|0
1;+
1u0
14+
0v0
1y0
05+
18+
1t0
13+
1m0
1,+
0n0
1q0
0-+
10+
1l0
1++
1e0
1$+
0f0
1i0
0%+
1(+
1d0
1#+
1]0
1z*
0^0
1a0
0{*
1~*
1\0
1y*
1U0
1r*
0V0
1Y0
0s*
1v*
1T0
1q*
1M0
1j*
0N0
1Q0
0k*
1n*
1L0
1i*
1E0
1b*
0F0
1I0
0c*
1f*
1D0
1a*
1=0
1Z*
0>0
1A0
0[*
1^*
1<0
1Y*
150
1R*
060
190
0S*
1V*
140
1Q*
1-0
1J*
0.0
110
0K*
1N*
1,0
1I*
1%0
1B*
0&0
1)0
0C*
1F*
1$0
1A*
1{/
1:*
0|/
1!0
0;*
1>*
1z/
19*
1s/
12*
0t/
1w/
03*
16*
1r/
11*
1k/
1**
0l/
1o/
0+*
1.*
1j/
1)*
1c/
1"*
0d/
1g/
0#*
1&*
1b/
1!*
1[/
1x)
0\/
1_/
0y)
1|)
1Z/
1w)
1S/
1p)
0T/
1W/
0q)
1t)
1R/
1o)
1K/
1h)
0L/
1O/
0i)
1l)
1J/
1g)
1C/
1`)
0D/
1G/
0a)
1d)
1B/
1_)
1;/
1X)
0</
1?/
0Y)
1\)
1:/
1W)
13/
1P)
04/
17/
0Q)
1T)
12/
1O)
1+/
1H)
0,/
1//
0I)
1L)
1*/
1G)
1#/
1@)
0$/
1'/
0A)
1D)
1"/
1?)
1y.
18)
0z.
1}.
09)
1<)
1x.
17)
1q.
10)
0r.
1u.
01)
14)
1p.
1/)
1i.
1()
0j.
1m.
0))
1,)
1h.
1')
1a.
1~(
0b.
1e.
0!)
1$)
1`.
1}(
1Y.
1v(
0Z.
1].
0w(
1z(
1X.
1u(
1Q.
1n(
0R.
1U.
0o(
1r(
1P.
1m(
1I.
1f(
0J.
1M.
0g(
1j(
1H.
1e(
1A.
1^(
0B.
1E.
0_(
1b(
1@.
1](
19.
1V(
0:.
1=.
0W(
1Z(
18.
1U(
11.
1N(
02.
15.
0O(
1R(
10.
1M(
1).
1F(
0*.
1-.
0G(
1J(
1(.
1E(
1!.
1>(
0".
1%.
0?(
1B(
1~-
1=(
1w-
16(
0x-
1{-
07(
1:(
1v-
15(
1o-
1.(
0p-
1s-
0/(
12(
1n-
1-(
1g-
1&(
0h-
1k-
0'(
1*(
1f-
1%(
1_-
1|'
0`-
1c-
0}'
1"(
1^-
1{'
1W-
1t'
0X-
1[-
0u'
1x'
1V-
1s'
1O-
1l'
0P-
1S-
0m'
1p'
1N-
1k'
1G-
1d'
0H-
1K-
0e'
1h'
1F-
1c'
1?-
1\'
0@-
1C-
0]'
1`'
1>-
1['
17-
1T'
08-
1;-
0U'
1X'
16-
1S'
b11111111111111111111111111111111111111111111111111111111111111111 +-
1/-
b11111111111111111111111111111111111111111111111111111111111111111 H'
1L'
0*'
0"'
0x&
0p&
0h&
0`&
0X&
0P&
0H&
0@&
08&
00&
0(&
0~%
0v%
0n%
0f%
0^%
0V%
0N%
0F%
0>%
06%
0.%
0&%
0|$
0t$
0l$
0d$
0\$
0T$
0L$
0D$
0<$
04$
0,$
0$$
0z#
0r#
0j#
0b#
0Z#
0R#
0J#
0B#
0:#
02#
0*#
0"#
0x"
0p"
0h"
0`"
0X"
0P"
0H"
0@"
08"
00"
0("
0~
0v
b0 O
b0 #-
b0 *-
00-
13-
b0 5'
b0 @'
b0 G'
0M'
1P'
0_
0('
0~&
0v&
0n&
0f&
0^&
0V&
0N&
0F&
0>&
06&
0.&
0&&
0|%
0t%
0l%
0d%
0\%
0T%
0L%
0D%
0<%
04%
0,%
0$%
0z$
0r$
0j$
0b$
0Z$
0R$
0J$
0B$
0:$
02$
0*$
0"$
0x#
0p#
0h#
0`#
0X#
0P#
0H#
0@#
08#
00#
0(#
0~"
0v"
0n"
0f"
0^"
0V"
0N"
0F"
0>"
06"
0."
0&"
0|
0t
b0 R
b0 6'
0;'
1S2
1K2
1C2
1;2
132
1+2
1#2
1y1
1q1
1i1
1a1
1Y1
1Q1
1I1
1A1
191
111
1)1
1!1
1w0
1o0
1g0
1_0
1W0
1O0
1G0
1?0
170
1/0
1'0
1}/
1u/
1m/
1e/
1]/
1U/
1M/
1E/
1=/
15/
1-/
1%/
1{.
1s.
1k.
1c.
1[.
1S.
1K.
1C.
1;.
13.
1+.
1#.
1y-
1q-
1i-
1a-
1Y-
1Q-
1I-
1A-
19-
11-
1p,
1h,
1`,
1X,
1P,
1H,
1@,
18,
10,
1(,
1~+
1v+
1n+
1f+
1^+
1V+
1N+
1F+
1>+
16+
1.+
1&+
1|*
1t*
1l*
1d*
1\*
1T*
1L*
1D*
1<*
14*
1,*
1$*
1z)
1r)
1j)
1b)
1Z)
1R)
1J)
1B)
1:)
12)
1*)
1")
1x(
1p(
1h(
1`(
1X(
1P(
1H(
1@(
18(
10(
1((
1~'
1v'
1n'
1f'
1^'
1V'
1N'
0)'
0!'
0w&
0o&
0g&
0_&
0W&
0O&
0G&
0?&
07&
0/&
0'&
0}%
0u%
0m%
0e%
0]%
0U%
0M%
0E%
0=%
05%
0-%
0%%
0{$
0s$
0k$
0c$
0[$
0S$
0K$
0C$
0;$
03$
0+$
0#$
0y#
0q#
0i#
0a#
0Y#
0Q#
0I#
0A#
09#
01#
0)#
0!#
0w"
0o"
0g"
0_"
0W"
0O"
0G"
0?"
07"
0/"
0'"
0}
0u
0m
b0 9'
1O2
1G2
1?2
172
1/2
1'2
1}1
1u1
1m1
1e1
1]1
1U1
1M1
1E1
1=1
151
1-1
1%1
1{0
1s0
1k0
1c0
1[0
1S0
1K0
1C0
1;0
130
1+0
1#0
1y/
1q/
1i/
1a/
1Y/
1Q/
1I/
1A/
19/
11/
1)/
1!/
1w.
1o.
1g.
1_.
1W.
1O.
1G.
1?.
17.
1/.
1'.
1}-
1u-
1m-
1e-
1]-
1U-
1M-
1E-
1=-
15-
1--
1l,
1d,
1\,
1T,
1L,
1D,
1<,
14,
1,,
1$,
1z+
1r+
1j+
1b+
1Z+
1R+
1J+
1B+
1:+
12+
1*+
1"+
1x*
1p*
1h*
1`*
1X*
1P*
1H*
1@*
18*
10*
1(*
1~)
1v)
1n)
1f)
1^)
1V)
1N)
1F)
1>)
16)
1.)
1&)
1|(
1t(
1l(
1d(
1\(
1T(
1L(
1D(
1<(
14(
1,(
1$(
1z'
1r'
1j'
1b'
1Z'
1R'
1J'
0-'
0%'
0{&
0s&
0k&
0c&
0[&
0S&
0K&
0C&
0;&
03&
0+&
0#&
0y%
0q%
0i%
0a%
0Y%
0Q%
0I%
0A%
09%
01%
0)%
0!%
0w$
0o$
0g$
0_$
0W$
0O$
0G$
0?$
07$
0/$
0'$
0}#
0u#
0m#
0e#
0]#
0U#
0M#
0E#
0=#
05#
0-#
0%#
0{"
0s"
0k"
0c"
0["
0S"
0K"
0C"
0;"
03"
0+"
0#"
0y
0n
0q
b0 Z
b0 ^
0f
0l
b1111111111111111111111111111111111111111111111111111111111111111 %-
b1111111111111111111111111111111111111111111111111111111111111111 (-
b0 N
b0 t,
b0 V
b0 u,
b1111111111111111111111111111111111111111111111111111111111111111 B'
b1111111111111111111111111111111111111111111111111111111111111111 E'
00'
b1111111111111111111111111111111111111111111111111111111111111111 ='
0+'
0#'
0y&
0q&
0i&
0a&
0Y&
0Q&
0I&
0A&
09&
01&
0)&
0!&
0w%
0o%
0g%
0_%
0W%
0O%
0G%
0?%
07%
0/%
0'%
0}$
0u$
0m$
0e$
0]$
0U$
0M$
0E$
0=$
05$
0-$
0%$
0{#
0s#
0k#
0c#
0[#
0S#
0K#
0C#
0;#
03#
0+#
0##
0y"
0q"
0i"
0a"
0Y"
0Q"
0I"
0A"
09"
01"
0)"
0!"
0w
0o
0g
b0 `
0e
b0 :'
0''
0}&
0u&
0m&
0e&
0]&
0U&
0M&
0E&
0=&
05&
0-&
0%&
0{%
0s%
0k%
0c%
0[%
0S%
0K%
0C%
0;%
03%
0+%
0#%
0y$
0q$
0i$
0a$
0Y$
0Q$
0I$
0A$
09$
01$
0)$
0!$
0w#
0o#
0g#
0_#
0W#
0O#
0G#
0?#
07#
0/#
0'#
0}"
0u"
0m"
0e"
0]"
0U"
0M"
0E"
0="
05"
0-"
0%"
0{
0s
0k
0c
0h
0p
0x
0""
0*"
02"
0:"
0B"
0J"
0R"
0Z"
0b"
0j"
0r"
0z"
0$#
0,#
04#
0<#
0D#
0L#
0T#
0\#
0d#
0l#
0t#
0|#
0&$
0.$
06$
0>$
0F$
0N$
0V$
0^$
0f$
0n$
0v$
0~$
0(%
00%
08%
0@%
0H%
0P%
0X%
0`%
0h%
0p%
0x%
0"&
0*&
02&
0:&
0B&
0J&
0R&
0Z&
0b&
0j&
0r&
0z&
0$'
0,'
b0 <'
0/'
0O'
0W'
0_'
0g'
0o'
0w'
0!(
0)(
01(
09(
0A(
0I(
0Q(
0Y(
0a(
0i(
0q(
0y(
0#)
0+)
03)
0;)
0C)
0K)
0S)
0[)
0c)
0k)
0s)
0{)
0%*
0-*
05*
0=*
0E*
0M*
0U*
0]*
0e*
0m*
0u*
0}*
0'+
0/+
07+
0?+
0G+
0O+
0W+
0_+
0g+
0o+
0w+
0!,
0),
01,
09,
0A,
0I,
0Q,
0Y,
0a,
0i,
0q,
b0 Y
b0 w,
02-
0:-
0B-
0J-
0R-
0Z-
0b-
0j-
0r-
0z-
0$.
0,.
04.
0<.
0D.
0L.
0T.
0\.
0d.
0l.
0t.
0|.
0&/
0./
06/
0>/
0F/
0N/
0V/
0^/
0f/
0n/
0v/
0~/
0(0
000
080
0@0
0H0
0P0
0X0
0`0
0h0
0p0
0x0
0"1
0*1
021
0:1
0B1
0J1
0R1
0Z1
0b1
0j1
0r1
0z1
0$2
0,2
042
0<2
0D2
0L2
0T2
b0 U
b0 a
b0 >'
b0 C'
b0 v,
b0 y,
b0 &-
0b
0j
0r
0z
0$"
0,"
04"
0<"
0D"
0L"
0T"
0\"
0d"
0l"
0t"
0|"
0&#
0.#
06#
0>#
0F#
0N#
0V#
0^#
0f#
0n#
0v#
0~#
0($
00$
08$
0@$
0H$
0P$
0X$
0`$
0h$
0p$
0x$
0"%
0*%
02%
0:%
0B%
0J%
0R%
0Z%
0b%
0j%
0r%
0z%
0$&
0,&
04&
0<&
0D&
0L&
0T&
0\&
0d&
0l&
0t&
0|&
0&'
0I'
0Q'
0Y'
0a'
0i'
0q'
0y'
0#(
0+(
03(
0;(
0C(
0K(
0S(
0[(
0c(
0k(
0s(
0{(
0%)
0-)
05)
0=)
0E)
0M)
0U)
0])
0e)
0m)
0u)
0})
0'*
0/*
07*
0?*
0G*
0O*
0W*
0_*
0g*
0o*
0w*
0!+
0)+
01+
09+
0A+
0I+
0Q+
0Y+
0a+
0i+
0q+
0y+
0#,
0+,
03,
0;,
0C,
0K,
0S,
0[,
0c,
0k,
b0 Q
b0 {,
b0 P
b0 |,
b0 T
b0 z,
b0 ~,
b0 !-
b0 },
0,-
04-
0<-
0D-
0L-
0T-
0\-
0d-
0l-
0t-
0|-
0&.
0..
06.
0>.
0F.
0N.
0V.
0^.
0f.
0n.
0v.
0~.
0(/
00/
08/
0@/
0H/
0P/
0X/
0`/
0h/
0p/
0x/
0"0
0*0
020
0:0
0B0
0J0
0R0
0Z0
0b0
0j0
0r0
0z0
0$1
0,1
041
0<1
0D1
0L1
0T1
0\1
0d1
0l1
0t1
0|1
0&2
0.2
062
0>2
0F2
0N2
1[2
b0 -
b0 V2
b0 13
b0 L3
b0 .
b0 W2
b0 23
b0 K3
07
b0 5
b0 b2
b0 y2
b0 8
b0 a2
b0 &3
b0 9
b0 Z2
b0 `2
b0 %3
06
0/
01
02
b0 @
b0 \2
b100 *
b0 ?
b0 [
b0 !3
b0 =
b0 "3
b0 >
b0 M
b0 \
b0 .'
b0 ?'
b0 D'
b0 s,
b0 x,
b0 "-
b0 '-
b0 }2
b0 z2
b0 |2
b0 J3
b0 I3
b0 ^2
b0 ]2
b0 _2
b0 r2
b0 q2
b0 (3
b0 *3
b0 )3
b0 4
b0 Y2
b0 ~2
b0 '3
0A
0H
0G
0I
0J
0F
0D
0E
0L
0K
1C
0<
0)
0(
b0 :
b0 p2
b0 ;
b0 o2
b0 '
b0 H3
b0 3
b0 {2
b0 >3
b0 0
b0 X2
b0 ?3
033
093
073
0u2
b0 W
b0 53
b0 X
b0 43
b0 t2
b0 83
b0 m2
b0 <3
b0 n2
b0 :3
b0 63
b0 =3
b0 ;3
0k2
0d2
0e2
b0 l2
b0 s2
b0 A3
b0 c2
b0 B3
b0 f2
b0 -3
b0 @3
0D3
0i2
b0 j2
b0 E3
b0 G3
b0 C3
b0 F3
b100000 M3
1!
#10
0"
0!
#15
b100000 M3
1!
#20
b0 %
b1 $
0!
0#
#25
17
1/
b101 @
b101 \2
b100000000000 }2
b1 z2
b101 |2
b101 J3
b10011 _2
b101 r2
b1 (3
b101 *3
b101 4
b101 Y2
b101 ~2
b101 '3
b1000 *
b100000000000000100010011 ,
b100000000000000100010011 w2
b100000000000000100010011 +3
b10100000000000010010011 3
b10100000000000010010011 {2
b10100000000000010010011 >3
b100 &
b100 v2
b100 ,3
b100 B
1!
#30
b10100000000000010010011 %
b10 $
0!
#35
b1 S
b1 7'
11'
12'
0$-
13'
0A'
0Q2
0n,
1R2
0U2
1o,
0r,
0P2
0m,
0I2
0f,
1J2
0M2
1g,
0j,
0H2
0e,
0A2
0^,
1B2
0E2
1_,
0b,
0@2
0],
092
0V,
1:2
0=2
1W,
0Z,
082
0U,
012
0N,
122
052
1O,
0R,
002
0M,
0)2
0F,
1*2
0-2
1G,
0J,
0(2
0E,
0!2
0>,
1"2
0%2
1?,
0B,
0~1
0=,
0w1
06,
1x1
0{1
17,
0:,
0v1
05,
0o1
0.,
1p1
0s1
1/,
02,
0n1
0-,
0g1
0&,
1h1
0k1
1',
0*,
0f1
0%,
0_1
0|+
1`1
0c1
1}+
0",
0^1
0{+
0W1
0t+
1X1
0[1
1u+
0x+
0V1
0s+
0O1
0l+
1P1
0S1
1m+
0p+
0N1
0k+
0G1
0d+
1H1
0K1
1e+
0h+
0F1
0c+
0?1
0\+
1@1
0C1
1]+
0`+
0>1
0[+
071
0T+
181
0;1
1U+
0X+
061
0S+
0/1
0L+
101
031
1M+
0P+
0.1
0K+
0'1
0D+
1(1
0+1
1E+
0H+
0&1
0C+
0}0
0<+
1~0
0#1
1=+
0@+
0|0
0;+
0u0
04+
1v0
0y0
15+
08+
0t0
03+
0m0
0,+
1n0
0q0
1-+
00+
0l0
0++
0e0
0$+
1f0
0i0
1%+
0(+
0d0
0#+
0]0
0z*
1^0
0a0
1{*
0~*
0\0
0y*
0U0
0r*
1V0
0Y0
1s*
0v*
0T0
0q*
0M0
0j*
1N0
0Q0
1k*
0n*
0L0
0i*
0E0
0b*
1F0
0I0
1c*
0f*
0D0
0a*
0=0
0Z*
1>0
0A0
1[*
0^*
0<0
0Y*
050
0R*
160
090
1S*
0V*
040
0Q*
0-0
0J*
1.0
010
1K*
0N*
0,0
0I*
0%0
0B*
1&0
0)0
1C*
0F*
0$0
0A*
0{/
0:*
1|/
0!0
1;*
0>*
0z/
09*
0s/
02*
1t/
0w/
13*
06*
0r/
01*
0k/
0**
1l/
0o/
1+*
0.*
0j/
0)*
0c/
0"*
1d/
0g/
1#*
0&*
0b/
0!*
0[/
0x)
1\/
0_/
1y)
0|)
0Z/
0w)
0S/
0p)
1T/
0W/
1q)
0t)
0R/
0o)
0K/
0h)
1L/
0O/
1i)
0l)
0J/
0g)
0C/
0`)
1D/
0G/
1a)
0d)
0B/
0_)
0;/
0X)
1</
0?/
1Y)
0\)
0:/
0W)
03/
0P)
14/
07/
1Q)
0T)
02/
0O)
0+/
0H)
1,/
0//
1I)
0L)
0*/
0G)
0#/
0@)
1$/
0'/
1A)
0D)
0"/
0?)
0y.
08)
1z.
0}.
19)
0<)
0x.
07)
0q.
00)
1r.
0u.
11)
04)
0p.
0/)
0i.
0()
1j.
0m.
1))
0,)
0h.
0')
0a.
0~(
1b.
0e.
1!)
0$)
0`.
0}(
0Y.
0v(
1Z.
0].
1w(
0z(
0X.
0u(
0Q.
0n(
1R.
0U.
1o(
0r(
0P.
0m(
0I.
0f(
1J.
0M.
1g(
0j(
0H.
0e(
0A.
0^(
1B.
0E.
1_(
0b(
0@.
0](
09.
0V(
1:.
0=.
1W(
0Z(
08.
0U(
01.
0N(
12.
05.
1O(
0R(
00.
0M(
0).
0F(
1*.
0-.
1G(
0J(
0(.
0E(
0!.
0>(
1".
0%.
1?(
0B(
0~-
0=(
0w-
06(
1x-
0{-
17(
0:(
0v-
05(
0o-
0.(
1p-
0s-
1/(
02(
0n-
0-(
0g-
0&(
1h-
0k-
1'(
0*(
0f-
0%(
0_-
0|'
1`-
0c-
1}'
0"(
0^-
0{'
0W-
0t'
1X-
0[-
1u'
0x'
0V-
0s'
0O-
0l'
1P-
0S-
1m'
0p'
0N-
0>-
0k'
0['
0G-
07-
0d'
0T'
1H-
0K-
18-
0;-
1e'
0h'
1U'
0X'
0F-
06-
0c'
0S'
0?-
b1 +-
0/-
0\'
b1 H'
0L'
0@-
0C-
b1111111111111111111111111111111111111111111111111111111111111011 O
b1111111111111111111111111111111111111111111111111111111111111011 #-
b1111111111111111111111111111111111111111111111111111111111111011 *-
10-
03-
0]'
0`'
b1111111111111111111111111111111111111111111111111111111111111011 5'
b1111111111111111111111111111111111111111111111111111111111111011 @'
b1111111111111111111111111111111111111111111111111111111111111011 G'
1M'
0P'
b1 R
b1 6'
1;'
0A-
01-
0^'
0N'
b101 9'
0=-
0--
b101 ?
b101 [
b101 !3
0Z'
0J'
1v
b101 Z
b101 ^
1f
b1111111111111111111111111111111111111111111111111111111111111010 %-
b1111111111111111111111111111111111111111111111111111111111111010 (-
b101 N
b101 t,
b101 V
b101 u,
b1111111111111111111111111111111111111111111111111111111111111010 B'
b1111111111111111111111111111111111111111111111111111111111111010 E'
b101 :'
b1111111111111111111111111111111111111111111111111111111111111010 ='
1w
1g
1s
1c
b101 U
b101 a
b101 >'
b101 C'
b101 v,
b101 y,
b101 &-
b10 }2
b10 z2
b1000 |2
b1000 J3
b1000 r2
b10 (3
b1000 *3
b1000 4
b1000 Y2
b1000 ~2
b1000 '3
b1100 @
b1100 \2
b1100 *
b11000000000000110010011 ,
b11000000000000110010011 w2
b11000000000000110010011 +3
133
193
b1 t2
b1 83
b101 m2
b101 <3
b101 63
b100000000000000100010011 3
b100000000000000100010011 {2
b100000000000000100010011 >3
b100 0
b100 X2
b100 ?3
b1000 &
b1000 v2
b1000 ,3
b1000 B
1!
#40
b100000000000000100010011 %
b11 $
0!
#45
1F-
1c'
1?-
1\'
1C-
1`'
1>-
1['
17-
1T'
08-
1;-
0U'
1X'
16-
1S'
b1111 +-
1/-
b1111 H'
1L'
1H-
0@-
b1111111111111111111111111111111111111111111111111111111111111000 O
b1111111111111111111111111111111111111111111111111111111111111000 #-
b1111111111111111111111111111111111111111111111111111111111111000 *-
00-
13-
1e'
0]'
b1111111111111111111111111111111111111111111111111111111111111000 5'
b1111111111111111111111111111111111111111111111111111111111111000 @'
b1111111111111111111111111111111111111111111111111111111111111000 G'
0M'
1P'
b0 R
b0 6'
0;'
0I-
1A-
11-
0f'
1^'
1N'
b1000 9'
0E-
1=-
1--
b1000 ?
b1000 [
b1000 !3
0b'
1Z'
1J'
1~
0v
b1000 Z
b1000 ^
0f
b1111111111111111111111111111111111111111111111111111111111110111 %-
b1111111111111111111111111111111111111111111111111111111111110111 (-
b1000 N
b1000 t,
b1000 V
b1000 u,
b1111111111111111111111111111111111111111111111111111111111110111 B'
b1111111111111111111111111111111111111111111111111111111111110111 E'
b1000 :'
b1111111111111111111111111111111111111111111111111111111111110111 ='
1!"
0w
0g
1{
0s
0c
b100000000010 }2
b11 z2
b110 |2
b110 J3
b110 r2
b11 (3
b110 *3
b110 4
b110 Y2
b110 ~2
b110 '3
b1110 @
b1110 \2
b1000 U
b1000 a
b1000 >'
b1000 C'
b1000 v,
b1000 y,
b1000 &-
b10000 *
b100000000000010100010011 ,
b100000000000010100010011 w2
b100000000000010100010011 +3
b11000000000000110010011 3
b11000000000000110010011 {2
b11000000000000110010011 >3
b1000 0
b1000 X2
b1000 ?3
b10 t2
b10 83
b1000 m2
b1000 <3
b1000 63
1k2
b1 l2
b1 s2
b1 A3
b101 f2
b101 -3
b101 @3
b1100 &
b1100 v2
b1100 ,3
b1100 B
1!
#50
b11000000000000110010011 %
b100 $
0!
#55
b1 S
b1 7'
11'
12'
0$-
13'
0A'
0Q2
0n,
1R2
0U2
1o,
0r,
0P2
0m,
0I2
0f,
1J2
0M2
1g,
0j,
0H2
0e,
0A2
0^,
1B2
0E2
1_,
0b,
0@2
0],
092
0V,
1:2
0=2
1W,
0Z,
082
0U,
012
0N,
122
052
1O,
0R,
002
0M,
0)2
0F,
1*2
0-2
1G,
0J,
0(2
0E,
0!2
0>,
1"2
0%2
1?,
0B,
0~1
0=,
0w1
06,
1x1
0{1
17,
0:,
0v1
05,
0o1
0.,
1p1
0s1
1/,
02,
0n1
0-,
0g1
0&,
1h1
0k1
1',
0*,
0f1
0%,
0_1
0|+
1`1
0c1
1}+
0",
0^1
0{+
0W1
0t+
1X1
0[1
1u+
0x+
0V1
0s+
0O1
0l+
1P1
0S1
1m+
0p+
0N1
0k+
0G1
0d+
1H1
0K1
1e+
0h+
0F1
0c+
0?1
0\+
1@1
0C1
1]+
0`+
0>1
0[+
071
0T+
181
0;1
1U+
0X+
061
0S+
0/1
0L+
101
031
1M+
0P+
0.1
0K+
0'1
0D+
1(1
0+1
1E+
0H+
0&1
0C+
0}0
0<+
1~0
0#1
1=+
0@+
0|0
0;+
0u0
04+
1v0
0y0
15+
08+
0t0
03+
0m0
0,+
1n0
0q0
1-+
00+
0l0
0++
0e0
0$+
1f0
0i0
1%+
0(+
0d0
0#+
0]0
0z*
1^0
0a0
1{*
0~*
0\0
0y*
0U0
0r*
1V0
0Y0
1s*
0v*
0T0
0q*
0M0
0j*
1N0
0Q0
1k*
0n*
0L0
0i*
0E0
0b*
1F0
0I0
1c*
0f*
0D0
0a*
0=0
0Z*
1>0
0A0
1[*
0^*
0<0
0Y*
050
0R*
160
090
1S*
0V*
040
0Q*
0-0
0J*
1.0
010
1K*
0N*
0,0
0I*
0%0
0B*
1&0
0)0
1C*
0F*
0$0
0A*
0{/
0:*
1|/
0!0
1;*
0>*
0z/
09*
0s/
02*
1t/
0w/
13*
06*
0r/
01*
0k/
0**
1l/
0o/
1+*
0.*
0j/
0)*
0c/
0"*
1d/
0g/
1#*
0&*
0b/
0!*
0[/
0x)
1\/
0_/
1y)
0|)
0Z/
0w)
0S/
0p)
1T/
0W/
1q)
0t)
0R/
0o)
0K/
0h)
1L/
0O/
1i)
0l)
0J/
0g)
0C/
0`)
1D/
0G/
1a)
0d)
0B/
0_)
0;/
0X)
1</
0?/
1Y)
0\)
0:/
0W)
03/
0P)
14/
07/
1Q)
0T)
02/
0O)
0+/
0H)
1,/
0//
1I)
0L)
0*/
0G)
0#/
0@)
1$/
0'/
1A)
0D)
0"/
0?)
0y.
08)
1z.
0}.
19)
0<)
0x.
07)
0q.
00)
1r.
0u.
11)
04)
0p.
0/)
0i.
0()
1j.
0m.
1))
0,)
0h.
0')
0a.
0~(
1b.
0e.
1!)
0$)
0`.
0}(
0Y.
0v(
1Z.
0].
1w(
0z(
0X.
0u(
0Q.
0n(
1R.
0U.
1o(
0r(
0P.
0m(
0I.
0f(
1J.
0M.
1g(
0j(
0H.
0e(
0A.
0^(
1B.
0E.
1_(
0b(
0@.
0](
09.
0V(
1:.
0=.
1W(
0Z(
08.
0U(
01.
0N(
12.
05.
1O(
0R(
00.
0M(
0).
0F(
1*.
0-.
1G(
0J(
0(.
0E(
0!.
0>(
1".
0%.
1?(
0B(
0~-
0=(
0w-
06(
1x-
0{-
17(
0:(
0v-
05(
0o-
0.(
1p-
0s-
1/(
02(
0n-
0-(
0g-
0&(
1h-
0k-
1'(
0*(
0f-
0%(
0_-
0|'
1`-
0c-
1}'
0"(
0^-
0{'
0W-
0t'
1X-
0[-
1u'
0x'
0V-
0s'
0O-
0l'
1P-
0S-
1m'
0p'
0N-
0F-
0>-
0k'
0c'
0['
0G-
0?-
b11 +-
07-
0d'
0\'
b11 H'
0T'
1H-
0K-
0@-
0C-
b1111111111111111111111111111111111111111111111111111111111111010 O
b1111111111111111111111111111111111111111111111111111111111111010 #-
b1111111111111111111111111111111111111111111111111111111111111010 *-
18-
0;-
1e'
0h'
0]'
0`'
b1111111111111111111111111111111111111111111111111111111111111010 5'
b1111111111111111111111111111111111111111111111111111111111111010 @'
b1111111111111111111111111111111111111111111111111111111111111010 G'
1U'
0X'
1I-
0A-
09-
1f'
0^'
0V'
b110 9'
1E-
0=-
05-
b110 ?
b110 [
b110 !3
1b'
0Z'
0R'
0~
1v
b110 Z
b110 ^
1n
b1111111111111111111111111111111111111111111111111111111111111001 %-
b1111111111111111111111111111111111111111111111111111111111111001 (-
b110 N
b110 t,
b110 V
b110 u,
b1111111111111111111111111111111111111111111111111111111111111001 B'
b1111111111111111111111111111111111111111111111111111111111111001 E'
b110 :'
b1111111111111111111111111111111111111111111111111111111111111001 ='
0!"
1w
1o
0{
1s
1k
b101 '
b101 H3
b110 U
b110 a
b110 >'
b110 C'
b110 v,
b110 y,
b110 &-
b1010 }2
b1010 z2
b1000 |2
b1000 J3
b1000 r2
b1010 (3
b1000 *3
b1000 4
b1000 Y2
b1000 ~2
b1000 '3
b10100 @
b10100 \2
b10100 *
b1110010011 ,
b1110010011 w2
b1110010011 +3
1i2
b1 j2
b1 E3
b1 G3
b101 C3
b10 l2
b10 s2
b10 A3
b1000 f2
b1000 -3
b1000 @3
b11 t2
b11 83
b110 m2
b110 <3
b110 63
b100000000000010100010011 3
b100000000000010100010011 {2
b100000000000010100010011 >3
b1100 0
b1100 X2
b1100 ?3
b10000 &
b10000 v2
b10000 ,3
b10000 B
1!
#60
b100000000000010100010011 %
b101 $
0!
#65
1F-
1c'
1?-
1\'
1C-
1`'
1>-
1['
b1111 +-
17-
b1111 H'
1T'
1H-
0@-
b1111111111111111111111111111111111111111111111111111111111111000 O
b1111111111111111111111111111111111111111111111111111111111111000 #-
b1111111111111111111111111111111111111111111111111111111111111000 *-
08-
1;-
1e'
0]'
b1111111111111111111111111111111111111111111111111111111111111000 5'
b1111111111111111111111111111111111111111111111111111111111111000 @'
b1111111111111111111111111111111111111111111111111111111111111000 G'
0U'
1X'
0I-
1A-
19-
0f'
1^'
1V'
b1000 9'
0E-
1=-
15-
b1000 ?
b1000 [
b1000 !3
0b'
1Z'
1R'
1~
0v
b1000 Z
b1000 ^
0n
b1111111111111111111111111111111111111111111111111111111111110111 %-
b1111111111111111111111111111111111111111111111111111111111110111 (-
b1000 N
b1000 t,
b1000 V
b1000 u,
b1111111111111111111111111111111111111111111111111111111111110111 B'
b1111111111111111111111111111111111111111111111111111111111110111 E'
b1000 :'
b1111111111111111111111111111111111111111111111111111111111110111 ='
1!"
0w
0o
1{
0s
0k
b100000000110 }2
b111 z2
b0 |2
b0 J3
b0 r2
b111 (3
b0 *3
b0 4
b0 Y2
b0 ~2
b0 '3
b10000 @
b10000 \2
b1000 U
b1000 a
b1000 >'
b1000 C'
b1000 v,
b1000 y,
b1000 &-
b1000 '
b1000 H3
b11000 *
b1100010000001000110011 ,
b1100010000001000110011 w2
b1100010000001000110011 +3
b1110010011 3
b1110010011 {2
b1110010011 >3
b10000 0
b10000 X2
b10000 ?3
b1010 t2
b1010 83
b1000 m2
b1000 <3
b1000 63
b11 l2
b11 s2
b11 A3
b110 f2
b110 -3
b110 @3
b10 j2
b10 E3
b10 G3
b1000 C3
b10100 &
b10100 v2
b10100 ,3
b10100 B
1!
#70
b1110010011 %
b110 $
0!
#75
b0 S
b0 7'
01'
02'
1$-
03'
1A'
1Q2
1n,
0R2
1U2
0o,
1r,
1P2
1m,
1I2
1f,
0J2
1M2
0g,
1j,
1H2
1e,
1A2
1^,
0B2
1E2
0_,
1b,
1@2
1],
192
1V,
0:2
1=2
0W,
1Z,
182
1U,
112
1N,
022
152
0O,
1R,
102
1M,
1)2
1F,
0*2
1-2
0G,
1J,
1(2
1E,
1!2
1>,
0"2
1%2
0?,
1B,
1~1
1=,
1w1
16,
0x1
1{1
07,
1:,
1v1
15,
1o1
1.,
0p1
1s1
0/,
12,
1n1
1-,
1g1
1&,
0h1
1k1
0',
1*,
1f1
1%,
1_1
1|+
0`1
1c1
0}+
1",
1^1
1{+
1W1
1t+
0X1
1[1
0u+
1x+
1V1
1s+
1O1
1l+
0P1
1S1
0m+
1p+
1N1
1k+
1G1
1d+
0H1
1K1
0e+
1h+
1F1
1c+
1?1
1\+
0@1
1C1
0]+
1`+
1>1
1[+
171
1T+
081
1;1
0U+
1X+
161
1S+
1/1
1L+
001
131
0M+
1P+
1.1
1K+
1'1
1D+
0(1
1+1
0E+
1H+
1&1
1C+
1}0
1<+
0~0
1#1
0=+
1@+
1|0
1;+
1u0
14+
0v0
1y0
05+
18+
1t0
13+
1m0
1,+
0n0
1q0
0-+
10+
1l0
1++
1e0
1$+
0f0
1i0
0%+
1(+
1d0
1#+
1]0
1z*
0^0
1a0
0{*
1~*
1\0
1y*
1U0
1r*
0V0
1Y0
0s*
1v*
1T0
1q*
1M0
1j*
0N0
1Q0
0k*
1n*
1L0
1i*
1E0
1b*
0F0
1I0
0c*
1f*
1D0
1a*
1=0
1Z*
0>0
1A0
0[*
1^*
1<0
1Y*
150
1R*
060
190
0S*
1V*
140
1Q*
1-0
1J*
0.0
110
0K*
1N*
1,0
1I*
1%0
1B*
0&0
1)0
0C*
1F*
1$0
1A*
1{/
1:*
0|/
1!0
0;*
1>*
1z/
19*
1s/
12*
0t/
1w/
03*
16*
1r/
11*
1k/
1**
0l/
1o/
0+*
1.*
1j/
1)*
1c/
1"*
0d/
1g/
0#*
1&*
1b/
1!*
1[/
1x)
0\/
1_/
0y)
1|)
1Z/
1w)
1S/
1p)
0T/
1W/
0q)
1t)
1R/
1o)
1K/
1h)
0L/
1O/
0i)
1l)
1J/
1g)
1C/
1`)
0D/
1G/
0a)
1d)
1B/
1_)
1;/
1X)
0</
1?/
0Y)
1\)
1:/
1W)
13/
1P)
04/
17/
0Q)
1T)
12/
1O)
1+/
1H)
0,/
1//
0I)
1L)
1*/
1G)
1#/
1@)
0$/
1'/
0A)
1D)
1"/
1?)
1y.
18)
0z.
1}.
09)
1<)
1x.
17)
1q.
10)
0r.
1u.
01)
14)
1p.
1/)
1i.
1()
0j.
1m.
0))
1,)
1h.
1')
1a.
1~(
0b.
1e.
0!)
1$)
1`.
1}(
1Y.
1v(
0Z.
1].
0w(
1z(
1X.
1u(
1Q.
1n(
0R.
1U.
0o(
1r(
1P.
1m(
1I.
1f(
0J.
1M.
0g(
1j(
1H.
1e(
1A.
1^(
0B.
1E.
0_(
1b(
1@.
1](
19.
1V(
0:.
1=.
0W(
1Z(
18.
1U(
11.
1N(
02.
15.
0O(
1R(
10.
1M(
1).
1F(
0*.
1-.
0G(
1J(
1(.
1E(
1!.
1>(
0".
1%.
0?(
1B(
1~-
1=(
1w-
16(
0x-
1{-
07(
1:(
1v-
15(
1o-
1.(
0p-
1s-
0/(
12(
1n-
1-(
1g-
1&(
0h-
1k-
0'(
1*(
1f-
1%(
1_-
1|'
0`-
1c-
0}'
1"(
1^-
1{'
1W-
1t'
0X-
1[-
0u'
1x'
1V-
1s'
1O-
1l'
0P-
1S-
0m'
1p'
1N-
1k'
b11111111111111111111111111111111111111111111111111111111111111111 +-
1G-
b11111111111111111111111111111111111111111111111111111111111111111 H'
1d'
b0 O
b0 #-
b0 *-
0H-
1K-
b0 5'
b0 @'
b0 G'
0e'
1h'
1I-
1f'
b0 9'
1E-
b0 ?
b0 [
b0 !3
1b'
b0 Z
b0 ^
0~
b1111111111111111111111111111111111111111111111111111111111111111 %-
b1111111111111111111111111111111111111111111111111111111111111111 (-
b0 N
b0 t,
b0 V
b0 u,
b1111111111111111111111111111111111111111111111111111111111111111 B'
b1111111111111111111111111111111111111111111111111111111111111111 E'
b0 :'
b1111111111111111111111111111111111111111111111111111111111111111 ='
0!"
0{
07
1/
0[2
b1000 .
b1000 W2
b1000 23
b1000 K3
b110 '
b110 H3
b0 U
b0 a
b0 >'
b0 C'
b0 v,
b0 y,
b0 &-
b100 }2
b100 z2
b11 |2
b11 J3
b10 I3
b110011 _2
b11 r2
b10 q2
b100 (3
b11 *3
b10 )3
b11 4
b11 Y2
b11 ~2
b11 '3
b10111 @
b10111 \2
b11100 *
b1000000000100011000001010110011 ,
b1000000000100011000001010110011 w2
b1000000000100011000001010110011 +3
b11 j2
b11 E3
b11 G3
b110 C3
b1010 l2
b1010 s2
b1010 A3
b1000 f2
b1000 -3
b1000 @3
b111 t2
b111 83
b0 m2
b0 <3
b0 63
b1100010000001000110011 3
b1100010000001000110011 {2
b1100010000001000110011 >3
b10100 0
b10100 X2
b10100 ?3
b11000 &
b11000 v2
b11000 ,3
b11000 B
1!
#80
b1100010000001000110011 %
b111 $
0!
#85
b1000 ?
b1000 [
b1000 !3
b1000 Z
b1000 ^
1~
b1000 5'
b1000 @'
b1000 G'
1e'
0h'
b1000 O
b1000 #-
b1000 *-
1H-
0K-
1!"
b1111111111111111111111111111111111111111111111111111111111110111 ='
b1000 <'
0f'
1g'
b1000 V
b1000 u,
b1000 N
b1000 t,
0I-
1J-
1z
1a'
b1000 Q
b1000 {,
b1000 P
b1000 |,
b1000 T
b1000 z,
b1000 ~,
b1000 !-
b1000 },
1D-
0[2
b110 .
b110 W2
b110 23
b110 K3
b100000 8
b100000 a2
b100000 &3
1/
b1000 >
b1000 M
b1000 \
b1000 .'
b1000 ?'
b1000 D'
b1000 s,
b1000 x,
b1000 "-
b1000 '-
b110000000100 }2
b10000000101 z2
b10000000001 |2
b1 J3
b11 I3
b100000 ^2
b1 r2
b11 q2
b101 (3
b1 *3
b11 )3
b10000000001 4
b10000000001 Y2
b10000000001 ~2
b10000000001 '3
b10000011001 @
b10000011001 \2
b1000 '
b1000 H3
b101 -
b101 V2
b101 13
b101 L3
b100000 *
b1100001110010010110011 ,
b1100001110010010110011 w2
b1100001110010010110011 +3
b1000000000100011000001010110011 3
b1000000000100011000001010110011 {2
b1000000000100011000001010110011 >3
b11000 0
b11000 X2
b11000 ?3
033
b100 t2
b100 83
b11 m2
b11 <3
b10 n2
b10 :3
b11 63
b1000 ;3
b111 l2
b111 s2
b111 A3
b0 f2
b0 -3
b0 @3
b1010 j2
b1010 E3
b1010 G3
b1000 C3
b11100 &
b11100 v2
b11100 ,3
b11100 B
1!
#90
b1000000000100011000001010110011 %
b1000 $
0!
#95
b0 S
b0 7'
01'
02'
03'
1A'
1$-
1n,
1Q2
0o,
1r,
0R2
1U2
1m,
1P2
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
0}'
1"(
0`-
1c-
1{'
1^-
1t'
1W-
06-
0S'
0u'
1x'
0X-
1[-
1F-
0/-
1c'
0L'
1s'
1V-
1?-
10-
03-
1\'
1M'
0P'
b1 R
b1 6'
1;'
1l'
1O-
01-
0N'
b1 9'
1|
0m'
1p'
0P-
1S-
0=-
0--
0Z'
0J'
b1000 `
1u
1f
1k'
1N-
b1111111111111111111111111111111111111111111111111111111111111010 %-
b1111111111111111111111111111111111111111111111111111111111111010 (-
b100 Y
b100 w,
b1111111111111111111111111111111111111111111111111111111111111010 B'
b1111111111111111111111111111111111111111111111111111111111111010 E'
b1 :'
1x
1g
1n
0v
b1011 Z
b1011 ^
1~
0U'
0X'
0]'
1`'
b1 5'
b1 @'
b1 G'
0e'
1h'
b11111111111111111111111111111111111111111111111111111111111111101 H'
1d'
b1 ?
b1 [
b1 !3
08-
0;-
0@-
1C-
b1 O
b1 #-
b1 *-
0H-
1K-
b11111111111111111111111111111111111111111111111111111111111111101 +-
1G-
1s
1c
1o
0w
0!"
b1111111111111111111111111111111111111111111111111111111111111100 ='
b10 <'
0V'
1W'
1^'
0_'
1f'
0g'
b111 V
b111 u,
b11 N
b11 t,
09-
1:-
1A-
0B-
1I-
0J-
b101 U
b101 a
b101 >'
b101 C'
b101 v,
b101 y,
b101 &-
1j
1r
0z
1Q'
1Y'
0a'
b0 Q
b0 {,
b0 P
b0 |,
b11000000 T
b11000000 z,
b0 ~,
b0 !-
b11000000 },
14-
1<-
0D-
b101 =
b101 "3
b110 >
b110 M
b110 \
b110 .'
b110 ?'
b110 D'
b110 s,
b110 x,
b110 "-
b110 '-
b0 8
b0 a2
b0 &3
b110 9
b110 Z2
b110 `2
b110 %3
1/
b110 -
b110 V2
b110 13
b110 L3
0[2
b101 .
b101 W2
b101 23
b101 K3
b0 '
b0 H3
1K
0C
b100000001000 }2
b1001 z2
b11 |2
b11 J3
b1 I3
b0 ^2
b110 ]2
b11 r2
b1 q2
b1001 (3
b11 *3
b1 )3
b11 4
b11 Y2
b11 ~2
b11 '3
b11111 @
b11111 \2
b100100 *
b1100001111010000110011 ,
b1100001111010000110011 w2
b1100001111010000110011 +3
b111 j2
b111 E3
b111 G3
b0 C3
b100 l2
b100 s2
b100 A3
b1000 f2
b1000 -3
b1000 @3
b100000 W
b100000 53
b101 t2
b101 83
b1 m2
b1 <3
b11 n2
b11 :3
b10000000001 63
b101 =3
b110 ;3
b1100001110010010110011 3
b1100001110010010110011 {2
b1100001110010010110011 >3
b11100 0
b11100 X2
b11100 ?3
b100000 &
b100000 v2
b100000 ,3
b100000 B
1!
#100
b1100001110010010110011 %
b1001 $
0!
#105
b1 S
b1 7'
11'
12'
13'
0A'
0$-
0n,
0Q2
1o,
0r,
1R2
0U2
0m,
0P2
0f,
0I2
1g,
0j,
1J2
0M2
0e,
0H2
0^,
0A2
1_,
0b,
1B2
0E2
0],
0@2
0V,
092
1W,
0Z,
1:2
0=2
0U,
082
0N,
012
1O,
0R,
122
052
0M,
002
0F,
0)2
1G,
0J,
1*2
0-2
0E,
0(2
0>,
0!2
1?,
0B,
1"2
0%2
0=,
0~1
06,
0w1
17,
0:,
1x1
0{1
05,
0v1
0.,
0o1
1/,
02,
1p1
0s1
0-,
0n1
0&,
0g1
1',
0*,
1h1
0k1
0%,
0f1
0|+
0_1
1}+
0",
1`1
0c1
0{+
0^1
0t+
0W1
1u+
0x+
1X1
0[1
0s+
0V1
0l+
0O1
1m+
0p+
1P1
0S1
0k+
0N1
0d+
0G1
1e+
0h+
1H1
0K1
0c+
0F1
0\+
0?1
1]+
0`+
1@1
0C1
0[+
0>1
0T+
071
1U+
0X+
181
0;1
0S+
061
0L+
0/1
1M+
0P+
101
031
0K+
0.1
0D+
0'1
1E+
0H+
1(1
0+1
0C+
0&1
0<+
0}0
1=+
0@+
1~0
0#1
0;+
0|0
04+
0u0
15+
08+
1v0
0y0
03+
0t0
0,+
0m0
1-+
00+
1n0
0q0
0++
0l0
0$+
0e0
1%+
0(+
1f0
0i0
0#+
0d0
0z*
0]0
1{*
0~*
1^0
0a0
0y*
0\0
0r*
0U0
1s*
0v*
1V0
0Y0
0q*
0T0
0j*
0M0
1k*
0n*
1N0
0Q0
0i*
0L0
0b*
0E0
1c*
0f*
1F0
0I0
0a*
0D0
0Z*
0=0
1[*
0^*
1>0
0A0
0Y*
0<0
0R*
050
1S*
0V*
160
090
0Q*
040
0J*
0-0
1K*
0N*
1.0
010
0I*
0,0
0B*
0%0
1C*
0F*
1&0
0)0
0A*
0$0
0:*
0{/
1;*
0>*
1|/
0!0
09*
0z/
02*
0s/
13*
06*
1t/
0w/
01*
0r/
0**
0k/
1+*
0.*
1l/
0o/
0)*
0j/
0"*
0c/
1#*
0&*
1d/
0g/
0!*
0b/
0x)
0[/
1y)
0|)
1\/
0_/
0w)
0Z/
0p)
0S/
1q)
0t)
1T/
0W/
0o)
0R/
0h)
0K/
1i)
0l)
1L/
0O/
0g)
0J/
0`)
0C/
1a)
0d)
1D/
0G/
0_)
0B/
0X)
0;/
1Y)
0\)
1</
0?/
0W)
0:/
0P)
03/
1Q)
0T)
14/
07/
0O)
02/
0H)
0+/
1I)
0L)
1,/
0//
0G)
0*/
0@)
0#/
1A)
0D)
1$/
0'/
0?)
0"/
08)
0y.
19)
0<)
1z.
0}.
07)
0x.
00)
0q.
11)
04)
1r.
0u.
0/)
0p.
0()
0i.
1))
0,)
1j.
0m.
0')
0h.
0~(
0a.
1!)
0$)
1b.
0e.
0}(
0`.
0v(
0Y.
1w(
0z(
1Z.
0].
0u(
0X.
0n(
0Q.
1o(
0r(
1R.
0U.
0m(
0P.
0f(
0I.
1g(
0j(
1J.
0M.
0e(
0H.
0^(
0A.
1_(
0b(
1B.
0E.
0](
0@.
0V(
09.
1W(
0Z(
1:.
0=.
0U(
08.
0N(
01.
1O(
0R(
12.
05.
0M(
00.
0F(
0).
1G(
0J(
1*.
0-.
0E(
0(.
0>(
0!.
1?(
0B(
1".
0%.
0=(
0~-
06(
0w-
17(
0:(
1x-
0{-
05(
0v-
0.(
0o-
1/(
02(
1p-
0s-
0-(
0n-
0&(
0g-
1'(
0*(
1h-
0k-
0%(
0f-
0|'
0_-
1}'
0"(
1`-
0c-
0{'
0^-
0t'
0W-
1u'
0x'
1X-
0[-
0s'
0V-
0l'
0O-
1m'
0p'
1P-
0S-
0k'
0N-
0d'
0G-
1e'
0h'
1H-
0K-
0v
0c'
0F-
0t
b0 R
b0 6'
0;'
0\'
0?-
12-
1O'
0m
b10 9'
1S'
1]'
0`'
16-
1@-
0C-
05-
1--
0R'
1J'
0q
0l
1L'
0['
1/-
0>-
b1111111111111111111111111111111111111111111111111111111111111001 %-
b1111111111111111111111111111111111111111111111111111111111111001 (-
b1111111111111111111111111111111111111111111111111111111111111001 B'
b1111111111111111111111111111111111111111111111111111111111111001 E'
1f
b1000 `
0e
b1011 Z
b1011 ^
1n
b10 :'
1M'
0P'
b1111111111111111111111111111111111111111111111111111111111111111 5'
b1111111111111111111111111111111111111111111111111111111111111111 @'
b1111111111111111111111111111111111111111111111111111111111111111 G'
1U'
b11 H'
0T'
10-
03-
b1111111111111111111111111111111111111111111111111111111111111111 O
b1111111111111111111111111111111111111111111111111111111111111111 #-
b1111111111111111111111111111111111111111111111111111111111111111 *-
18-
b11 +-
07-
1k
0c
1g
0h
1o
b1111111111111111111111111111111111111111111111111111111111111100 ='
b1 <'
0N'
0V'
0W'
b100 Y
b100 w,
b111 V
b111 u,
b11 N
b11 t,
01-
09-
0:-
b110 U
b110 a
b110 >'
b110 C'
b110 v,
b110 y,
b110 &-
1b
0j
1I'
0Q'
b101000000 T
b101000000 z,
b0 ~,
b0 !-
b101000000 },
1,-
04-
b111 9
b111 Z2
b111 `2
b111 %3
1/
b111 ?
b111 [
b111 !3
b110 =
b110 "3
b101 >
b101 M
b101 \
b101 .'
b101 ?'
b101 D'
b101 s,
b101 x,
b101 "-
b101 '-
b1000 }2
b1000 z2
b111 ]2
b1000 (3
b100011 @
b100011 \2
1E
0K
b1000 '
b1000 H3
b101000 *
b1010011001100000011 ,
b1010011001100000011 w2
b1010011001100000011 +3
b1100001111010000110011 3
b1100001111010000110011 {2
b1100001111010000110011 >3
b100000 0
b100000 X2
b100000 ?3
b0 W
b0 53
b110 X
b110 43
b1001 t2
b1001 83
b11 m2
b11 <3
b1 n2
b1 :3
b11 63
b110 =3
b101 ;3
b101 l2
b101 s2
b101 A3
b101 c2
b101 B3
b1 f2
b1 -3
b1 @3
b100 j2
b100 E3
b100 G3
b1000 C3
b100100 &
b100100 v2
b100100 ,3
b100100 B
1!
#110
b1100001111010000110011 %
b1010 $
0!
#115
b100 ?
b100 [
b100 !3
17
12
b11 9
b11 Z2
b11 `2
b11 %3
1/
b0 -
b0 V2
b0 13
b0 L3
b1000 .
b1000 W2
b1000 23
b1000 K3
b1 '
b1 H3
1D
0E
b110 }2
b110 z2
b0 |2
b0 J3
b1010 I3
b11 ]2
b11 _2
b0 r2
b1010 q2
b110 (3
b0 *3
b1010 )3
b0 4
b0 Y2
b0 ~2
b0 '3
b100100 @
b100100 \2
b101100 *
b10001010011010000100011 ,
b10001010011010000100011 w2
b10001010011010000100011 +3
b101 j2
b101 E3
b101 G3
b1 C3
b1001 l2
b1001 s2
b1001 A3
b110 c2
b110 B3
b111 f2
b111 -3
b111 @3
b111 X
b111 43
b1000 t2
b1000 83
b1010011001100000011 3
b1010011001100000011 {2
b1010011001100000011 >3
b100100 0
b100100 X2
b100100 ?3
b101000 &
b101000 v2
b101000 ,3
b101000 B
1!
#120
b1010011001100000011 %
b1011 $
0!
#125
b0 S
b0 7'
01'
02'
03'
1A'
1$-
1n,
1Q2
0o,
1r,
0R2
1U2
1m,
1P2
1f,
1I2
0g,
1j,
0J2
1M2
1e,
1H2
1^,
1A2
0_,
1b,
0B2
1E2
1],
1@2
1V,
192
0W,
1Z,
0:2
1=2
1U,
182
1N,
112
0O,
1R,
022
152
1M,
102
1F,
1)2
0G,
1J,
0*2
1-2
1E,
1(2
1>,
1!2
0?,
1B,
0"2
1%2
1=,
1~1
16,
1w1
07,
1:,
0x1
1{1
15,
1v1
1.,
1o1
0/,
12,
0p1
1s1
1-,
1n1
1&,
1g1
0',
1*,
0h1
1k1
1%,
1f1
1|+
1_1
0}+
1",
0`1
1c1
1{+
1^1
1t+
1W1
0u+
1x+
0X1
1[1
1s+
1V1
1l+
1O1
0m+
1p+
0P1
1S1
1k+
1N1
1d+
1G1
0e+
1h+
0H1
1K1
1c+
1F1
1\+
1?1
0]+
1`+
0@1
1C1
1[+
1>1
1T+
171
0U+
1X+
081
1;1
1S+
161
1L+
1/1
0M+
1P+
001
131
1K+
1.1
1D+
1'1
0E+
1H+
0(1
1+1
1C+
1&1
1<+
1}0
0=+
1@+
0~0
1#1
1;+
1|0
14+
1u0
05+
18+
0v0
1y0
13+
1t0
1,+
1m0
0-+
10+
0n0
1q0
1++
1l0
1$+
1e0
0%+
1(+
0f0
1i0
1#+
1d0
1z*
1]0
0{*
1~*
0^0
1a0
1y*
1\0
1r*
1U0
0s*
1v*
0V0
1Y0
1q*
1T0
1j*
1M0
0k*
1n*
0N0
1Q0
1i*
1L0
1b*
1E0
0c*
1f*
0F0
1I0
1a*
1D0
1Z*
1=0
0[*
1^*
0>0
1A0
1Y*
1<0
1R*
150
0S*
1V*
060
190
1Q*
140
1J*
1-0
0K*
1N*
0.0
110
1I*
1,0
1B*
1%0
0C*
1F*
0&0
1)0
1A*
1$0
1:*
1{/
0;*
1>*
0|/
1!0
19*
1z/
12*
1s/
03*
16*
0t/
1w/
11*
1r/
1**
1k/
0+*
1.*
0l/
1o/
1)*
1j/
1"*
1c/
0#*
1&*
0d/
1g/
1!*
1b/
1x)
1[/
0y)
1|)
0\/
1_/
1w)
1Z/
1p)
1S/
0q)
1t)
0T/
1W/
1o)
1R/
1h)
1K/
0i)
1l)
0L/
1O/
1g)
1J/
1`)
1C/
0a)
1d)
0D/
1G/
1_)
1B/
1X)
1;/
0Y)
1\)
0</
1?/
1W)
1:/
1P)
13/
0Q)
1T)
04/
17/
1O)
12/
1H)
1+/
0I)
1L)
0,/
1//
1G)
1*/
1@)
1#/
0A)
1D)
0$/
1'/
1?)
1"/
18)
1y.
09)
1<)
0z.
1}.
17)
1x.
10)
1q.
01)
14)
0r.
1u.
1/)
1p.
1()
1i.
0))
1,)
0j.
1m.
1')
1h.
1~(
1a.
0!)
1$)
0b.
1e.
1}(
1`.
1v(
1Y.
0w(
1z(
0Z.
1].
1u(
1X.
1n(
1Q.
0o(
1r(
0R.
1U.
1m(
1P.
1f(
1I.
0g(
1j(
0J.
1M.
1e(
1H.
1^(
1A.
0_(
1b(
0B.
1E.
1](
1@.
1V(
19.
0W(
1Z(
0:.
1=.
1U(
18.
1N(
11.
0O(
1R(
02.
15.
1M(
10.
1F(
1).
0G(
1J(
0*.
1-.
1E(
1(.
1>(
1!.
0?(
1B(
0".
1%.
1=(
1~-
16(
1w-
07(
1:(
0x-
1{-
15(
1v-
1.(
1o-
0/(
12(
0p-
1s-
1-(
1n-
1&(
1g-
0'(
1*(
0h-
1k-
1%(
1f-
1|'
1_-
1c'
0}'
1"(
1F-
0`-
1c-
1\'
1{'
1?-
1^-
1`'
1t'
1C-
1W-
1['
0u'
1x'
1>-
0X-
1[-
1T'
1s'
17-
1V-
0("
0U'
1X'
1l'
08-
1;-
1O-
0&"
0m'
1p'
0P-
1S-
0}
1S'
1k'
16-
1N-
19-
1V'
b0 9'
0|
0f
1~
0#"
0M'
1P'
1L'
0]'
b1000 5'
b1000 @'
b1000 G'
1e'
b11111111111111111111111111111111111111111111111111111111111111111 H'
1d'
00-
13-
1/-
0@-
b1000 O
b1000 #-
b1000 *-
1H-
b11111111111111111111111111111111111111111111111111111111111111111 +-
1G-
1=-
15-
1Z'
1R'
b0 `
0u
b1000 Z
b1000 ^
0n
0g
1!"
b1000 <'
1N'
0O'
1^'
0f'
1g'
11-
02-
1A-
0I-
1J-
b1111111111111111111111111111111111111111111111111111111111111111 %-
b1111111111111111111111111111111111111111111111111111111111111111 (-
b0 Y
b0 w,
b1000 N
b1000 t,
b1000 V
b1000 u,
b1111111111111111111111111111111111111111111111111111111111111111 B'
b1111111111111111111111111111111111111111111111111111111111111111 E'
b0 :'
b1111111111111111111111111111111111111111111111111111111111110111 ='
0x
0o
0b
0r
1z
0I'
0Y'
1a'
0,-
0<-
1D-
1[2
b1000 -
b1000 V2
b1000 13
b1000 L3
b1 5
b1 b2
b1 y2
11
17
0/
02
0s
0k
b1000 Q
b1000 {,
b1000 P
b1000 |,
b1000 T
b1000 z,
b1000 ~,
b1000 !-
b1000 },
b0 ?
b0 [
b0 !3
b0 =
b0 "3
b1000 >
b1000 M
b1000 \
b1000 .'
b1000 ?'
b1000 D'
b1000 s,
b1000 x,
b1000 "-
b1000 '-
b1000 }2
b1000 z2
b100 |2
b100 J3
b100011 _2
b100 r2
b1000 (3
b100 *3
b1000 4
b1000 Y2
b1000 ~2
b1000 '3
b110000 @
b110000 \2
b0 U
b0 a
b0 >'
b0 C'
b0 v,
b0 y,
b0 &-
1H
0D
b111 '
b111 H3
b110000 *
b100111000001110010011 ,
b100111000001110010011 w2
b100111000001110010011 +3
b10001010011010000100011 3
b10001010011010000100011 {2
b10001010011010000100011 >3
b101000 0
b101000 X2
b101000 ?3
133
1u2
b11 X
b11 43
b110 t2
b110 83
b0 m2
b0 <3
b1010 n2
b1010 :3
b0 63
b0 =3
b1000 ;3
b1000 l2
b1000 s2
b1000 A3
b100 f2
b100 -3
b100 @3
b1001 j2
b1001 E3
b1001 G3
b111 C3
b101100 &
b101100 v2
b101100 ,3
b101100 B
1!
#130
b10001010011010000100011 %
b1100 $
0!
#135
b0 S
b0 7'
01'
02'
1$-
03'
1A'
1Q2
1n,
0R2
1U2
0o,
1r,
1P2
1m,
1I2
1f,
0J2
1M2
0g,
1j,
1H2
1e,
1A2
1^,
0B2
1E2
0_,
1b,
1@2
1],
192
1V,
0:2
1=2
0W,
1Z,
182
1U,
112
1N,
022
152
0O,
1R,
102
1M,
1)2
1F,
0*2
1-2
0G,
1J,
1(2
1E,
1!2
1>,
0"2
1%2
0?,
1B,
1~1
1=,
1w1
16,
0x1
1{1
07,
1:,
1v1
15,
1o1
1.,
0p1
1s1
0/,
12,
1n1
1-,
1g1
1&,
0h1
1k1
0',
1*,
1f1
1%,
1_1
1|+
0`1
1c1
0}+
1",
1^1
1{+
1W1
1t+
0X1
1[1
0u+
1x+
1V1
1s+
1O1
1l+
0P1
1S1
0m+
1p+
1N1
1k+
1G1
1d+
0H1
1K1
0e+
1h+
1F1
1c+
1?1
1\+
0@1
1C1
0]+
1`+
1>1
1[+
171
1T+
081
1;1
0U+
1X+
161
1S+
1/1
1L+
001
131
0M+
1P+
1.1
1K+
1'1
1D+
0(1
1+1
0E+
1H+
1&1
1C+
1}0
1<+
0~0
1#1
0=+
1@+
1|0
1;+
1u0
14+
0v0
1y0
05+
18+
1t0
13+
1m0
1,+
0n0
1q0
0-+
10+
1l0
1++
1e0
1$+
0f0
1i0
0%+
1(+
1d0
1#+
1]0
1z*
0^0
1a0
0{*
1~*
1\0
1y*
1U0
1r*
0V0
1Y0
0s*
1v*
1T0
1q*
1M0
1j*
0N0
1Q0
0k*
1n*
1L0
1i*
1E0
1b*
0F0
1I0
0c*
1f*
1D0
1a*
1=0
1Z*
0>0
1A0
0[*
1^*
1<0
1Y*
150
1R*
060
190
0S*
1V*
140
1Q*
1-0
1J*
0.0
110
0K*
1N*
1,0
1I*
1%0
1B*
0&0
1)0
0C*
1F*
1$0
1A*
1{/
1:*
0|/
1!0
0;*
1>*
1z/
19*
1s/
12*
0t/
1w/
03*
16*
1r/
11*
1k/
1**
0l/
1o/
0+*
1.*
1j/
1)*
1c/
1"*
0d/
1g/
0#*
1&*
1b/
1!*
1[/
1x)
0\/
1_/
0y)
1|)
1Z/
1w)
1S/
1p)
0T/
1W/
0q)
1t)
1R/
1o)
1K/
1h)
0L/
1O/
0i)
1l)
1J/
1g)
1C/
1`)
0D/
1G/
0a)
1d)
1B/
1_)
1;/
1X)
0</
1?/
0Y)
1\)
1:/
1W)
13/
1P)
04/
17/
0Q)
1T)
12/
1O)
1+/
1H)
0,/
1//
0I)
1L)
1*/
1G)
1#/
1@)
0$/
1'/
0A)
1D)
1"/
1?)
1y.
18)
0z.
1}.
09)
1<)
1x.
17)
1q.
10)
0r.
1u.
01)
14)
1p.
1/)
1i.
1()
0j.
1m.
0))
1,)
1h.
1')
1a.
1~(
0b.
1e.
0!)
1$)
1`.
1}(
1Y.
1v(
0Z.
1].
0w(
1z(
1X.
1u(
1Q.
1n(
0R.
1U.
0o(
1r(
1P.
1m(
1I.
1f(
0J.
1M.
0g(
1j(
1H.
1e(
1A.
1^(
0B.
1E.
0_(
1b(
1@.
1](
19.
1V(
0:.
1=.
0W(
1Z(
18.
1U(
11.
1N(
02.
15.
0O(
1R(
10.
1M(
1).
1F(
0*.
1-.
0G(
1J(
1(.
1E(
1!.
1>(
0".
1%.
0?(
1B(
1~-
1=(
1w-
16(
0x-
1{-
07(
1:(
1v-
15(
1o-
1.(
0p-
1s-
0/(
12(
1n-
1-(
1g-
1&(
0h-
1k-
0'(
1*(
1f-
1%(
1_-
1|'
0`-
1c-
0}'
1"(
1^-
1{'
1W-
1t'
0X-
1[-
0u'
1x'
1V-
1s'
1O-
1l'
0P-
1S-
0m'
1p'
1N-
1k'
b0 O
b0 #-
b0 *-
0H-
1K-
b11111111111111111111111111111111111111111111111111111111111111111 +-
1G-
b0 5'
b0 @'
b0 G'
0e'
1h'
b11111111111111111111111111111111111111111111111111111111111111111 H'
1d'
1("
1I-
0J-
1f'
0g'
1&"
0E-
0b'
b0 <'
b10000 Z
b10000 ^
0~
b10000 `
1}
b1111111111111111111111111111111111111111111111111111111111110111 %-
b1111111111111111111111111111111111111111111111111111111111110111 (-
b0 N
b0 t,
b1000 Y
b1000 w,
b1111111111111111111111111111111111111111111111111111111111110111 B'
b1111111111111111111111111111111111111111111111111111111111110111 E'
b1111111111111111111111111111111111111111111111111111111111111111 ='
0!"
1""
1{
b0 Q
b0 {,
b0 P
b0 |,
b100000000000 T
b100000000000 z,
b0 ~,
b0 !-
b100000000000 },
b1000 =
b1000 "3
1/
17
b0 5
b0 b2
b0 y2
b0 9
b0 Z2
b0 `2
b0 %3
01
b101 -
b101 V2
b101 13
b101 L3
0[2
b0 .
b0 W2
b0 23
b0 K3
b100 '
b100 H3
b1010 +
b1010 g2
b1010 .3
b1000 U
b1000 a
b1000 >'
b1000 C'
b1000 v,
b1000 y,
b1000 &-
b100000000110 }2
b111 z2
b1 |2
b1 J3
b111 I3
b0 ]2
b10011 _2
b1 r2
b111 q2
b111 (3
b1 *3
b111 )3
b1 4
b1 Y2
b1 ~2
b1 '3
b101101 @
b101101 \2
b110100 *
b11111110000100111001110011100011 ,
b11111110000100111001110011100011 w2
b11111110000100111001110011100011 +3
b1000 j2
b1000 E3
b1000 G3
b100 C3
1e2
b110 l2
b110 s2
b110 A3
b0 c2
b0 B3
b0 f2
b0 -3
b0 @3
093
173
0u2
b1000 t2
b1000 83
b100 m2
b100 <3
b1000 63
b1000 =3
b100111000001110010011 3
b100111000001110010011 {2
b100111000001110010011 >3
b101100 0
b101100 X2
b101100 ?3
b110000 &
b110000 v2
b110000 ,3
b110000 B
1!
#140
b100111000001110010011 %
b1101 $
0!
#145
b1 S
b1 7'
11'
12'
13'
0A'
0$-
0n,
0Q2
1o,
0r,
1R2
0U2
0m,
0P2
0f,
0I2
1g,
0j,
1J2
0M2
0e,
0H2
0^,
0A2
1_,
0b,
1B2
0E2
0],
0@2
0V,
092
1W,
0Z,
1:2
0=2
0U,
082
0N,
012
1O,
0R,
122
052
0M,
002
0F,
0)2
1G,
0J,
1*2
0-2
0E,
0(2
0>,
0!2
1?,
0B,
1"2
0%2
0=,
0~1
06,
0w1
17,
0:,
1x1
0{1
05,
0v1
0.,
0o1
1/,
02,
1p1
0s1
0-,
0n1
0&,
0g1
1',
0*,
1h1
0k1
0%,
0f1
0|+
0_1
1}+
0",
1`1
0c1
0{+
0^1
0t+
0W1
1u+
0x+
1X1
0[1
0s+
0V1
0l+
0O1
1m+
0p+
1P1
0S1
0k+
0N1
0d+
0G1
1e+
0h+
1H1
0K1
0c+
0F1
0\+
0?1
1]+
0`+
1@1
0C1
0[+
0>1
0T+
071
1U+
0X+
181
0;1
0S+
061
0L+
0/1
1M+
0P+
101
031
0K+
0.1
0D+
0'1
1E+
0H+
1(1
0+1
0C+
0&1
0<+
0}0
1=+
0@+
1~0
0#1
0;+
0|0
04+
0u0
15+
08+
1v0
0y0
03+
0t0
0,+
0m0
1-+
00+
1n0
0q0
0++
0l0
0$+
0e0
1%+
0(+
1f0
0i0
0#+
0d0
0z*
0]0
1{*
0~*
1^0
0a0
0y*
0\0
0r*
0U0
1s*
0v*
1V0
0Y0
0q*
0T0
0j*
0M0
1k*
0n*
1N0
0Q0
0i*
0L0
0b*
0E0
1c*
0f*
1F0
0I0
0a*
0D0
0Z*
0=0
1[*
0^*
1>0
0A0
0Y*
0<0
0R*
050
1S*
0V*
160
090
0Q*
040
0J*
0-0
1K*
0N*
1.0
010
0I*
0,0
0B*
0%0
1C*
0F*
1&0
0)0
0A*
0$0
0:*
0{/
1;*
0>*
1|/
0!0
09*
0z/
02*
0s/
13*
06*
1t/
0w/
01*
0r/
0**
0k/
1+*
0.*
1l/
0o/
0)*
0j/
0"*
0c/
1#*
0&*
1d/
0g/
0!*
0b/
0x)
0[/
1y)
0|)
1\/
0_/
0w)
0Z/
0p)
0S/
1q)
0t)
1T/
0W/
0o)
0R/
0h)
0K/
1i)
0l)
1L/
0O/
0g)
0J/
0`)
0C/
1a)
0d)
1D/
0G/
0_)
0B/
0X)
0;/
1Y)
0\)
1</
0?/
0W)
0:/
0P)
03/
1Q)
0T)
14/
07/
0O)
02/
0H)
0+/
1I)
0L)
1,/
0//
0G)
0*/
0@)
0#/
1A)
0D)
1$/
0'/
0?)
0"/
08)
0y.
19)
0<)
1z.
0}.
07)
0x.
00)
0q.
11)
04)
1r.
0u.
0/)
0p.
0()
0i.
1))
0,)
1j.
0m.
0')
0h.
0~(
0a.
1!)
0$)
1b.
0e.
0}(
0`.
0v(
0Y.
1w(
0z(
1Z.
0].
0u(
0X.
0n(
0Q.
1o(
0r(
1R.
0U.
0m(
0P.
0f(
0I.
1g(
0j(
1J.
0M.
0e(
0H.
0^(
0A.
1_(
0b(
1B.
0E.
0](
0@.
0V(
09.
1W(
0Z(
1:.
0=.
0U(
08.
0N(
01.
1O(
0R(
12.
05.
0M(
00.
0F(
0).
1G(
0J(
1*.
0-.
0E(
0(.
0>(
0!.
1?(
0B(
1".
0%.
0=(
0~-
06(
0w-
17(
0:(
1x-
0{-
05(
0v-
0.(
0o-
1/(
02(
1p-
0s-
0-(
0n-
0&(
0g-
1'(
0*(
1h-
0k-
0%(
0f-
0|'
0_-
0F-
0c'
1}'
0"(
1`-
0c-
0?-
0\'
0{'
0^-
1@-
0C-
1]'
0`'
0t'
0W-
0>-
0['
1u'
0x'
1X-
0[-
07-
0T'
0s'
0V-
18-
0;-
1U'
0X'
0l'
0O-
06-
0S'
1m'
0p'
1P-
0S-
0/-
0L'
0k'
0N-
10-
03-
1M'
0P'
b1 R
b1 6'
1;'
0("
b1 H'
0d'
b1 +-
0G-
01-
0N'
b1 9'
0&"
b1111111111111111111111111111111111111111111111111111111111111111 5'
b1111111111111111111111111111111111111111111111111111111111111111 @'
b1111111111111111111111111111111111111111111111111111111111111111 G'
1e'
0h'
b1111111111111111111111111111111111111111111111111111111111111111 O
b1111111111111111111111111111111111111111111111111111111111111111 #-
b1111111111111111111111111111111111111111111111111111111111111111 *-
1H-
0K-
1E-
0--
1b'
0J'
b0 `
0}
b1 Z
b1 ^
1f
1f'
1I-
1<
1)
1(
1A
b1111111111111111111111111111111111111111111111111111111111111110 %-
b1111111111111111111111111111111111111111111111111111111111111110 (-
b0 Y
b0 w,
b1 N
b1 t,
b1 V
b1 u,
b1111111111111111111111111111111111111111111111111111111111111110 B'
b1111111111111111111111111111111111111111111111111111111111111110 E'
b1 :'
b1111111111111111111111111111111111111111111111111111111111111110 ='
0""
1g
0z
0a'
0D-
b10 5
b10 b2
b10 y2
16
07
b1111111 8
b1111111 a2
b1111111 &3
b1 9
b1 Z2
b1 `2
b1 %3
0/
b1 ?
b1 [
b1 !3
0{
1c
b0 T
b0 z,
b0 },
b101 =
b101 "3
b0 >
b0 M
b0 \
b0 .'
b0 ?'
b0 D'
b0 s,
b0 x,
b0 "-
b0 '-
b1111111111000 }2
b111111111001 z2
b111111100001 |2
b1111111 ^2
b1 ]2
b1100011 _2
b11001 (3
b111111111111111111111111111111111111111111111111111111111111100 4
b111111111111111111111111111111111111111111111111111111111111100 Y2
b111111111111111111111111111111111111111111111111111111111111100 ~2
b111111111111111111111111111111111111111111111111111111111111100 '3
b1000000000000000000000000000000000000000000000000000000000101100 @
b1000000000000000000000000000000000000000000000000000000000101100 \2
0H
1C
b1 U
b1 a
b1 >'
b1 C'
b1 v,
b1 y,
b1 &-
b0 +
b0 g2
b0 .3
b1010 '
b1010 H3
b1000000000000000000000000000000000000000000000000000000000101100 *
b10011 ,
b10011 w2
b10011 +3
b11111110000100111001110011100011 3
b11111110000100111001110011100011 {2
b11111110000100111001110011100011 >3
b110000 0
b110000 X2
b110000 ?3
193
073
b0 X
b0 43
b111 t2
b111 83
b1 m2
b1 <3
b111 n2
b111 :3
b1 63
b101 =3
b0 ;3
0k2
1d2
0e2
b1000 l2
b1000 s2
b1000 A3
b1000 c2
b1000 B3
1D3
b110 j2
b110 E3
b110 G3
b0 C3
b1010 F3
b110100 &
b110100 v2
b110100 ,3
b110100 B
1!
#150
b11111110000100111001110011100011 %
b1110 $
0!
#155
b0 S
b0 7'
01'
02'
1$-
03'
1A'
1Q2
1n,
0R2
1U2
0o,
1r,
1P2
1m,
1I2
1f,
0J2
1M2
0g,
1j,
1H2
1e,
1A2
1^,
0B2
1E2
0_,
1b,
1@2
1],
192
1V,
0:2
1=2
0W,
1Z,
182
1U,
112
1N,
022
152
0O,
1R,
102
1M,
1)2
1F,
0*2
1-2
0G,
1J,
1(2
1E,
1!2
1>,
0"2
1%2
0?,
1B,
1~1
1=,
1w1
16,
0x1
1{1
07,
1:,
1v1
15,
1o1
1.,
0p1
1s1
0/,
12,
1n1
1-,
1g1
1&,
0h1
1k1
0',
1*,
1f1
1%,
1_1
1|+
0`1
1c1
0}+
1",
1^1
1{+
1W1
1t+
0X1
1[1
0u+
1x+
1V1
1s+
1O1
1l+
0P1
1S1
0m+
1p+
1N1
1k+
1G1
1d+
0H1
1K1
0e+
1h+
1F1
1c+
1?1
1\+
0@1
1C1
0]+
1`+
1>1
1[+
171
1T+
081
1;1
0U+
1X+
161
1S+
1/1
1L+
001
131
0M+
1P+
1.1
1K+
1'1
1D+
0(1
1+1
0E+
1H+
1&1
1C+
1}0
1<+
0~0
1#1
0=+
1@+
1|0
1;+
1u0
14+
0v0
1y0
05+
18+
1t0
13+
1m0
1,+
0n0
1q0
0-+
10+
1l0
1++
1e0
1$+
0f0
1i0
0%+
1(+
1d0
1#+
1]0
1z*
0^0
1a0
0{*
1~*
1\0
1y*
1U0
1r*
0V0
1Y0
0s*
1v*
1T0
1q*
1M0
1j*
0N0
1Q0
0k*
1n*
1L0
1i*
1E0
1b*
0F0
1I0
0c*
1f*
1D0
1a*
1=0
1Z*
0>0
1A0
0[*
1^*
1<0
1Y*
150
1R*
060
190
0S*
1V*
140
1Q*
1-0
1J*
0.0
110
0K*
1N*
1,0
1I*
1%0
1B*
0&0
1)0
0C*
1F*
1$0
1A*
1{/
1:*
0|/
1!0
0;*
1>*
1z/
19*
1s/
12*
0t/
1w/
03*
16*
1r/
11*
1k/
1**
0l/
1o/
0+*
1.*
1j/
1)*
1c/
1"*
0d/
1g/
0#*
1&*
1b/
1!*
1[/
1x)
0\/
1_/
0y)
1|)
1Z/
1w)
1S/
1p)
0T/
1W/
0q)
1t)
1R/
1o)
1K/
1h)
0L/
1O/
0i)
1l)
1J/
1g)
1C/
1`)
0D/
1G/
0a)
1d)
1B/
1_)
1;/
1X)
0</
1?/
0Y)
1\)
1:/
1W)
13/
1P)
04/
17/
0Q)
1T)
12/
1O)
1+/
1H)
0,/
1//
0I)
1L)
1*/
1G)
1#/
1@)
0$/
1'/
0A)
1D)
1"/
1?)
1y.
18)
0z.
1}.
09)
1<)
1x.
17)
1q.
10)
0r.
1u.
01)
14)
1p.
1/)
1i.
1()
0j.
1m.
0))
1,)
1h.
1')
1a.
1~(
0b.
1e.
0!)
1$)
1`.
1}(
1Y.
1v(
0Z.
1].
0w(
1z(
1X.
1u(
1Q.
1n(
0R.
1U.
0o(
1r(
1P.
1m(
1I.
1f(
0J.
1M.
0g(
1j(
1H.
1e(
1A.
1^(
0B.
1E.
0_(
1b(
1@.
1](
19.
1V(
0:.
1=.
0W(
1Z(
18.
1U(
11.
1N(
02.
15.
0O(
1R(
10.
1M(
1).
1F(
0*.
1-.
0G(
1J(
1(.
1E(
1!.
1>(
0".
1%.
0?(
1B(
1~-
1=(
1w-
16(
0x-
1{-
07(
1:(
1v-
15(
1o-
1.(
0p-
1s-
0/(
12(
1n-
1-(
1g-
1&(
0h-
1k-
0'(
1*(
1f-
1%(
1_-
1|'
0`-
1c-
0}'
1"(
1^-
1{'
1W-
1t'
0X-
1[-
0u'
1x'
1V-
1s'
1O-
1l'
0P-
1S-
0m'
1p'
1N-
1k'
1G-
1d'
0H-
1K-
0e'
1h'
1F-
1c'
1?-
1\'
1C-
1`'
1>-
1['
17-
1T'
08-
1;-
0U'
1X'
16-
1S'
b11111111111111111111111111111111111111111111111111111111111111111 +-
1/-
b11111111111111111111111111111111111111111111111111111111111111111 H'
1L'
00-
13-
0M'
1P'
b0 R
b0 6'
0;'
11-
1N'
b0 O
b0 #-
b0 *-
0@-
b0 5'
b0 @'
b0 G'
0]'
1--
1J'
0f
1A-
1^'
b0 9'
0g
1=-
b0 ?
b0 [
b0 !3
1Z'
b0 Z
b0 ^
0v
0c
b1111111111111111111111111111111111111111111111111111111111111111 %-
b1111111111111111111111111111111111111111111111111111111111111111 (-
b0 N
b0 t,
b0 V
b0 u,
b1111111111111111111111111111111111111111111111111111111111111111 B'
b1111111111111111111111111111111111111111111111111111111111111111 E'
b0 :'
b1111111111111111111111111111111111111111111111111111111111111111 ='
0w
0s
b0 =
b0 "3
b0 5
b0 b2
b0 y2
b0 8
b0 a2
b0 &3
b0 9
b0 Z2
b0 `2
b0 %3
06
b111000 *
1[2
b0 -
b0 V2
b0 13
b0 L3
b0 '
b0 H3
0<
0)
0(
b0 U
b0 a
b0 >'
b0 C'
b0 v,
b0 y,
b0 &-
b0 }2
b0 z2
b0 |2
b0 J3
b0 I3
b0 ^2
b0 ]2
b0 _2
b0 r2
b0 q2
b0 (3
b0 *3
b0 )3
b0 4
b0 Y2
b0 ~2
b0 '3
b0 @
b0 \2
0A
0D3
0i2
b1000 j2
b1000 E3
b1000 G3
b0 F3
1k2
0d2
b111 l2
b111 s2
b111 A3
b101 c2
b101 B3
b1 f2
b1 -3
b1 @3
033
093
b0 t2
b0 83
b0 m2
b0 <3
b0 n2
b0 :3
b0 63
b0 =3
b0 3
b0 {2
b0 >3
b0 0
b0 X2
b0 ?3
1!
#160
b0 %
b1111 $
0!
#165
17
1/
b10011 _2
b110100 @
b110100 \2
b1 '
b1 H3
b111100 *
b10011 3
b10011 {2
b10011 >3
b110100 0
b110100 X2
b110100 ?3
0k2
b0 l2
b0 s2
b0 A3
b0 c2
b0 B3
b0 f2
b0 -3
b0 @3
1i2
b111 j2
b111 E3
b111 G3
b1 C3
b111000 &
b111000 v2
b111000 ,3
b111000 B
1!
#170
b10011 %
b10000 $
0!
#175
b0 '
b0 H3
b111000 @
b111000 \2
b1000000 *
0i2
b0 j2
b0 E3
b0 G3
b0 C3
133
193
b111000 0
b111000 X2
b111000 ?3
b111100 &
b111100 v2
b111100 ,3
b111100 B
1!
#180
b10001 $
0!
#185
b111100 @
b111100 \2
b1000100 *
b111100 0
b111100 X2
b111100 ?3
1k2
b1000000 &
b1000000 v2
b1000000 ,3
b1000000 B
1!
#190
b10010 $
0!
#195
b1000000 @
b1000000 \2
b1001000 *
1i2
b1000000 0
b1000000 X2
b1000000 ?3
b1000100 &
b1000100 v2
b1000100 ,3
b1000100 B
1!
#200
b10011 $
0!
#205
b1000100 @
b1000100 \2
b1001100 *
b1000100 0
b1000100 X2
b1000100 ?3
b1001000 &
b1001000 v2
b1001000 ,3
b1001000 B
1!
#210
b10100 $
0!
#215
b1001000 @
b1001000 \2
b1010000 *
b1001000 0
b1001000 X2
b1001000 ?3
b1001100 &
b1001100 v2
b1001100 ,3
b1001100 B
1!
#220
b10101 $
0!
#225
b1001100 @
b1001100 \2
b1010100 *
b1001100 0
b1001100 X2
b1001100 ?3
b1010000 &
b1010000 v2
b1010000 ,3
b1010000 B
b1011 O3
b100000 N3
1!
